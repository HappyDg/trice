<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:com.tasking.swp.builder.configmodel="http://com/tasking/swp/builder/config" xmlns:com.tasking.swp.builder.repomodel="http://com/tasking/swp/builder/repomodel">
  <com.tasking.swp.builder.configmodel:SwpConfig>
    <plugins name="pal_arch_cortex">
      <properties key="lslsection" value="linear"/>
    </plugins>
    <plugins name="cortex_arch_specials"/>
    <plugins name="drv_stm32_i2cm">
      <instances name="DRV_STM32_I2CM_1" downlinks="5a35d64e-55b9-4a56-81d0-3dce07f589f5" id="PMCPXCOT">
        <properties key="i2c_frequency" value="100000"/>
      </instances>
    </plugins>
    <plugins name="drv_stm32_i2sm">
      <instances name="DRV_STM32_I2SM_1" downlinks="e551064e-53d3-45b1-b1ec-5f68454b59e4" id="UOCSRIEW">
        <properties key="dma_priority" value="High"/>
        <properties key="i2s_audiofreq" value="22kHz"/>
        <properties key="i2s_cpol" value="Low"/>
        <properties key="i2s_dataformat" value="16bit"/>
        <properties key="i2s_mclkoutput" value="Enable"/>
        <properties key="i2s_mode" value="Transmit"/>
        <properties key="i2s_standard" value="Philips"/>
      </instances>
    </plugins>
    <plugins name="pal_arch_cortex_variant_stm32"/>
    <plugins name="drv_cs4322">
      <instances name="DRV_CS4322_1" downlinks="PMCPXCOT" id="EVEHGUVY">
        <properties key="i2c_address" value="0x94"/>
        <properties key="i2s_cpol" value="Low"/>
        <properties key="i2s_dataformat" value="16BIT"/>
        <properties key="i2s_standard" value="I2S_PHILIPS"/>
      </instances>
    </plugins>
    <plugins name="pal">
      <properties key="interrupt_control_cfg" value="0x8000C091"/>
      <properties key="clockhz" value="84000000"/>
    </plugins>
    <plugins name="ad_cs4322_to_audio">
      <instances name="AD_CS4322_TO_AUDIO_1" downlinks="EVEHGUVY" id="RSWALGNL"/>
    </plugins>
    <plugins name="ad_i2sm_to_audio">
      <instances name="AD_I2SM_TO_AUDIO_1" downlinks="UOCSRIEW" id="QVUKHSSH"/>
    </plugins>
    <plugins name="audio">
      <instances name="AUDIO_1" downlinks="RSWALGNL QVUKHSSH" id="EDXGENIO">
        <properties key="channels" value="Stereo"/>
        <properties key="samplerate" value="22050"/>
        <properties key="samplesize" value="16"/>
      </instances>
    </plugins>
    <plugins name="interrupts"/>
    <plugins name="timing">
      <properties key="clockhz" value="84000000"/>
    </plugins>
    <plugins name="sysutils"/>
    <plugins name="cstart"/>
    <plugins name="stm32_cmsis"/>
    <plugins name="stm32f4xx_cmsis">
      <properties key="xtal_hz" value="8000000"/>
      <properties key="sysclk" value="168000000"/>
      <properties key="clockhz" value="84000000"/>
      <properties key="apb1clk" value="21000000"/>
      <properties key="apb2clk" value="42000000"/>
      <properties key="xtal" value="8"/>
      <properties key="pll_used" value="True"/>
      <properties key="hse_used" value="True"/>
      <properties key="pll_input" value="1000000"/>
      <properties key="vcoclk" value="336000000"/>
      <properties key="usbclk" value="48000000"/>
      <properties key="pll_m" value="25"/>
      <properties key="pll_n" value="336"/>
      <properties key="apb1" value="4"/>
      <properties key="apb2" value="2"/>
      <properties key="pll_q" value="7"/>
    </plugins>
    <plugins name="per_stm32f4xx_i2c">
      <instances name="STM32F4XX_I2C1" id="5a35d64e-55b9-4a56-81d0-3dce07f589f5"/>
    </plugins>
    <plugins name="stm32f4xx_lib"/>
    <plugins name="per_stm32f4xx_gpio">
      <instances name="STM32F4XX_GPIOD" id="343717b1-52af-4b03-8e3e-39055d01513c">
        <properties key="pin4" value="PD4"/>
        <properties key="pinmode4" value="GPIO_MODE_OUT"/>
      </instances>
    </plugins>
    <plugins name="drv_stm32_gpio">
      <instances name="DRV_STM32_GPIO_1" downlinks="343717b1-52af-4b03-8e3e-39055d01513c" id="d58cdbda-6946-457a-86c5-a74c3b748bfc"/>
    </plugins>
    <plugins name="per_stm32f4xx_i2s">
      <instances name="STM32F4XX_I2S3" id="e551064e-53d3-45b1-b1ec-5f68454b59e4">
        <properties key="interrupt_dma_rx" value="11"/>
        <properties key="interrupt_dma_tx" value="16"/>
        <properties key="sd" value="PC12"/>
        <properties key="ws" value="PA4"/>
        <properties key="ck" value="PC10"/>
        <properties key="mclk" value="PC7"/>
        <properties key="interrupt0" value="51"/>
      </instances>
    </plugins>
    <plugins name="stm32_pinmapper"/>
    <external>
      <properties key="device" value="STM32F407VG"/>
      <properties key="toolchain" value="TASKING ARM"/>
      <properties key="architecture" value="ARMv7EM"/>
      <properties key="processor" value="PROC"/>
    </external>
  </com.tasking.swp.builder.configmodel:SwpConfig>
  <com.tasking.swp.builder.repomodel:SwpRepositoryCollection>
    <repositories rootURI="platform:/plugin/com.tasking.swp.repository.efm32/SoftwarePlatform/" version="1.25.0.0">
      <interfaceFiles relativeRootURI="platform/discrete/efm32/drivers/adc/" relativeFileURI="ini/drv_efm32_adc.Interface" name="drv_efm32_adc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/drivers/dac/" relativeFileURI="ini/drv_efm32_dac.Interface" name="drv_efm32_dac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/drivers/exti/" relativeFileURI="ini/drv_efm32_exti.Interface" name="drv_efm32_exti" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/drivers/uart/" relativeFileURI="ini/drv_efm32_uart.Interface" name="drv_efm32_uart" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/firmware/CMSIS/" relativeFileURI="ini/efm32_cmsis.Interface" name="efm32_cmsis" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/firmware/CMSIS/" relativeFileURI="ini/efm32_device.Interface" name="efm32_device" category="INTERNAL" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/firmware/CMSIS/" relativeFileURI="ini/efm32_family.Interface" name="efm32_family" category="INTERNAL" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/firmware/emlib/" relativeFileURI="ini/efm32_emlib.Interface" name="efm32_emlib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/adc/" relativeFileURI="ini/per_efm32_adc.Interface" name="per_efm32_adc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/dac/" relativeFileURI="ini/per_efm32_dac.Interface" name="per_efm32_dac" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/exti/" relativeFileURI="ini/per_efm32_exti.Interface" name="per_efm32_exti" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/gpio/" relativeFileURI="ini/per_efm32_gpio.Interface" name="per_efm32_gpio" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/i2c/" relativeFileURI="ini/per_efm32_i2c.Interface" name="per_efm32_i2c" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/uart/" relativeFileURI="ini/per_efm32_uart.Interface" name="per_efm32_uart" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/usart/" relativeFileURI="ini/per_efm32_usart.Interface" name="per_efm32_usart" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/peripherals/usb_otg/" relativeFileURI="ini/per_efm32_usb_otg.Interface" name="per_efm32_usb_otg" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/util/" relativeFileURI="ini/efm32_util.Interface" name="efm32_util" category="INTERNAL">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/adc/" relativeFileURI="ini/sl_efm32_adc.Interface" name="sl_efm32_adc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/dac/" relativeFileURI="ini/sl_efm32_dac.Interface" name="sl_efm32_dac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/dma/" relativeFileURI="ini/sl_efm32_dma.Interface" name="sl_efm32_dma" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/exti/" relativeFileURI="ini/sl_efm32_exti.Interface" name="sl_efm32_exti" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/gpio/" relativeFileURI="ini/sl_stm32_gpio.Interface" name="sl_efm32_gpio" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/i2c/" relativeFileURI="ini/sl_efm32_i2c.Interface" name="sl_efm32_i2c" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/i2s/" relativeFileURI="ini/sl_efm32_i2s.Interface" name="sl_efm32_i2s" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/spi/" relativeFileURI="ini/sl_efm32_spi.Interface" name="sl_efm32_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/uart/adaptors/" relativeFileURI="ini/sl_efm32_uart_adaptor.Interface" name="sl_efm32_uart_adaptor" category="ADAPTOR">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/efm32/vendor/uart/" relativeFileURI="ini/sl_efm32_uart.Interface" name="sl_efm32_uart" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_efm32_adc/" relativeFileURI="ini/ad_adc_to_efm32_adc.Plugin" name="ad_efm32_adc" implements="adc_adaptor" initHandler="ad_efm32_adc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts EFM32 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_efm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dac_to_efm32_dac/" relativeFileURI="ini/ad_dac_to_efm32_dac.Plugin" name="ad_efm32_dac" implements="dac_adaptor" initHandler="ad_efm32_dac_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts EFM32 DAC driver to DAC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_efm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dwc_usb_otg_to_efm32_usb_otg/" relativeFileURI="ini/ad_dwc_usb_otg_to_efm32_usb_otg.Plugin" name="ad_dwc_usb_otg_to_efm32_usb_otg" implements="dwc_usb_otg_adaptor" initHandler="ad_efm32_usb_otg_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts EFM32 USB OTG peripheral to Synopsys DWC USB OTG driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_extint_to_stm32_exti/" relativeFileURI="ini/ad_extint_to_stm32_exti.Plugin" name="efm32_exti_to_extint" implements="ad_extint" initHandler="efm32_exti_to_extint_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts EFM32 exti to generic external interrupt service</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_efm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_serial_to_efm32_uart/" relativeFileURI="ini/ad_serial_to_efm32_usart.Plugin" name="efm32_uart_to_serial" implements="serial_adaptor" initHandler="efm32_uart_to_serial_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>POSIX interface for EFM32 UART/USART serial port.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_efm32_uart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/adc/" relativeFileURI="ini/drv_efm32_adc.Plugin" name="drv_efm32_adc" implements="drv_efm32_adc" userTypeHeaderFile="em_adc.h">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_adc.c</sourceFiles>
        <captions>EFM32 ADC Driver</captions>
        <descriptions>Device driver for ADC peripherals on EFM devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="sl_efm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/dac/" relativeFileURI="ini/drv_efm32_dac.Plugin" name="drv_efm32_dac" implements="drv_efm32_dac" userTypeHeaderFile="em_dac.h">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_dac.c</sourceFiles>
        <captions>EFM32 DAC Driver</captions>
        <descriptions>Device driver for DAC peripherals on EFM devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="sl_efm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/exti/" relativeFileURI="ini/drv_efm32_exti.Plugin" name="drv_efm32_exti" implements="drv_efm32_exti">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_exti.c</sourceFiles>
        <pluginRequirements interface="interrupts"/>
        <captions>EFM32 EXTI Driver</captions>
        <descriptions>Device driver for EXTI controller on EFM32 devices</descriptions>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="sl_efm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/gpio/" relativeFileURI="ini/drv_efm32_gpio.Plugin" name="drv_efm32_gpio" implements="drv_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_gpio.c</sourceFiles>
        <captions>EFM32 GPIO Driver</captions>
        <descriptions>Device driver for GPIO peripherals on EFM32 devices</descriptions>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="sl_efm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/i2cm/" relativeFileURI="ini/drv_efm32_i2cm.Plugin" name="drv_efm32_i2cm" implements="drv_i2cm">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_i2cm.c</sourceFiles>
        <captions>EFM32 Master I2C Driver</captions>
        <descriptions>Device driver for I2C masters on EFM32 devices</descriptions>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="sl_efm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/i2sm/" relativeFileURI="ini/drv_efm32_i2sm.Plugin" name="drv_efm32_i2sm" implements="drv_i2sm">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_i2sm.c</sourceFiles>
        <pluginRequirements interface="sl_efm32_dma"/>
        <captions>EFM32 Master I2S Driver</captions>
        <descriptions>Device driver for I2S master on EFM32 devices</descriptions>
        <bitmaps>drv_i2s.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="sl_efm32_i2s"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/spi/" relativeFileURI="ini/drv_efm32_spi.Plugin" name="drv_efm32_spi" implements="drv_spi">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>SPI Driver</captions>
        <descriptions>SPI Master Controller Driver</descriptions>
        <instanceSection multipleLinks="true" multipleLinksMax="8">
          <instanceRequirements interface="sl_efm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/drivers/uart/" relativeFileURI="ini/drv_efm32_uart.Plugin" name="drv_efm32_uart" implements="drv_efm32_uart">
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_uart.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_efm32_uart_interrupts.c</sourceFiles>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="efm32_cmsis"/>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 UART Driver</captions>
        <descriptions>Device driver for UART peripherals on EFM devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="sl_efm32_uart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/CMSIS/" relativeFileURI="ini/efm32_cmsis.Plugin" name="efm32_cmsis" implements="efm32_cmsis">
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <pluginRequirements interface="efm32_family"/>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32G/" relativeFileURI="ini/efm32g.Plugin" name="efm32g_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32g.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32G[^G].*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32GG/" relativeFileURI="ini/efm32gg.Plugin" name="efm32gg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32gg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Giant Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32GG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32HG/" relativeFileURI="ini/efm32hg.Plugin" name="efm32hg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32hg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Happy Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32HG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32LG/" relativeFileURI="ini/efm32lg.Plugin" name="efm32lg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32lg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Leopard Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32LG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32TG/" relativeFileURI="ini/efm32tg.Plugin" name="efm32tg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32tg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Tiny Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32TG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32WG/" relativeFileURI="ini/efm32wg.Plugin" name="efm32wg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32wg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Wonder Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32WG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EFM32ZG/" relativeFileURI="ini/efm32zg.Plugin" name="efm32zg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_efm32zg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EFM32 Configuration</captions>
        <descriptions>System configuration for EFM32 Zero Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32ZG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EZR32LG/" relativeFileURI="ini/ezr32lg.Plugin" name="ezr32lg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_ezr32lg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EZR32 Configuration</captions>
        <descriptions>System configuration for EZR32 Leopard Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32LG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/Device/SiliconLabs/EZR32WG/" relativeFileURI="ini/ezr32wg.Plugin" name="ezr32wg_family" implements="efm32_family">
        <sourceFiles>$(SWP_RELPATH)\Source\system_ezr32wg.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\Include&quot;</globalCompileOptions>
        <captions>EZR32 Configuration</captions>
        <descriptions>System configuration for EZR32 Wonder Gecko devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32WG.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/firmware/emlib/" relativeFileURI="ini/efm32_emlib.Plugin" name="efm32_emlib" implements="efm32_emlib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=508,529,557,560</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="efm32_cmsis"/>
        <captions>EFM32 emlib</captions>
        <descriptions>Library code for EFM32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/pal_arch_cortex_variant/" relativeFileURI="ini/pal_arch_cortex_variant_efm32.Plugin" name="pal_arch_cortex_variant_efm32" implements="pal_arch_cortex_variant" generateData="false">
        <sourceFiles>$(SWP_RELPATH)\src\pal_arch_cortex_variant.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="efm32_cmsis"/>
        <pluginRequirements interface="efm32_emlib"/>
        <descriptions>Implementation of pal_arch_cortex_variant for EFM32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/adc/" relativeFileURI="ini/per_efm32_adc.Plugin" name="per_efm32_adc" implements="per_efm32_adc">
        <hardwareIds>EFM32_ADC</hardwareIds>
        <instanceIds>EFM32_ADC0</instanceIds>
        <captions>EFM32 ADC</captions>
        <descriptions>EFM32 Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/dac/" relativeFileURI="ini/per_efm32_dac.Plugin" name="per_efm32_dac" implements="per_efm32_dac">
        <hardwareIds>EFM32_DAC</hardwareIds>
        <instanceIds>EFM32_DAC0</instanceIds>
        <captions>EFM32 DAC</captions>
        <descriptions>EFM32 Digital-to-Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/exti/" relativeFileURI="ini/per_efm32_exti.Plugin" name="per_efm32_exti" implements="per_efm32_exti">
        <hardwareIds>EFM32_EXTI</hardwareIds>
        <captions>EFM32 EXTI</captions>
        <descriptions>EFM32 External Interrupts</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/gpio/" relativeFileURI="ini/per_efm32_gpio.Plugin" name="per_efm32_gpio" implements="per_efm32_gpio" userTypeHeaderFile="em_gpio.h">
        <hardwareIds>EFM32_GPIO</hardwareIds>
        <instanceIds>EFM32_GPIOA</instanceIds>
        <instanceIds>EFM32_GPIOB</instanceIds>
        <instanceIds>EFM32_GPIOC</instanceIds>
        <instanceIds>EFM32_GPIOD</instanceIds>
        <instanceIds>EFM32_GPIOE</instanceIds>
        <instanceIds>EFM32_GPIOF</instanceIds>
        <captions>EFM32 GPIO</captions>
        <descriptions>EFM32 General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/i2c/" relativeFileURI="ini/per_efm32_i2c.Plugin" name="per_efm32_i2c" implements="per_efm32_i2c">
        <hardwareIds>EFM32_I2C</hardwareIds>
        <instanceIds>EFM32_I2C0</instanceIds>
        <instanceIds>EFM32_I2C1</instanceIds>
        <captions>EFM32 I2C</captions>
        <descriptions>EFM32 I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/uart/" relativeFileURI="ini/per_efm32_uart.Plugin" name="per_efm32_uart" implements="per_efm32_uart">
        <hardwareIds>EFM32_UART</hardwareIds>
        <instanceIds>EFM32_UART0</instanceIds>
        <instanceIds>EFM32_UART1</instanceIds>
        <pluginRequirements interface="efm32_emlib"/>
        <captions>EFM32 UART</captions>
        <descriptions>EFM32 Universal Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/usart/" relativeFileURI="ini/per_efm32_usart.Plugin" name="per_efm32_usart" implements="per_efm32_usart" userTypeHeaderFile="em_usart.h">
        <hardwareIds>EFM32_USART</hardwareIds>
        <instanceIds>EFM32_USART0</instanceIds>
        <instanceIds>EFM32_USART1</instanceIds>
        <instanceIds>EFM32_USART2</instanceIds>
        <pluginRequirements interface="efm32_emlib"/>
        <captions>EFM32 USART</captions>
        <descriptions>EFM32 Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/peripherals/usb_otg/" relativeFileURI="ini/per_efm32_usb_otg.Plugin" name="per_efm32_usb_otg" implements="per_efm32_usb_otg">
        <hardwareIds>EFM32_USB_OTG</hardwareIds>
        <instanceIds>EFM32_USB_OTG_HS</instanceIds>
        <pluginRequirements interface="efm32_emlib"/>
        <captions>EFM32 USB OTG</captions>
        <descriptions>Silabs EFM32 peripheral library access for using HS Universal Serial BUS On-The-GO</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/util/" relativeFileURI="ini/efm32_util.Plugin" name="efm32_util" implements="efm32_util">
        <sourceFiles>$(SWP_RELPATH)\src\efm32_util.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_emlib"/>
        <descriptions>Internal plugin for use by efm32 drivers</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*" orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EZR32.*" orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/adc/" relativeFileURI="ini/sl_efm32_adc.Plugin" name="sl_efm32_adc" implements="sl_efm32_adc">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_adc.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 ADC Library Wrapper</captions>
        <descriptions>Library wrapper for ADC peripherals on EFM32 devices.</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/dac/" relativeFileURI="ini/sl_efm32_dac.Plugin" name="sl_efm32_dac" implements="sl_efm32_dac">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_dac.c</sourceFiles>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 DAC Library Wrapper</captions>
        <descriptions>Library wrapper for DAC peripherals on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/dma/" relativeFileURI="ini/sl_efm32_dma.Plugin" name="sl_efm32_dma" implements="sl_efm32_dma" initHandler="sl_efm32_dma_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>EFM32 DMA Library Wrapper</captions>
        <descriptions>Library wrapper for Direct Memory Access on EFM32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="EFM32.*"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/exti/" relativeFileURI="ini/sl_efm32_exti.Plugin" name="sl_efm32_exti" implements="sl_efm32_exti">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>EFM32 EXTI Library Wrapper</captions>
        <descriptions>Library wrapper for External Interrupts on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/gpio/" relativeFileURI="ini/sl_efm32_gpio.Plugin" name="sl_efm32_gpio" implements="sl_efm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_gpio.c</sourceFiles>
        <pluginRequirements interface="efm32_emlib"/>
        <captions>EFM32 GPIO Library Wrapper</captions>
        <descriptions>Library wrapper for GPIO peripherals on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/i2c/" relativeFileURI="ini/sl_efm32_i2c.Plugin" name="sl_efm32_i2c" implements="sl_efm32_i2c">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_i2c.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 I2C Library Wrapper</captions>
        <descriptions>Library wrapper for I2C peripherals on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/i2s/" relativeFileURI="ini/sl_efm32_i2s.Plugin" name="sl_efm32_i2s" implements="sl_efm32_i2s">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_i2s.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 I2S Library Wrapper</captions>
        <descriptions>Library wrapper for USART peripherals used for I2S on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/spi/" relativeFileURI="ini/sl_efm32_spi.Plugin" name="sl_efm32_spi" implements="sl_efm32_spi" userTypeHeaderFile="em_usart.h">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_spi.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 SPI Library Wrapper</captions>
        <descriptions>Library wrapper for USART peripherals used for SPI on EFM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/uart/adaptors/uart/" relativeFileURI="ini/sl_efm32_uart_to_uart.Plugin" name="sl_efm32_uart_to_uart" implements="sl_efm32_uart_adaptor" initHandler="sl_efm32_uart_to_uart_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts UART to EFM32 UART driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_uart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/uart/adaptors/usart/" relativeFileURI="ini/sl_efm32_usart_to_uart.Plugin" name="sl_efm32_usart_to_uart" implements="sl_efm32_uart_adaptor" initHandler="sl_efm32_usart_to_uart_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts USART to EFM32 UART driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_efm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/efm32/vendor/uart/" relativeFileURI="ini/sl_efm32_uart.Plugin" name="sl_efm32_uart" implements="sl_efm32_uart">
        <sourceFiles>$(SWP_RELPATH)\src\sl_efm32_uart.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="efm32_emlib"/>
        <pluginRequirements interface="efm32_util"/>
        <captions>EFM32 UART Library Wrapper</captions>
        <descriptions>SL Library wrapper for using UART/USART on EFM32 devices</descriptions>
        <bitmaps>sl_efm32_uart.bmp</bitmaps>
        <largeBitmaps>sl_efm32_uart_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="sl_efm32_uart_adaptor"/>
        </instanceSection>
      </pluginFiles>
    </repositories>
    <repositories rootURI="platform:/plugin/com.tasking.swp.repository.posix/SoftwarePlatform/" version="1.42.0.0">
      <interfaceFiles relativeRootURI="services/posix/base/" relativeFileURI="ini/posix_interface.Interface" name="posix_interface" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="services/posix/devio/base/" relativeFileURI="ini/posix_devio.Interface" name="posix_devio" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="services/posix/devio/blockio/" relativeFileURI="ini/blockio.Interface" name="blockio" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/devio/blockio/" relativeFileURI="ini/blockio_adaptor.Interface" name="blockio_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/posix/devio/dbg_terminal/" relativeFileURI="ini/dbg_terminal.Interface" name="dbg_terminal" category="DRIVER" alias="posix_devio">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/devio/devfs_minimal/" relativeFileURI="ini/devfs_minimal.Interface" name="devfs_minimal" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="services/posix/devio/keyboard/" relativeFileURI="ini/keyboard.Interface" name="keyboard" category="SERVICE" alias="posix_devio">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/devio/keyboard/" relativeFileURI="ini/keyboard_adaptor.Interface" name="keyboard_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/posix/devio/serial/" relativeFileURI="ini/serial.Interface" name="serial" category="SERVICE" alias="posix_devio">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/devio/serial/" relativeFileURI="ini/serial_adaptor.Interface" name="serial_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/posix/devio/textdisplay/" relativeFileURI="ini/textdisplay.Interface" name="textdisplay" category="SERVICE" alias="posix_devio">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/devio/textdisplay/" relativeFileURI="ini/textdisplay_adaptor.Interface" name="textdisplay_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/posix/errno/" relativeFileURI="ini/posix_errno.Interface" name="posix_errno" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem.Interface" name="posix_filesystem_mounting" category="SERVICE" isIncludedAsRequirementOnly="true">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem_require.Interface" name="filesystem_require" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem_require_sockfs.Interface" name="filesystem_require_sockfs" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/devfs/" relativeFileURI="ini/devfs.Interface" name="devfs" category="SERVICE" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/rootfs/" relativeFileURI="ini/rootfs.Interface" name="rootfs" category="SERVICE" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/shmfs/" relativeFileURI="ini/shmfs.Interface" name="shmfs" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/sockfs/" relativeFileURI="ini/sockfs.Interface" name="sockfs" category="SERVICE" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/storage/base/" relativeFileURI="ini/storage.Interface" name="posix_filesystem" category="SERVICE"/>
      <interfaceFiles relativeRootURI="services/posix/filesystem/storage/fatfs/" relativeFileURI="ini/fatfs.Interface" name="fatfs" category="SERVICE" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/posix/kernel/base/" relativeFileURI="ini/posix_kernel.Interface" name="posix_kernel" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="services/posix/kernel/ipc/" relativeFileURI="ini/posix_ipc.Interface" name="posix_ipc" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/kernel/signals/" relativeFileURI="ini/posix_signals.Interface" name="posix_signals" category="SERVICE"/>
      <interfaceFiles relativeRootURI="services/posix/kernel/threads/" relativeFileURI="ini/posix_threads.Interface" name="posix_threads" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/posix/libc_extensions/" relativeFileURI="ini/posix_libc_extensions.Interface" name="posix_libc_extensions" category="INTERNAL" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="services/posix/shmio/" relativeFileURI="ini/posix_shmio.Interface" name="posix_shmio" category="SERVICE" canBeVisible="false"/>
      <pluginFiles relativeRootURI="services/posix/base/" relativeFileURI="ini/posix_interface.Plugin" name="posix_interface" implements="posix_interface" generateData="false">
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_MEMLOCK</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_MEMLOCK_RANGE</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_SEMAPHORES</globalCompileOptions>
        <pluginRequirements interface="posix_libc_extensions"/>
        <captions>POSIX Interface</captions>
        <descriptions>Public and internal POSIX include files</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/base/" relativeFileURI="ini/posix_devio.Plugin" name="posix_devio" implements="posix_devio" initHandler="posix_devio_init" initHandlerPriority="3">
        <sourceFiles>$(SWP_RELPATH)\libc\_fopen.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\_iob.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\fdopen.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\fopen.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\freopen.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\fflush.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\libc\fclose.c</sourceFiles>
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-D__POSIX_DEVIO__</globalCompileOptions>
        <pluginRequirements interface="posix_interface"/>
        <pluginRequirements interface="posix_errno"/>
        <pluginRequirements interface="devfs_minimal"/>
        <pluginRequirements interface="devfs"/>
        <captions>POSIX Standard Device I/O</captions>
        <descriptions>Standard POSIX device I/O routines</descriptions>
        <bitmaps>posix_devio.bmp</bitmaps>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/blockio/" relativeFileURI="ini/blockio.Plugin" name="blockio" implements="blockio">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-D__BLOCKIO__</globalCompileOptions>
        <pluginRequirements interface="posix_devio"/>
        <captions>POSIX Standard File I/O (PSE52)</captions>
        <descriptions>POSIX compatible interface for block devices</descriptions>
        <bitmaps>blockio.bmp</bitmaps>
        <instanceSection generateName="true">
          <instanceRequirements interface="blockio_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/dbg_terminal/" relativeFileURI="ini/dbg_terminal.Plugin" name="dbg_terminal" implements="dbg_terminal" initHandler="dbg_terminal_init" initHandlerPriority="8" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="posix_devio"/>
        <captions>POSIX Debug Terminal</captions>
        <descriptions>POSIX compatible interface for debug terminal devices</descriptions>
        <bitmaps>dbg_terminal.bmp</bitmaps>
        <largeBitmaps>dbg_terminal_large.bmp</largeBitmaps>
        <instanceSection generateName="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/devfs_minimal/" relativeFileURI="ini/devfs_minimal.Plugin" name="devfs_minimal" implements="devfs_minimal">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-D__UNIFIED_HANDLES__=1</globalCompileOptions>
        <captions>POSIX Minimal Devfs</captions>
        <descriptions>Small device file system implementation (only for devio)</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/keyboard/" relativeFileURI="ini/keyboard.Plugin" name="keyboard" implements="keyboard">
        <pluginRequirements interface="posix_devio"/>
        <captions>POSIX Keyboard I/O</captions>
        <descriptions>POSIX compatible interface for keyboard devices</descriptions>
        <bitmaps>keyboard.bmp</bitmaps>
        <instanceSection multipleLinks="true" generateName="true">
          <instanceRequirements interface="keyboard_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/serial/" relativeFileURI="ini/serial.Plugin" name="serial" implements="serial">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="posix_devio"/>
        <captions>POSIX Serial Device I/O</captions>
        <descriptions>POSIX compatible interface for serial devices</descriptions>
        <bitmaps>serial.bmp</bitmaps>
        <instanceSection multipleLinks="true" generateName="true">
          <instanceRequirements interface="serial_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/devio/textdisplay/" relativeFileURI="ini/textdisplay.Plugin" name="textdisplay" implements="textdisplay" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="posix_devio"/>
        <captions>POSIX Text Display</captions>
        <descriptions>POSIX compatible interface for textdisplay devices.</descriptions>
        <bitmaps>textdisplay.bmp</bitmaps>
        <instanceSection multipleLinks="true" generateName="true">
          <instanceRequirements interface="textdisplay_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/errno/" relativeFileURI="ini/posix_errno.Plugin" name="posix_errno" implements="posix_errno">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>POSIX errno</captions>
        <descriptions>Internal plugin to provide errno.h, perror.c and strerror.c</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem.Plugin" name="posix_filesystem_mounting" implements="posix_filesystem_mounting" initHandler="fs_plugin_init" initHandlerPriority="32">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-D__POSIX_FILE_SYSTEM__=1</globalCompileOptions>
        <globalCompileOptions>-D__UNIFIED_HANDLES__=1</globalCompileOptions>
        <pluginRequirements interface="posix_interface"/>
        <pluginRequirements interface="rootfs"/>
        <captions>POSIX Filesystem Mounting</captions>
        <descriptions>Standard POSIX filesystem mounting</descriptions>
        <bitmaps>filesystem.bmp</bitmaps>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem_require.Plugin" name="filesystem_require" implements="filesystem_require">
        <pluginRequirements interface="posix_filesystem_mounting"/>
        <captions>POSIX Filesystem</captions>
        <descriptions>empty plugin to indirectly require posix_filesystem_mounting</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/base/" relativeFileURI="ini/filesystem_require_sockfs.Plugin" name="filesystem_require_sockfs" implements="filesystem_require_sockfs">
        <pluginRequirements interface="posix_filesystem_mounting"/>
        <captions>POSIX Filesystem require by sockfs</captions>
        <descriptions>empty plugin to indirectly require posix_filesystem_mounting by sockfs</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/devfs/" relativeFileURI="ini/devfs.Plugin" name="devfs" implements="devfs" initHandler="devfs_plugin_init" initHandlerPriority="4">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>POSIX Device File System</captions>
        <descriptions>POSIX file system interface for accessing devices</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/rootfs/" relativeFileURI="ini/rootfs.Plugin" name="rootfs" implements="rootfs" initHandler="rootfs_plugin_init" initHandlerPriority="5">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>POSIX Root File System</captions>
        <descriptions>POSIX file system interface for accessing mounted filesystems</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/shmfs/" relativeFileURI="ini/shmfs.Plugin" name="shmfs" implements="shmfs" initHandler="shmfs_plugin_init" initHandlerPriority="4">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="filesystem_require"/>
        <captions>POSIX Shared Memory Object File System</captions>
        <descriptions>POSIX file system interface for accessing shared memory objects</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/sockfs/" relativeFileURI="ini/sockfs.Plugin" name="sockfs" implements="sockfs" initHandler="sockfs_plugin_init" initHandlerPriority="5">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="filesystem_require_sockfs"/>
        <captions>POSIX Root File System</captions>
        <descriptions>POSIX file system interface for accessing sockets</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/storage/base/" relativeFileURI="ini/storage.Plugin" name="posix_filesystem" implements="posix_filesystem" manualPlacement="true">
        <pluginRequirements interface="filesystem_require"/>
        <pluginRequirements interface="fatfs"/>
        <captions>POSIX Storage System</captions>
        <descriptions>File systems</descriptions>
        <bitmaps>storage.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="blockio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/filesystem/storage/fatfs/" relativeFileURI="ini/fatfs.Plugin" name="fatfs" implements="fatfs" initHandler="fatfs_plugin_init" initHandlerPriority="4">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>POSIX FAT File System</captions>
        <descriptions>POSIX file system for accessing FAT formatted block devices</descriptions>
        <bitmaps>fatfs.bmp</bitmaps>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/kernel/base/" relativeFileURI="ini/posix_kernel.Plugin" name="posix_kernel" implements="posix_kernel">
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="posix_interface"/>
        <captions>POSIX Kernel</captions>
        <descriptions>Internal plugin to provide common headers to other POSIX plugins</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/kernel/ipc/" relativeFileURI="ini/posix_ipc.Plugin" name="posix_ipc" implements="posix_ipc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-D__POSIX_MQUEUE=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_MESSAGE_PASSING=1</globalCompileOptions>
        <pluginRequirements interface="posix_threads"/>
        <captions>POSIX Message Queues</captions>
        <descriptions>Basic support for POSIX message passing</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/kernel/signals/" relativeFileURI="ini/posix_signals.Plugin" name="posix_signals" implements="posix_signals">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-D__POSIX_SIGNALS=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_REALTIME_SIGNALS=1</globalCompileOptions>
        <pluginRequirements interface="posix_threads"/>
        <captions>POSIX Signals</captions>
        <descriptions>Basic support for POSIX signals</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/kernel/threads/" relativeFileURI="ini/posix_threads.Plugin" name="posix_threads" implements="posix_threads" initHandler="posix_threads_init" initHandlerPriority="2" minInstances="0">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-D__POSIX_KERNEL__=1</globalCompileOptions>
        <globalCompileOptions>-D_POSIX_AEP_RT_MINIMAL_C_SOURCE=200312L</globalCompileOptions>
        <globalCompileOptions>-D_POSIX_26_C_SOURCE=200312L</globalCompileOptions>
        <globalCompileOptions>-D__XSI_THREAD_EXIT=1</globalCompileOptions>
        <globalCompileOptions>-D__XSI_THREAD_MUTEX_EXT=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_THREAD_ATTR_STACKADDR=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_THREAD_ATTR_STACKSIZE=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_THREAD_PRIO_INHERIT=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_THREAD_PRIO_PROTECT=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_INTERRUPTS=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_TIMERS=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_TIMEOUTS=1</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_CLOCK_SELECTION=1</globalCompileOptions>
        <locatorOptions>-Wl--no-warnings=154</locatorOptions>
        <pluginRequirements interface="posix_kernel"/>
        <pluginRequirements interface="posix_shmio"/>
        <pluginRequirements interface="posix_errno"/>
        <pluginRequirements interface="interrupts"/>
        <captions>POSIX Multi-threading</captions>
        <descriptions>Basic support for POSIX multi-threading</descriptions>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/libc_extensions/" relativeFileURI="ini/posix_libc_extensions.Plugin" name="posix_libc_extensions" implements="posix_libc_extensions">
        <sourceFiles>$(SWP_RELPATH)/src/strptime.c</sourceFiles>
        <captions>POSIX C Library Extensions</captions>
        <descriptions>Extensions for the standard C library</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/posix/shmio/" relativeFileURI="ini/posix_shmio.Plugin" name="posix_shmio" implements="posix_shmio">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-D__POSIX_SHARED_MEMORY_OBJECTS</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_MAPPED_FILES=1</globalCompileOptions>
        <pluginRequirements interface="shmfs"/>
        <captions>POSIX Shared Memory I/O</captions>
        <descriptions>Standard POSIX device Shared Memory routines</descriptions>
      </pluginFiles>
    </repositories>
    <repositories rootURI="platform:/plugin/com.tasking.swp.repository.stm32/SoftwarePlatform/" version="1.78.0.0">
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/can/" relativeFileURI="ini/drv_stm32_can.Interface" name="drv_stm32_can" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/dcmi/" relativeFileURI="ini/drv_stm32_dcmi.Interface" name="drv_stm32_dcmi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/emac/" relativeFileURI="ini/drv_stm32_emac.Interface" name="drv_stm32_emac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/exti/" relativeFileURI="ini/drv_stm32_exti.Interface" name="drv_stm32_exti" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/lcd/" relativeFileURI="ini/drv_stm32_lcd.Interface" name="drv_stm32_lcd" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/ltdc/" relativeFileURI="ini/drv_stm32_ltdc.Interface" name="drv_stm32_ltdc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/pwm/" relativeFileURI="ini/drv_stm32_pwm.Interface" name="drv_stm32_pwm" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/rtc/" relativeFileURI="ini/drv_stm32_rtc.Interface" name="drv_stm32_rtc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usart/" relativeFileURI="ini/drv_stm32_usart.Interface" name="drv_stm32_usart" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_cdc/" relativeFileURI="ini/drv_stm32_usbdev_cdc.Interface" name="drv_stm32_usbdev_cdc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_dfu/" relativeFileURI="ini/drv_stm32_usbdev_dfu.Interface" name="drv_stm32_usbdev_dfu" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_msc/" relativeFileURI="ini/drv_stm32_usbdev_msc.Interface" name="drv_stm32_usbdev_msc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_cdc/" relativeFileURI="ini/drv_stm32_usbdev_otg_cdc.Interface" name="drv_stm32_usbdev_otg_cdc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_dfu/" relativeFileURI="ini/drv_stm32_usbdev_otg_dfu.Interface" name="drv_stm32_usbdev_otg_dfu" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_msc/" relativeFileURI="ini/drv_stm32_usbdev_otg_msc.Interface" name="drv_stm32_usbdev_otg_msc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32_cmsis.Interface" name="stm32_cmsis" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32_cmsis_variant.Interface" name="stm32_cmsis_variant" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_device_usblib/" relativeFileURI="ini/stm32_device_usblib.Interface" name="stm32_device_usblib" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_fs_usblib/" relativeFileURI="ini/stm32_fs_usblib.Interface" name="stm32_fs_usblib" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_otg_usblib/" relativeFileURI="ini/stm32_otg_usblib.Interface" name="stm32_otg_usblib" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f0xx_stdperiph_driver/" relativeFileURI="ini/stm32f0xx_lib.Interface" name="stm32f0xx_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f107_eth_lib/" relativeFileURI="ini/stm32_eth_lib.Interface" name="stm32_eth_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f10x_stdperiph_driver/" relativeFileURI="ini/stm32f10x_lib.Interface" name="stm32f10x_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f2xx_eth_lib/" relativeFileURI="ini/stm32f2xx_eth_lib.Interface" name="stm32f2xx_eth_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f2xx_stdperiph_driver/" relativeFileURI="ini/stm32f2xx_lib.Interface" name="stm32f2xx_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f30x_stdperiph_driver/" relativeFileURI="ini/stm32f30x_lib.Interface" name="stm32f30x_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f37x_stdperiph_driver/" relativeFileURI="ini/stm32f37x_lib.Interface" name="stm32f37x_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f4xx_eth_lib/" relativeFileURI="ini/stm32f4xx_eth_lib.Interface" name="stm32f4xx_eth_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f4xx_stdperiph_driver/" relativeFileURI="ini/stm32f4xx_lib.Interface" name="stm32f4xx_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/firmware/stm32l1xx_stdperiph_driver/" relativeFileURI="ini/stm32l1xx_lib.Interface" name="stm32l1xx_lib" category="SERVICE"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32_adc.Interface" name="per_stm32_adc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/aes/" relativeFileURI="ini/per_stm32_aes.Interface" name="per_stm32_aes" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/afio/" relativeFileURI="ini/per_stm32_afio.Interface" name="per_stm32_afio" category="PERIPHERAL">
        <publicHeaders>$(SWP_RELPATH)\..\..\cmsis\stm32f10x_lib\CMSIS\CM3\DeviceSupport\ST\STM32F10x\stm32f10x.h</publicHeaders>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/bkp/" relativeFileURI="ini/per_stm32_bkp.Interface" name="per_stm32_bkp" category="PERIPHERAL">
        <publicHeaders>$(SWP_RELPATH)\..\..\cmsis\stm32f10x_lib\STM32F10x_StdPeriph_Driver\inc\stm32f10x_bkp.h</publicHeaders>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32_can.Interface" name="per_stm32_can" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/cec/" relativeFileURI="ini/per_stm32_cec.Interface" name="per_stm32_cec" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/comp/" relativeFileURI="ini/per_stm32_comp.Interface" name="per_stm32_comp" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32_crc.Interface" name="per_stm32_crc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/cryp/" relativeFileURI="ini/per_stm32_cryp.Interface" name="per_stm32_cryp" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32_dac.Interface" name="per_stm32_dac" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32_dbgmcu.Interface" name="per_stm32_dbgmcu" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/dcmi/" relativeFileURI="ini/per_stm32_dcmi.Interface" name="per_stm32_dcmi" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32_dma.Interface" name="per_stm32_dma" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/dma2d/" relativeFileURI="ini/per_stm32_dma2d.Interface" name="per_stm32_dma2d" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/ethmac/" relativeFileURI="ini/per_stm32_ethmac.Interface" name="per_stm32_ethmac" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32_exti.Interface" name="per_stm32_exti" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32_flash.Interface" name="per_stm32_flash" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/fmc/" relativeFileURI="ini/per_stm32_fmc.Interface" name="per_stm32_fmc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/fsmc/" relativeFileURI="ini/per_stm32_fsmc.Interface" name="per_stm32_fsmc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32_gpio.Interface" name="per_stm32_gpio" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/hash/" relativeFileURI="ini/per_stm32_hash.Interface" name="per_stm32_hash" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32_i2c.Interface" name="per_stm32_i2c" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32_i2s.Interface" name="per_stm32_i2s" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32_iwdg.Interface" name="per_stm32_iwdg" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/lcd/" relativeFileURI="ini/per_stm32_lcd.Interface" name="per_stm32_lcd" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/ltdc/" relativeFileURI="ini/per_stm32_ltdc.Interface" name="per_stm32_ltdc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/opamp/" relativeFileURI="ini/per_stm32_opamp.Interface" name="per_stm32_opamp" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32_pwr.Interface" name="per_stm32_pwr" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32_rcc.Interface" name="per_stm32_rcc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/rng/" relativeFileURI="ini/per_stm32_rng.Interface" name="per_stm32_rng" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32_rtc.Interface" name="per_stm32_rtc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/sai/" relativeFileURI="ini/per_stm32_sai.Interface" name="per_stm32_sai" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/sdadc/" relativeFileURI="ini/per_stm32_sdadc.Interface" name="per_stm32_sdadc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/sdio/" relativeFileURI="ini/per_stm32_sdio.Interface" name="per_stm32_sdio" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32_spi.Interface" name="per_stm32_spi" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32_syscfg.Interface" name="per_stm32_syscfg" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32_tim.Interface" name="per_stm32_tim" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/tsc/" relativeFileURI="ini/per_stm32_tsc.Interface" name="per_stm32_tsc" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32_usart.Interface" name="per_stm32_usart" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32_usb.Interface" name="per_stm32_usb" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/usb_otg/" relativeFileURI="ini/per_stm32_usb_otg.Interface" name="per_stm32_usb_otg" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32_wwdg.Interface" name="per_stm32_wwdg" category="PERIPHERAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/pinmapper/" relativeFileURI="ini/pinmapper.Interface" name="stm32_pinmapper" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f0xx_device/" relativeFileURI="ini/stm32f0xx_device.Interface" name="stm32f0xx_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f10x_device/" relativeFileURI="ini/stm32f10x_device.Interface" name="stm32f10x_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f2xx_device/" relativeFileURI="ini/stm32f2xx_device.Interface" name="stm32f2xx_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f30x_device/" relativeFileURI="ini/stm32f30x_device.Interface" name="stm32f30x_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f37x_device/" relativeFileURI="ini/stm32f37x_device.Interface" name="stm32f37x_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32f4xx_device/" relativeFileURI="ini/stm32f4xx_device.Interface" name="stm32f4xx_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/stm32l1xx_device/" relativeFileURI="ini/stm32l1xx_device.Interface" name="stm32l1xx_device" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/util/" relativeFileURI="ini/stm32_util.Interface" name="stm32_util" category="INTERNAL">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32_adc.Interface" name="st_stm32_adc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/aes/" relativeFileURI="ini/st_stm32_aes.Interface" name="st_stm32_aes" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/bkp/" relativeFileURI="ini/st_stm32_bkp.Interface" name="st_stm32_bkp" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32_can.Interface" name="st_stm32_can" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/cec/" relativeFileURI="ini/st_stm32_cec.Interface" name="st_stm32_cec" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/comp/" relativeFileURI="ini/st_stm32_comp.Interface" name="st_stm32_comp" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32_crc.Interface" name="st_stm32_crc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/cryp/" relativeFileURI="ini/st_stm32_cryp.Interface" name="st_stm32_cryp" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32_dac.Interface" name="st_stm32_dac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/dbgmcu/" relativeFileURI="ini/st_stm32_dbgmcu.Interface" name="st_stm32_dbgmcu" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/dcmi/" relativeFileURI="ini/st_stm32_dcmi.Interface" name="st_stm32_dcmi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32_dma.Interface" name="st_stm32_dma" category="DRIVER">
        <publicHeaders>$(SWP_RELPATH)\include\st_stm32_dma.h</publicHeaders>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/dma2d/" relativeFileURI="ini/st_stm32_dma2d.Interface" name="st_stm32_dma2d" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/ethmac/" relativeFileURI="ini/st_stm32_ethmac.Interface" name="st_stm32_ethmac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32_exti.Interface" name="st_stm32_exti" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/flash/" relativeFileURI="ini/st_stm32_flash.Interface" name="st_stm32_flash" category="DRIVER">
        <publicHeaders>$(SWP_RELPATH)\include\st_stm32_flash.h</publicHeaders>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/fmc/" relativeFileURI="ini/st_stm32_fmc.Interface" name="st_stm32_fmc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/fsmc/" relativeFileURI="ini/st_stm32_fsmc.Interface" name="st_stm32_fsmc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32_gpio.Interface" name="st_stm32_gpio" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/hash/" relativeFileURI="ini/st_stm32_hash.Interface" name="st_stm32_hash" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32_i2c.Interface" name="st_stm32_i2c" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/iwdg/" relativeFileURI="ini/st_stm32_iwdg.Interface" name="st_stm32_iwdg" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/lcd/" relativeFileURI="ini/st_stm32_lcd.Interface" name="st_stm32_lcd" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/ltdc/" relativeFileURI="ini/st_stm32_ltdc.Interface" name="st_stm32_ltdc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/opamp/" relativeFileURI="ini/st_stm32_opamp.Interface" name="st_stm32_opamp" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/pwr/" relativeFileURI="ini/st_stm32_pwr.Interface" name="st_stm32_pwr" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/rcc/" relativeFileURI="ini/st_stm32_rcc.Interface" name="st_stm32_rcc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/rng/" relativeFileURI="ini/st_stm32_rng.Interface" name="st_stm32_rng" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32_rtc.Interface" name="st_stm32_rtc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/sai/" relativeFileURI="ini/st_stm32_sai.Interface" name="st_stm32_sai" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/sdadc/" relativeFileURI="ini/st_stm32_sdadc.Interface" name="st_stm32_sdadc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/sdio/" relativeFileURI="ini/st_stm32_sdio.Interface" name="st_stm32_sdio" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32_spi.Interface" name="st_stm32_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/syscfg/" relativeFileURI="ini/st_stm32_syscfg.Interface" name="st_stm32_syscfg" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32_tim.Interface" name="st_stm32_tim" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/tsc/" relativeFileURI="ini/st_stm32_tsc.Interface" name="st_stm32_tsc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32_usart.Interface" name="st_stm32_usart" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/usb/" relativeFileURI="ini/st_stm32_usb.Interface" name="st_stm32_usb" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/usb_otg/" relativeFileURI="ini/st_stm32_usb_otg.Interface" name="st_stm32_usb_otg" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/discrete/stm32/vendor/wwdg/" relativeFileURI="ini/st_stm32_wwdg.Interface" name="st_stm32_wwdg" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_stm32_adc/" relativeFileURI="ini/ad_adc_to_stm32_adc.Plugin" name="ad_stm32_adc" implements="adc_adaptor" initHandler="ad_stm32_adc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="st_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_aes_to_stm32_cryp/" relativeFileURI="ini/ad_aes_to_stm32_cryp.Plugin" name="stm32_cryp_to_aes" implements="aes_adaptor" initHandler="stm32_cryp_to_aes_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the STM32 crypto hardware module to the generic AES module on platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="st_stm32_cryp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_can_to_stm32_can/" relativeFileURI="ini/ad_can_to_stm32_can.Plugin" name="stm32_can_to_drv_can" implements="can_adaptor" initHandler="stm32_can_to_drv_can_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 CAN to generic CAN driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dac_to_stm32_dac/" relativeFileURI="ini/ad_dac_to_stm32_dac.Plugin" name="ad_stm32_dac" implements="dac_adaptor" initHandler="ad_stm32_dac_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 DAC driver to DAC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="st_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dwc_usb_otg_to_stm32_usb_otg/" relativeFileURI="ini/ad_dwc_usb_otg_to_stm32_usb_otg.Plugin" name="ad_dwc_usb_otg_to_stm32_usb_otg" implements="dwc_usb_otg_adaptor" initHandler="ad_stm32_usb_otg_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 USB OTG peripheral to Synopsys DWC USB OTG driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_ethernet_to_stm32_emac/" relativeFileURI="ini/ad_ethernet_to_stm32_emac.Plugin" name="stm32_emac_to_ethernet" implements="ethernet_adaptor" initHandler="stm32_emac_to_ethernet_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the STM32 Ethernet MAC device to Ethernet platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_emac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_extint_to_stm32_exti/" relativeFileURI="ini/ad_extint_to_stm32_exti.Plugin" name="stm32_exti_to_extint" implements="ad_extint" initHandler="stm32_exti_to_extint_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts FPGA exti to generic external interrupt service</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_stm32_ltdc/" relativeFileURI="ini/ad_graphics_to_stm32_ltdc.Plugin" name="graphics_to_stm32_ltdc" implements="ad_graphics" initHandler="graphics_to_stm32_ltdc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 LTDC driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_ltdc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_ili9341_ltdc_to_stm32_ltdc/" relativeFileURI="ini/ad_ili9341_ltdc_to_stm32_ltdc.Plugin" name="ili9341_ltdc_to_stm32_ltdc" implements="ad_drv_ili9341_ltdc" initHandler="ili9341_ltdc_to_stm32_ltdc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 LTDC driver to ili9341 LTDC driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_ltdc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_pwm_to_stm32_pwm/" relativeFileURI="ini/ad_pwm_to_stm32_pwm.Plugin" name="stm32_pwm_to_pwm" implements="pwm_adaptor" initHandler="stm32_pwm_to_pwm_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STMicroelectronics PWM to a generic PWM driver</descriptions>
        <available_Ifs kind="PLUGIN" name="drv_stm32_pwm" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_pwm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_rtc_to_stm32_rtc/" relativeFileURI="ini/ad_rtc_to_stm32_rtc.Plugin" name="ad_stm32_rtc" implements="rtc_adaptor" initHandler="ad_stm32_rtc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts STM32 RTC to RTC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_serial_to_stm32_usart/" relativeFileURI="ini/ad_serial_to_stm32_usart.Plugin" name="stm32_usart_to_serial" implements="serial_adaptor" initHandler="stm32_usart_to_serial_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Posix interface for STM32 USART serial port.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/can/" relativeFileURI="ini/drv_stm32_can.Plugin" name="drv_stm32_can" implements="drv_stm32_can">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_can.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_can_f10x.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_can_f2xx.c</sourceFiles>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="stm32_util"/>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 CAN Driver</captions>
        <descriptions>Device driver for CAN peripherals on STM32 devices.</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_can" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_can" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_can" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_can" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_can" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/dcmi/" relativeFileURI="ini/drv_stm32_dcmi.Plugin" name="drv_stm32_dcmi" implements="drv_stm32_dcmi">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_dcmi.c</sourceFiles>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 Digital Camera Interface</captions>
        <descriptions>Device driver for Digital Camera Interface on STM32 devices</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dcmi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/emac/" relativeFileURI="ini/drv_stm32_emac.Plugin" name="drv_stm32_emac" implements="drv_stm32_emac">
        <generateIncludes>drv_stm32_emac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_emac.c</sourceFiles>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="ifconfig"/>
        <captions>STM32 Ethernet MAC Driver</captions>
        <descriptions>Device driver for Ethernet MAC peripheral on STM32 devices</descriptions>
        <bitmaps>drv_stm32_emac.bmp</bitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_ethmac" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_ethmac" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_ethmac" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_ethmac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/exti/" relativeFileURI="ini/drv_stm32_exti.Plugin" name="drv_stm32_exti" implements="drv_stm32_exti">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_exti.c</sourceFiles>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 EXTI Driver</captions>
        <descriptions>Device driver for EXTI controller on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_exti" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_exti" condition="EQ" orCondition="true"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/lcd/" relativeFileURI="ini/drv_stm32_lcd.Plugin" name="drv_stm32_lcd" implements="drv_stm32_lcd">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_lcd.c</sourceFiles>
        <pluginRequirements interface="stm32_util"/>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 LCD Driver</captions>
        <descriptions>Device driver for LCD peripherals on STM32L devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_lcd" condition="EQ"/>
        <instanceSection multipleLinks="true" multipleLinksMax="4">
          <instanceRequirements interface="per_stm32_lcd"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/ltdc/" relativeFileURI="ini/drv_stm32f4xx_ltdc.Plugin" name="drv_stm32_ltdc" implements="drv_stm32_ltdc">
        <generateIncludes>stm32f4xx_ltdc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f4xx_ltdc.c</sourceFiles>
        <captions>STM32 LTDC Driver</captions>
        <descriptions>LCD TFT Display Controller driver on STM32 devices</descriptions>
        <bitmaps>drv_stm32_ltdc.bmp</bitmaps>
        <largeBitmaps>drv_stm32_ltdc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_ltdc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_ltdc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/pwm/" relativeFileURI="ini/drv_stm32_pwm.Plugin" name="drv_stm32_pwm" implements="drv_stm32_pwm">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="stm32_util"/>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 PWM Driver</captions>
        <descriptions>STM32 Pulse Width Modulator (PWM) Driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/rtc/" relativeFileURI="ini/drv_stm32_rtc.Plugin" name="drv_stm32_rtc" implements="drv_stm32_rtc">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_rtc.c</sourceFiles>
        <captions>STM32 RTC Driver</captions>
        <descriptions>Real Time Clock driver on STM32 devices</descriptions>
        <bitmaps>drv_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>drv_stm32_rtc_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/sdhc/" relativeFileURI="ini/drv_stm32_sdio.Plugin" name="drv_stm32_sdio" implements="drv_sdhc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 SD Host Controller Driver</captions>
        <descriptions>Driver for STM32 MicroSD card reader</descriptions>
        <bitmaps>drv_sdhc.bmp</bitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_sdio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_sdio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_sdio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_sdio" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_sdio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/spi/" relativeFileURI="ini/drv_stm32_spi.Plugin" name="drv_stm32_spi" implements="drv_spi">
        <generateIncludes>drv_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_spi.c</sourceFiles>
        <pluginRequirements interface="stm32_util"/>
        <pluginRequirements interface="timing"/>
        <captions>STM32 SPI Driver</captions>
        <descriptions>Device driver for SPI peripherals on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_spi" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_spi" condition="EQ" orCondition="true"/>
        <instanceSection multipleLinks="true" multipleLinksMax="4">
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usart/" relativeFileURI="ini/drv_stm32_usart.Plugin" name="drv_stm32_usart" implements="drv_stm32_usart">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_usart.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_usart_interrupts.c</sourceFiles>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 USART Driver</captions>
        <descriptions>Device driver for USART peripherals on STM32 devices.</descriptions>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_cdc/" relativeFileURI="ini/drv_stm32_usbdev_cdc.Plugin" name="drv_stm32_usbdev_cdc" implements="drv_stm32_usbdev_cdc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_fs_usblib"/>
        <captions>STM32 USB Communication Device Class Driver</captions>
        <descriptions>Device driver for STM32 USB Communication Device Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_usb" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_dfu/" relativeFileURI="ini/drv_stm32_usbdev_dfu.Plugin" name="drv_stm32_usbdev_dfu" implements="drv_stm32_usbdev_dfu">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_fs_usblib"/>
        <captions>STM32 USB Device Firmware Upgrade Driver</captions>
        <descriptions>Device driver for STM32 USB Device Firmware Upgrade Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_usb" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_msc/" relativeFileURI="ini/drv_stm32_usbdev_msc.Plugin" name="drv_stm32_usbdev_msc" implements="drv_stm32_usbdev_msc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_fs_usblib"/>
        <captions>STM32 USB Mass Storage Class Driver</captions>
        <descriptions>Device driver for STM32 USB Mass Storage Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_usb" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb"/>
          <instanceRequirements interface="blockio" multipleLinks="true" multipleLinksMax="3"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_cdc/" relativeFileURI="ini/drv_stm32_usbdev_otg_cdc.Plugin" name="drv_stm32_usbdev_otg_cdc" implements="drv_stm32_usbdev_otg_cdc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_device_usblib"/>
        <pluginRequirements interface="stm32_otg_usblib"/>
        <captions>STM32 USB OTG CDC Driver</captions>
        <descriptions>Device driver for STM32 USB Communication Device Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb_otg_fs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usb_otg" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usb_otg" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_dfu/" relativeFileURI="ini/drv_stm32_usbdev_otg_dfu.Plugin" name="drv_stm32_usbdev_otg_dfu" implements="drv_stm32_usbdev_otg_dfu">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_device_usblib"/>
        <pluginRequirements interface="stm32_otg_usblib"/>
        <captions>STM32 USB OTG DFU Driver</captions>
        <descriptions>Device driver for STM32 USB Communication Device Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb_otg_fs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usb_otg" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usb_otg" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/usbdev_otg_msc/" relativeFileURI="ini/drv_stm32_usbdev_otg_msc.Plugin" name="drv_stm32_usbdev_otg_msc" implements="drv_stm32_usbdev_otg_msc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="stm32_device_usblib"/>
        <pluginRequirements interface="stm32_otg_usblib"/>
        <captions>STM32 USB OTG MSC Driver</captions>
        <descriptions>Device driver for STM32 USB Mass Storage Device Class</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb_otg_fs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usb_otg" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usb_otg" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb_otg"/>
          <instanceRequirements interface="blockio" multipleLinks="true" multipleLinksMax="3"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f0xx_cmsis.Plugin" name="stm32f0xx_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM0\DeviceSupport\ST\STM32F0xx\system_stm32f0xx.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM0\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM0\DeviceSupport\ST\STM32F0xx&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f0xx_device"/>
        <captions>STM32F0XX CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F0XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f10x_cmsis.Plugin" name="stm32f10x_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM3\DeviceSupport\ST\STM32F10x\system_stm32f10x.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\DeviceSupport\ST\STM32F10x&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f10x_device"/>
        <captions>STM32F10X CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F10X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM321." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f2xx_cmsis.Plugin" name="stm32f2xx_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM3\DeviceSupport\ST\STM32F2xx\system_stm32f2xx.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\DeviceSupport\ST\STM32F2xx&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>STM32F2XX CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F2XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM322." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f30x_cmsis.Plugin" name="stm32f30x_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM4\DeviceSupport\ST\STM32F30x\system_stm32f30x.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\DeviceSupport\ST\STM32F30x&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f30x_device"/>
        <captions>STM32F30X CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F30X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f37x_cmsis.Plugin" name="stm32f37x_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM4\DeviceSupport\ST\STM32F37x\system_stm32f37x.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\DeviceSupport\ST\STM32F37x&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f37x_device"/>
        <captions>STM32F37X CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F37X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32l1xx_cmsis.Plugin" name="stm32l1xx_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM3\DeviceSupport\ST\STM32L1xx\system_stm32l1xx.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM3\DeviceSupport\ST\STM32L1xx&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>STM32L1XX CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32L1XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_device_usblib/" relativeFileURI="ini/stm32_device_usblib.Plugin" name="stm32_device_usblib" implements="stm32_device_usblib">
        <sourceDirs>$(SWP_RELPATH)\STM32_USB_Device_Library\Core\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=549,560</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32_USB_Device_Library\Core\inc&quot;</globalCompileOptions>
        <captions>STM32 USB DEVICE Access Library</captions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_fs_usblib/" relativeFileURI="ini/stm32_fs_usblib.Plugin" name="stm32_fs_usblib" implements="stm32_fs_usblib">
        <sourceDirs>$(SWP_RELPATH)\STM32_USB-FS-Device_Driver\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=549,560</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32_USB-FS-Device_Driver\inc&quot;</globalCompileOptions>
        <captions>STM32 USB FS Access Library</captions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32_otg_usblib/" relativeFileURI="ini/stm32_otg_usblib.Plugin" name="stm32_otg_usblib" implements="stm32_otg_usblib">
        <sourceDirs>$(SWP_RELPATH)\STM32_USB_OTG_Driver\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=549,560</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32_USB_OTG_Driver\inc&quot;</globalCompileOptions>
        <captions>STM32 USB OTG Access Library</captions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f0xx_stdperiph_driver/" relativeFileURI="ini/stm32f0xx_lib.Plugin" name="stm32f0xx_lib" implements="stm32f0xx_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F0XX Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f107_eth_lib/" relativeFileURI="ini/stm32_eth_lib.Plugin" name="stm32_eth_lib" implements="stm32_eth_lib">
        <sourceDirs>$(SWP_RELPATH)\STM32_ETH_Driver\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=549,560</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32_ETH_Driver\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F107 Ethernet Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM321." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f10x_stdperiph_driver/" relativeFileURI="ini/stm32f10x_lib.Plugin" name="stm32f10x_lib" implements="stm32f10x_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F10X Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM321." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f2xx_eth_lib/" relativeFileURI="ini/stm32f2xx_eth_lib.Plugin" name="stm32f2xx_eth_lib" implements="stm32f2xx_eth_lib">
        <sourceDirs>$(SWP_RELPATH)\STM32F2x7_ETH_Driver\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32F2x7_ETH_Driver\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX Ethernet Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM322." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f2xx_stdperiph_driver/" relativeFileURI="ini/stm32f2xx_lib.Plugin" name="stm32f2xx_lib" implements="stm32f2xx_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F2XX Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM322." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f30x_stdperiph_driver/" relativeFileURI="ini/stm32f30x_lib.Plugin" name="stm32f30x_lib" implements="stm32f30x_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F30X Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f37x_stdperiph_driver/" relativeFileURI="ini/stm32f37x_lib.Plugin" name="stm32f37x_lib" implements="stm32f37x_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F37X Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f4xx_eth_lib/" relativeFileURI="ini/stm32f4xx_eth_lib.Plugin" name="stm32f4xx_eth_lib" implements="stm32f4xx_eth_lib">
        <sourceDirs>$(SWP_RELPATH)\STM32F4x7_ETH_Driver\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\STM32F4x7_ETH_Driver\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX Ethernet Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM324." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32l1xx_stdperiph_driver/" relativeFileURI="ini/stm32l1xx_lib.Plugin" name="stm32l1xx_lib" implements="stm32l1xx_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32L1XX Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f0xx_adc.Plugin" name="per_stm32f0xx_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F0XX_ADC</hardwareIds>
        <instanceIds>STM32F0XX_ADC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX ADC</captions>
        <descriptions>STMicroelectronics STM32F0XX Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f10x_adc.Plugin" name="per_stm32f10x_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F10X_ADC</hardwareIds>
        <instanceIds>STM32F10X_ADC1</instanceIds>
        <instanceIds>STM32F10X_ADC2</instanceIds>
        <instanceIds>STM32F10X_ADC3</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X ADC</captions>
        <descriptions>STMicroelectronics STM32F10X Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f2xx_adc.Plugin" name="per_stm32f2xx_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F2XX_ADC</hardwareIds>
        <instanceIds>STM32F2XX_ADC1</instanceIds>
        <instanceIds>STM32F2XX_ADC2</instanceIds>
        <instanceIds>STM32F2XX_ADC3</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX ADC</captions>
        <descriptions>STMicroelectronics STM32F2XX Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f30x_adc.Plugin" name="per_stm32f30x_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F30X_ADC</hardwareIds>
        <instanceIds>STM32F30X_ADC1</instanceIds>
        <instanceIds>STM32F30X_ADC2</instanceIds>
        <instanceIds>STM32F30X_ADC3</instanceIds>
        <instanceIds>STM32F30X_ADC4</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X ADC</captions>
        <descriptions>STMicroelectronics STM32F30X Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f37x_adc.Plugin" name="per_stm32f37x_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F37X_ADC</hardwareIds>
        <instanceIds>STM32F37X_ADC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X ADC</captions>
        <descriptions>STMicroelectronics STM32F37X Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32f4xx_adc.Plugin" name="per_stm32f4xx_adc" implements="per_stm32_adc">
        <hardwareIds>STM32F4XX_ADC</hardwareIds>
        <instanceIds>STM32F4XX_ADC1</instanceIds>
        <instanceIds>STM32F4XX_ADC2</instanceIds>
        <instanceIds>STM32F4XX_ADC3</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX ADC</captions>
        <descriptions>STMicroelectronics STM32F4XX Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/adc/" relativeFileURI="ini/per_stm32l1xx_adc.Plugin" name="per_stm32l1xx_adc" implements="per_stm32_adc">
        <hardwareIds>STM32L1XX_ADC</hardwareIds>
        <instanceIds>STM32L1XX_ADC1</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX ADC</captions>
        <descriptions>STMicroelectronics STM32L1XX Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/aes/" relativeFileURI="ini/per_stm32l1xx_aes.Plugin" name="per_stm32l1xx_aes" implements="per_stm32_aes">
        <hardwareIds>STM32L1XX_AES</hardwareIds>
        <instanceIds>STM32L1XX_AES</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX AES</captions>
        <descriptions>STMicroelectronics STM32L1XX Advanced Encryption Standard hardware accelerator</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/afio/" relativeFileURI="ini/per_stm32f10x_afio.Plugin" name="per_stm32f10x_afio" implements="per_stm32_afio">
        <hardwareIds>STM32F10X_AFIO</hardwareIds>
        <instanceIds>STM32F10X_AFIO</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X AFIO</captions>
        <descriptions>STMicroelectronics STM32F10X alternate-function I/Os (AFIO)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/bkp/" relativeFileURI="ini/per_stm32f10x_bkp.Plugin" name="per_stm32f10x_bkp" implements="per_stm32_bkp">
        <hardwareIds>STM32F10X_BKP</hardwareIds>
        <instanceIds>STM32F10X_BKP</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X BKP</captions>
        <descriptions>STMicroelectronics STM32F10X Backup Registers</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f0xx_can.Plugin" name="per_stm32f0xx_can" implements="per_stm32_can">
        <hardwareIds>STM32F0XX_CAN</hardwareIds>
        <instanceIds>STM32F0XX_CAN</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX CAN</captions>
        <descriptions>STMicroelectronics STM32F0XX peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F042." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F072." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F09." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f10x_can.Plugin" name="per_stm32f10x_can" implements="per_stm32_can">
        <hardwareIds>STM32F10X_CAN</hardwareIds>
        <instanceIds>STM32F10X_CAN1</instanceIds>
        <instanceIds>STM32F10X_CAN2</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X CAN</captions>
        <descriptions>STMicroelectronics STM32F10X peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F103." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F105." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F107." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f2xx_can.Plugin" name="per_stm32f2xx_can" implements="per_stm32_can">
        <hardwareIds>STM32F2XX_CAN</hardwareIds>
        <instanceIds>STM32F2XX_CAN1</instanceIds>
        <instanceIds>STM32F2XX_CAN2</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX CAN</captions>
        <descriptions>STMicroelectronics STM32F2XX peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f30x_can.Plugin" name="per_stm32f30x_can" implements="per_stm32_can">
        <hardwareIds>STM32F30X_CAN</hardwareIds>
        <instanceIds>STM32F30X_CAN1</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X CAN</captions>
        <descriptions>STMicroelectronics STM32F30X peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f37x_can.Plugin" name="per_stm32f37x_can" implements="per_stm32_can">
        <hardwareIds>STM32F37X_CAN</hardwareIds>
        <instanceIds>STM32F37X_CAN1</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X CAN</captions>
        <descriptions>STMicroelectronics STM32F37X peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/can/" relativeFileURI="ini/per_stm32f4xx_can.Plugin" name="per_stm32f4xx_can" implements="per_stm32_can">
        <hardwareIds>STM32F4XX_CAN</hardwareIds>
        <instanceIds>STM32F4XX_CAN1</instanceIds>
        <instanceIds>STM32F4XX_CAN2</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX CAN</captions>
        <descriptions>STMicroelectronics STM32F4XX peripheral library access for using Controller Area Networks</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/cec/" relativeFileURI="ini/per_stm32f0xx_cec.Plugin" name="per_stm32f0xx_cec" implements="per_stm32_cec">
        <hardwareIds>STM32F0XX_CEC</hardwareIds>
        <instanceIds>STM32F0XX_CEC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX CEC</captions>
        <descriptions>STMicroelectronics STM32F0XX Consumer Electronics Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F04." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F05." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F07." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F09." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/cec/" relativeFileURI="ini/per_stm32f10x_cec.Plugin" name="per_stm32f10x_cec" implements="per_stm32_cec">
        <hardwareIds>STM32F10X_CEC</hardwareIds>
        <instanceIds>STM32F10X_CEC</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X CEC</captions>
        <descriptions>STMicroelectronics STM32F10X Consumer Electronics Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F100."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/cec/" relativeFileURI="ini/per_stm32f37x_cec.Plugin" name="per_stm32f37x_cec" implements="per_stm32_cec">
        <hardwareIds>STM32F37X_CEC</hardwareIds>
        <instanceIds>STM32F37X_CEC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X CEC</captions>
        <descriptions>STMicroelectronics STM32F37X Consumer Electronics Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/comp/" relativeFileURI="ini/per_stm32f0xx_comp.Plugin" name="per_stm32f0xx_comp" implements="per_stm32_comp">
        <hardwareIds>STM32F0XX_COMP</hardwareIds>
        <instanceIds>STM32F0XX_COMP1</instanceIds>
        <instanceIds>STM32F0XX_COMP2</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX COMP</captions>
        <descriptions>STMicroelectronics STM32F0XX Comparators</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F05." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F07." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F09." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/comp/" relativeFileURI="ini/per_stm32f30x_comp.Plugin" name="per_stm32f30x_comp" implements="per_stm32_comp">
        <hardwareIds>STM32F30X_COMP</hardwareIds>
        <instanceIds>STM32F30X_COMP1</instanceIds>
        <instanceIds>STM32F30X_COMP2</instanceIds>
        <instanceIds>STM32F30X_COMP3</instanceIds>
        <instanceIds>STM32F30X_COMP4</instanceIds>
        <instanceIds>STM32F30X_COMP5</instanceIds>
        <instanceIds>STM32F30X_COMP6</instanceIds>
        <instanceIds>STM32F30X_COMP7</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X COMP</captions>
        <descriptions>STMicroelectronics STM32F30X Comparators</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/comp/" relativeFileURI="ini/per_stm32f37x_comp.Plugin" name="per_stm32f37x_comp" implements="per_stm32_comp">
        <hardwareIds>STM32F37X_COMP</hardwareIds>
        <instanceIds>STM32F37X_COMP1</instanceIds>
        <instanceIds>STM32F37X_COMP2</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X COMP</captions>
        <descriptions>STMicroelectronics STM32F37X Comparators</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/comp/" relativeFileURI="ini/per_stm32l1xx_comp.Plugin" name="per_stm32l1xx_comp" implements="per_stm32_comp">
        <hardwareIds>STM32L1XX_COMP</hardwareIds>
        <instanceIds>STM32L1XX_COMP</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX COMP</captions>
        <descriptions>STMicroelectronics STM32L1XX Comparators</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f0xx_crc.Plugin" name="per_stm32f0xx_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F0XX_CRC</hardwareIds>
        <instanceIds>STM32F0XX_CRC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX CRC</captions>
        <descriptions>STMicroelectronics STM32F0XX Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f10x_crc.Plugin" name="per_stm32f10x_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F10X_CRC</hardwareIds>
        <instanceIds>STM32F10X_CRC</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X CRC</captions>
        <descriptions>STMicroelectronics STM32F10X Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f2xx_crc.Plugin" name="per_stm32f2xx_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F2XX_CRC</hardwareIds>
        <instanceIds>STM32F2XX_CRC</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX CRC</captions>
        <descriptions>STMicroelectronics STM32F2XX Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f30x_crc.Plugin" name="per_stm32f30x_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F30X_CRC</hardwareIds>
        <instanceIds>STM32F30X_CRC</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X CRC</captions>
        <descriptions>STMicroelectronics STM32F30X Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f37x_crc.Plugin" name="per_stm32f37x_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F37X_CRC</hardwareIds>
        <instanceIds>STM32F37X_CRC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X CRC</captions>
        <descriptions>STMicroelectronics STM32F37X Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32f4xx_crc.Plugin" name="per_stm32f4xx_crc" implements="per_stm32_crc">
        <hardwareIds>STM32F4XX_CRC</hardwareIds>
        <instanceIds>STM32F4XX_CRC</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX CRC</captions>
        <descriptions>STMicroelectronics STM32F4XX Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/crc/" relativeFileURI="ini/per_stm32l1xx_crc.Plugin" name="per_stm32l1xx_crc" implements="per_stm32_crc">
        <hardwareIds>STM32L1XX_CRC</hardwareIds>
        <instanceIds>STM32L1XX_CRC</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX CRC</captions>
        <descriptions>STMicroelectronics STM32L1XX Cyclic Redundancy Check</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/cryp/" relativeFileURI="ini/per_stm32f2xx_cryp.Plugin" name="per_stm32f2xx_cryp" implements="per_stm32_cryp">
        <hardwareIds>STM32F2XX_CRYP</hardwareIds>
        <instanceIds>STM32F2XX_CRYP</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX CRYP</captions>
        <descriptions>STMicroelectronics STM32F2XX Cryptographic Processor</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/cryp/" relativeFileURI="ini/per_stm32f4xx_cryp.Plugin" name="per_stm32f4xx_cryp" implements="per_stm32_cryp">
        <hardwareIds>STM32F4XX_CRYP</hardwareIds>
        <instanceIds>STM32F4XX_CRYP</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX CRYP</captions>
        <descriptions>STMicroelectronics STM32F4XX Cryptographic Processor</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f0xx_dac.Plugin" name="per_stm32f0xx_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F0XX_DAC</hardwareIds>
        <instanceIds>STM32F0XX_DAC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX DAC</captions>
        <descriptions>STMicroelectronics STM32F0XX Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f10x_dac.Plugin" name="per_stm32f10x_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F10X_DAC</hardwareIds>
        <instanceIds>STM32F10X_DAC</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X DAC</captions>
        <descriptions>STMicroelectronics STM32F10X Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f2xx_dac.Plugin" name="per_stm32f2xx_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F2XX_DAC</hardwareIds>
        <instanceIds>STM32F2XX_DAC</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX DAC</captions>
        <descriptions>STMicroelectronics STM32F2XX Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f30x_dac.Plugin" name="per_stm32f30x_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F30X_DAC</hardwareIds>
        <instanceIds>STM32F30X_DAC</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X DAC</captions>
        <descriptions>STMicroelectronics STM32F30X Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f37x_dac.Plugin" name="per_stm32f37x_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F37X_DAC</hardwareIds>
        <instanceIds>STM32F37X_DAC1</instanceIds>
        <instanceIds>STM32F37X_DAC3</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X DAC</captions>
        <descriptions>STMicroelectronics STM32F37X Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32f4xx_dac.Plugin" name="per_stm32f4xx_dac" implements="per_stm32_dac">
        <hardwareIds>STM32F4XX_DAC</hardwareIds>
        <instanceIds>STM32F4XX_DAC</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX DAC</captions>
        <descriptions>STMicroelectronics STM32F4XX Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dac/" relativeFileURI="ini/per_stm32l1xx_dac.Plugin" name="per_stm32l1xx_dac" implements="per_stm32_dac">
        <hardwareIds>STM32L1XX_DAC</hardwareIds>
        <instanceIds>STM32L1XX_DAC</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX DAC</captions>
        <descriptions>STMicroelectronics STM32L1XX Digital to Analog Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f0xx_dbgmcu.Plugin" name="per_stm32f0xx_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F0XX_DBGMCU</hardwareIds>
        <instanceIds>STM32F0XX_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX DBG</captions>
        <descriptions>STMicroelectronics STM32F0XX Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f10x_dbgmcu.Plugin" name="per_stm32f10x_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F10X_DBGMCU</hardwareIds>
        <instanceIds>STM32F10X_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X DBG</captions>
        <descriptions>STMicroelectronics STM32F10X Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f2xx_dbgmcu.Plugin" name="per_stm32f2xx_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F2XX_DBGMCU</hardwareIds>
        <instanceIds>STM32F2XX_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX DBG</captions>
        <descriptions>STMicroelectronics STM32F2XX Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f30x_dbgmcu.Plugin" name="per_stm32f30x_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F30X_DBGMCU</hardwareIds>
        <instanceIds>STM32F30X_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X DBG</captions>
        <descriptions>STMicroelectronics STM32F30X Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f37x_dbgmcu.Plugin" name="per_stm32f37x_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F37X_DBGMCU</hardwareIds>
        <instanceIds>STM32F37X_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X DBG</captions>
        <descriptions>STMicroelectronics STM32F37X Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32f4xx_dbgmcu.Plugin" name="per_stm32f4xx_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32F4XX_DBGMCU</hardwareIds>
        <instanceIds>STM32F4XX_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX DBG</captions>
        <descriptions>STMicroelectronics STM32F4XX Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dbgmcu/" relativeFileURI="ini/per_stm32l1xx_dbgmcu.Plugin" name="per_stm32l1xx_dbgmcu" implements="per_stm32_dbgmcu">
        <hardwareIds>STM32L1XX_DBGMCU</hardwareIds>
        <instanceIds>STM32L1XX_DBGMCU</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX DBG</captions>
        <descriptions>STMicroelectronics STM32L1XX Debug Support</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dcmi/" relativeFileURI="ini/per_stm32f2xx_dcmi.Plugin" name="per_stm32f2xx_dcmi" implements="per_stm32_dcmi">
        <hardwareIds>STM32F2XX_DCMI</hardwareIds>
        <instanceIds>STM32F2XX_DCMI</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX DCMI</captions>
        <descriptions>STMicroelectronics STM32F2XX Digital Camera Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F207." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F217." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dcmi/" relativeFileURI="ini/per_stm32f4xx_dcmi.Plugin" name="per_stm32f4xx_dcmi" implements="per_stm32_dcmi">
        <hardwareIds>STM32F4XX_DCMI</hardwareIds>
        <instanceIds>STM32F4XX_DCMI</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX DCMI</captions>
        <descriptions>STMicroelectronics STM32F4XX Digital Camera Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F407." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F417." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F42." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F43." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f0xx_dma.Plugin" name="per_stm32f0xx_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F0XX_DMA</hardwareIds>
        <instanceIds>STM32F0XX_DMACH1</instanceIds>
        <instanceIds>STM32F0XX_DMACH2</instanceIds>
        <instanceIds>STM32F0XX_DMACH3</instanceIds>
        <instanceIds>STM32F0XX_DMACH4</instanceIds>
        <instanceIds>STM32F0XX_DMACH5</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX DMA</captions>
        <descriptions>STMicroelectronics STM32F0XX Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f10x_dma.Plugin" name="per_stm32f10x_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F10X_DMA</hardwareIds>
        <instanceIds>STM32F10X_DMA1CH1</instanceIds>
        <instanceIds>STM32F10X_DMA1CH2</instanceIds>
        <instanceIds>STM32F10X_DMA1CH3</instanceIds>
        <instanceIds>STM32F10X_DMA1CH4</instanceIds>
        <instanceIds>STM32F10X_DMA1CH5</instanceIds>
        <instanceIds>STM32F10X_DMA1CH6</instanceIds>
        <instanceIds>STM32F10X_DMA1CH7</instanceIds>
        <instanceIds>STM32F10X_DMA2CH1</instanceIds>
        <instanceIds>STM32F10X_DMA2CH2</instanceIds>
        <instanceIds>STM32F10X_DMA2CH3</instanceIds>
        <instanceIds>STM32F10X_DMA2CH4</instanceIds>
        <instanceIds>STM32F10X_DMA2CH5</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X DMA</captions>
        <descriptions>STMicroelectronics STM32F10X Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f2xx_dma.Plugin" name="per_stm32f2xx_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F2XX_DMA</hardwareIds>
        <instanceIds>STM32F2XX_DMA1CH0</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH1</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH2</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH3</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH4</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH5</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH6</instanceIds>
        <instanceIds>STM32F2XX_DMA1CH7</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH0</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH1</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH2</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH3</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH4</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH5</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH6</instanceIds>
        <instanceIds>STM32F2XX_DMA2CH7</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX DMA</captions>
        <descriptions>STMicroelectronics STM32F2XX Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f30x_dma.Plugin" name="per_stm32f30x_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F30X_DMA</hardwareIds>
        <instanceIds>STM32F30X_DMA1CH1</instanceIds>
        <instanceIds>STM32F30X_DMA1CH2</instanceIds>
        <instanceIds>STM32F30X_DMA1CH3</instanceIds>
        <instanceIds>STM32F30X_DMA1CH4</instanceIds>
        <instanceIds>STM32F30X_DMA1CH5</instanceIds>
        <instanceIds>STM32F30X_DMA1CH6</instanceIds>
        <instanceIds>STM32F30X_DMA1CH7</instanceIds>
        <instanceIds>STM32F30X_DMA2CH1</instanceIds>
        <instanceIds>STM32F30X_DMA2CH2</instanceIds>
        <instanceIds>STM32F30X_DMA2CH3</instanceIds>
        <instanceIds>STM32F30X_DMA2CH4</instanceIds>
        <instanceIds>STM32F30X_DMA2CH5</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X DMA</captions>
        <descriptions>STMicroelectronics STM32F30X Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f37x_dma.Plugin" name="per_stm32f37x_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F37X_DMA</hardwareIds>
        <instanceIds>STM32F37X_DMA1CH1</instanceIds>
        <instanceIds>STM32F37X_DMA1CH2</instanceIds>
        <instanceIds>STM32F37X_DMA1CH3</instanceIds>
        <instanceIds>STM32F37X_DMA1CH4</instanceIds>
        <instanceIds>STM32F37X_DMA1CH5</instanceIds>
        <instanceIds>STM32F37X_DMA1CH6</instanceIds>
        <instanceIds>STM32F37X_DMA1CH7</instanceIds>
        <instanceIds>STM32F37X_DMA2CH1</instanceIds>
        <instanceIds>STM32F37X_DMA2CH2</instanceIds>
        <instanceIds>STM32F37X_DMA2CH3</instanceIds>
        <instanceIds>STM32F37X_DMA2CH4</instanceIds>
        <instanceIds>STM32F37X_DMA2CH5</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X DMA</captions>
        <descriptions>STMicroelectronics STM32F37X Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32f4xx_dma.Plugin" name="per_stm32f4xx_dma" implements="per_stm32_dma">
        <hardwareIds>STM32F4XX_DMA</hardwareIds>
        <instanceIds>STM32F4XX_DMA1CH0</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH1</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH2</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH3</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH4</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH5</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH6</instanceIds>
        <instanceIds>STM32F4XX_DMA1CH7</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH0</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH1</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH2</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH3</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH4</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH5</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH6</instanceIds>
        <instanceIds>STM32F4XX_DMA2CH7</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX DMA</captions>
        <descriptions>STMicroelectronics STM32F4XX Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma/" relativeFileURI="ini/per_stm32l1xx_dma.Plugin" name="per_stm32l1xx_dma" implements="per_stm32_dma">
        <hardwareIds>STM32L1XX_DMA</hardwareIds>
        <instanceIds>STM32L1XX_DMA1CH1</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH2</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH3</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH4</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH5</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH6</instanceIds>
        <instanceIds>STM32L1XX_DMA1CH7</instanceIds>
        <instanceIds>STM32L1XX_DMA2CH1</instanceIds>
        <instanceIds>STM32L1XX_DMA2CH2</instanceIds>
        <instanceIds>STM32L1XX_DMA2CH3</instanceIds>
        <instanceIds>STM32L1XX_DMA2CH4</instanceIds>
        <instanceIds>STM32L1XX_DMA2CH5</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX DMA</captions>
        <descriptions>STMicroelectronics STM32L1XX Direct Memory Access</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/dma2d/" relativeFileURI="ini/per_stm32f4xx_dma2d.Plugin" name="per_stm32f4xx_dma2d" implements="per_stm32_dma2d">
        <hardwareIds>STM32F4XX_DMA2D</hardwareIds>
        <instanceIds>STM32F4XX_DMA2D</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX DMA2D</captions>
        <descriptions>STMicroelectronics STM32F4XX Chrom-Art Accelerator</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F42." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F43." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/ethmac/" relativeFileURI="ini/per_stm32f10x_ethmac.Plugin" name="per_stm32f10x_ethmac" implements="per_stm32_ethmac">
        <hardwareIds>STM32F10X_ETH</hardwareIds>
        <instanceIds>STM32F10X_ETH_MII</instanceIds>
        <instanceIds>STM32F10X_ETH_RMII</instanceIds>
        <pluginRequirements interface="stm32_eth_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X EMAC</captions>
        <descriptions>STMicroelectronics STM32F10X Ethernet MAC</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F107."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/ethmac/" relativeFileURI="ini/per_stm32f2xx_ethmac.Plugin" name="per_stm32f2xx_ethmac" implements="per_stm32_ethmac">
        <hardwareIds>STM32F2XX_ETH</hardwareIds>
        <instanceIds>STM32F2XX_ETH</instanceIds>
        <pluginRequirements interface="stm32f2xx_eth_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX EMAC</captions>
        <descriptions>STMicroelectronics STM32F2XX Ethernet MAC</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F207." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F217." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/ethmac/" relativeFileURI="ini/per_stm32f4xx_ethmac.Plugin" name="per_stm32f4xx_ethmac" implements="per_stm32_ethmac">
        <hardwareIds>STM32F4XX_ETH</hardwareIds>
        <instanceIds>STM32F4XX_ETH</instanceIds>
        <pluginRequirements interface="stm32f4xx_eth_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX EMAC</captions>
        <descriptions>STMicroelectronics STM32F4XX Ethernet MAC</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F407." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F417." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F42." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F43." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f0xx_exti.Plugin" name="per_stm32f0xx_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F0XX_EXTI</hardwareIds>
        <instanceIds>STM32F0XX_EXTI</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX EXTI</captions>
        <descriptions>STMicroelectronics STM32F0XX External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f10x_exti.Plugin" name="per_stm32f10x_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F10X_EXTI</hardwareIds>
        <instanceIds>STM32F10X_EXTI</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X EXTI</captions>
        <descriptions>STMicroelectronics STM32F10X External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f2xx_exti.Plugin" name="per_stm32f2xx_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F2XX_EXTI</hardwareIds>
        <instanceIds>STM32F2XX_EXTI</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX EXTI</captions>
        <descriptions>STMicroelectronics STM32F2XX External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f30x_exti.Plugin" name="per_stm32f30x_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F30X_EXTI</hardwareIds>
        <instanceIds>STM32F30X_EXTI</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X EXTI</captions>
        <descriptions>STMicroelectronics STM32F30X External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f37x_exti.Plugin" name="per_stm32f37x_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F37X_EXTI</hardwareIds>
        <instanceIds>STM32F37X_EXTI</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X EXTI</captions>
        <descriptions>STMicroelectronics STM32F37X External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32f4xx_exti.Plugin" name="per_stm32f4xx_exti" implements="per_stm32_exti">
        <hardwareIds>STM32F4XX_EXTI</hardwareIds>
        <instanceIds>STM32F4XX_EXTI</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX EXTI</captions>
        <descriptions>STMicroelectronics STM32F4XX External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/exti/" relativeFileURI="ini/per_stm32l1xx_exti.Plugin" name="per_stm32l1xx_exti" implements="per_stm32_exti">
        <hardwareIds>STM32L1XX_EXTI</hardwareIds>
        <instanceIds>STM32L1XX_EXTI</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX EXTI</captions>
        <descriptions>STMicroelectronics STM32L1XX External interrupt/event controller (EXTI)</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f0xx_flash.Plugin" name="per_stm32f0xx_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F0XX_FLASH</hardwareIds>
        <instanceIds>STM32F0XX_FLASH</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX FLASH</captions>
        <descriptions>STMicroelectronics STM32F0XX Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f10x_flash.Plugin" name="per_stm32f10x_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F10X_FLASH</hardwareIds>
        <instanceIds>STM32F10X_FLASH</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X FLASH</captions>
        <descriptions>STMicroelectronics STM32F10X Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f2xx_flash.Plugin" name="per_stm32f2xx_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F2XX_FLASH</hardwareIds>
        <instanceIds>STM32F2XX_FLASH</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX FLASH</captions>
        <descriptions>STMicroelectronics STM32F2XX Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f30x_flash.Plugin" name="per_stm32f30x_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F30X_FLASH</hardwareIds>
        <instanceIds>STM32F30X_FLASH</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X FLASH</captions>
        <descriptions>STMicroelectronics STM32F30X Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f37x_flash.Plugin" name="per_stm32f37x_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F37X_FLASH</hardwareIds>
        <instanceIds>STM32F37X_FLASH</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X FLASH</captions>
        <descriptions>STMicroelectronics STM32F37X Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32f4xx_flash.Plugin" name="per_stm32f4xx_flash" implements="per_stm32_flash">
        <hardwareIds>STM32F4XX_FLASH</hardwareIds>
        <instanceIds>STM32F4XX_FLASH</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX FLASH</captions>
        <descriptions>STMicroelectronics STM32F4XX Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/flash/" relativeFileURI="ini/per_stm32l1xx_flash.Plugin" name="per_stm32l1xx_flash" implements="per_stm32_flash">
        <hardwareIds>STM32L1XX_FLASH</hardwareIds>
        <instanceIds>STM32L1XX_FLASH</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX FLASH</captions>
        <descriptions>STMicroelectronics STM32L1XX Embedded Flash Memory Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/fmc/" relativeFileURI="ini/per_stm32f4xx_fmc.Plugin" name="per_stm32f4xx_fmc" implements="per_stm32_fmc">
        <hardwareIds>STM32F4XX_FMC</hardwareIds>
        <instanceIds>STM32F4XX_FMC1</instanceIds>
        <instanceIds>STM32F4XX_FMC1E</instanceIds>
        <instanceIds>STM32F4XX_FMC2</instanceIds>
        <instanceIds>STM32F4XX_FMC3</instanceIds>
        <instanceIds>STM32F4XX_FMC4</instanceIds>
        <instanceIds>STM32F4XX_FMC5_6</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX FMC</captions>
        <descriptions>STMicroelectronics STM32F4XX Flexible Memory Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F42." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F43." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F44." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/fsmc/" relativeFileURI="ini/per_stm32f10x_fsmc.Plugin" name="per_stm32f10x_fsmc" implements="per_stm32_fsmc">
        <hardwareIds>STM32F10X_FSMC</hardwareIds>
        <instanceIds>STM32F10X_FSMC1</instanceIds>
        <instanceIds>STM32F10X_FSMC1E</instanceIds>
        <instanceIds>STM32F10X_FSMC2</instanceIds>
        <instanceIds>STM32F10X_FSMC3</instanceIds>
        <instanceIds>STM32F10X_FSMC4</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X FSMC</captions>
        <descriptions>STMicroelectronics STM32F10X Flexible Static Memory Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F100." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F101." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F103." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/fsmc/" relativeFileURI="ini/per_stm32f2xx_fsmc.Plugin" name="per_stm32f2xx_fsmc" implements="per_stm32_fsmc">
        <hardwareIds>STM32F2XX_FSMC</hardwareIds>
        <instanceIds>STM32F2XX_FSMC1</instanceIds>
        <instanceIds>STM32F2XX_FSMC1E</instanceIds>
        <instanceIds>STM32F2XX_FSMC2</instanceIds>
        <instanceIds>STM32F2XX_FSMC3</instanceIds>
        <instanceIds>STM32F2XX_FSMC4</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX FSMC</captions>
        <descriptions>STMicroelectronics STM32F2XX Flexible Static Memory Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/fsmc/" relativeFileURI="ini/per_stm32f4xx_fsmc.Plugin" name="per_stm32f4xx_fsmc" implements="per_stm32_fsmc">
        <hardwareIds>STM32F4XX_FSMC</hardwareIds>
        <instanceIds>STM32F4XX_FSMC1</instanceIds>
        <instanceIds>STM32F4XX_FSMC1E</instanceIds>
        <instanceIds>STM32F4XX_FSMC2</instanceIds>
        <instanceIds>STM32F4XX_FSMC3</instanceIds>
        <instanceIds>STM32F4XX_FSMC4</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX FSMC</captions>
        <descriptions>STMicroelectronics STM32F4XX Flexible Static Memory Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F405." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F407." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F415." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F417." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/fsmc/" relativeFileURI="ini/per_stm32l1xx_fsmc.Plugin" name="per_stm32l1xx_fsmc" implements="per_stm32_fsmc">
        <hardwareIds>STM32L1XX_FSMC</hardwareIds>
        <instanceIds>STM32L1XX_FSMC1</instanceIds>
        <instanceIds>STM32L1XX_FSMC1E</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX FSMC</captions>
        <descriptions>STMicroelectronics STM32L1XX Flexible Static Memory Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L15." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L16." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f0xx_gpio.Plugin" name="per_stm32f0xx_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f0xx_gpio.h">
        <hardwareIds>STM32F0XX_GPIO</hardwareIds>
        <instanceIds>STM32F0XX_GPIOA</instanceIds>
        <instanceIds>STM32F0XX_GPIOB</instanceIds>
        <instanceIds>STM32F0XX_GPIOC</instanceIds>
        <instanceIds>STM32F0XX_GPIOD</instanceIds>
        <instanceIds>STM32F0XX_GPIOE</instanceIds>
        <instanceIds>STM32F0XX_GPIOF</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX GPIO</captions>
        <descriptions>STMicroelectronics STM32F0XX General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f10x_gpio.Plugin" name="per_stm32f10x_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f10x_gpio.h">
        <hardwareIds>STM32F10X_GPIO</hardwareIds>
        <instanceIds>STM32F10X_GPIOA</instanceIds>
        <instanceIds>STM32F10X_GPIOB</instanceIds>
        <instanceIds>STM32F10X_GPIOC</instanceIds>
        <instanceIds>STM32F10X_GPIOD</instanceIds>
        <instanceIds>STM32F10X_GPIOE</instanceIds>
        <instanceIds>STM32F10X_GPIOF</instanceIds>
        <instanceIds>STM32F10X_GPIOG</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X GPIO</captions>
        <descriptions>STMicroelectronics STM32F10X General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f2xx_gpio.Plugin" name="per_stm32f2xx_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f2xx_gpio.h">
        <hardwareIds>STM32F2XX_GPIO</hardwareIds>
        <instanceIds>STM32F2XX_GPIOA</instanceIds>
        <instanceIds>STM32F2XX_GPIOB</instanceIds>
        <instanceIds>STM32F2XX_GPIOC</instanceIds>
        <instanceIds>STM32F2XX_GPIOD</instanceIds>
        <instanceIds>STM32F2XX_GPIOE</instanceIds>
        <instanceIds>STM32F2XX_GPIOF</instanceIds>
        <instanceIds>STM32F2XX_GPIOG</instanceIds>
        <instanceIds>STM32F2XX_GPIOH</instanceIds>
        <instanceIds>STM32F2XX_GPIOI</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX GPIO</captions>
        <descriptions>STMicroelectronics STM32F2XX General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f30x_gpio.Plugin" name="per_stm32f30x_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f30x_gpio.h">
        <hardwareIds>STM32F30X_GPIO</hardwareIds>
        <instanceIds>STM32F30X_GPIOA</instanceIds>
        <instanceIds>STM32F30X_GPIOB</instanceIds>
        <instanceIds>STM32F30X_GPIOC</instanceIds>
        <instanceIds>STM32F30X_GPIOD</instanceIds>
        <instanceIds>STM32F30X_GPIOE</instanceIds>
        <instanceIds>STM32F30X_GPIOF</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X GPIO</captions>
        <descriptions>STMicroelectronics STM32F30X General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f37x_gpio.Plugin" name="per_stm32f37x_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f37x_gpio.h">
        <hardwareIds>STM32F37X_GPIO</hardwareIds>
        <instanceIds>STM32F37X_GPIOA</instanceIds>
        <instanceIds>STM32F37X_GPIOB</instanceIds>
        <instanceIds>STM32F37X_GPIOC</instanceIds>
        <instanceIds>STM32F37X_GPIOD</instanceIds>
        <instanceIds>STM32F37X_GPIOE</instanceIds>
        <instanceIds>STM32F37X_GPIOF</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X GPIO</captions>
        <descriptions>STMicroelectronics STM32F37X General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32l1xx_gpio.Plugin" name="per_stm32l1xx_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32l1xx_gpio.h">
        <hardwareIds>STM32L1XX_GPIO</hardwareIds>
        <instanceIds>STM32L1XX_GPIOA</instanceIds>
        <instanceIds>STM32L1XX_GPIOB</instanceIds>
        <instanceIds>STM32L1XX_GPIOC</instanceIds>
        <instanceIds>STM32L1XX_GPIOD</instanceIds>
        <instanceIds>STM32L1XX_GPIOE</instanceIds>
        <instanceIds>STM32L1XX_GPIOF</instanceIds>
        <instanceIds>STM32L1XX_GPIOG</instanceIds>
        <instanceIds>STM32L1XX_GPIOH</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX GPIO</captions>
        <descriptions>STMicroelectronics STM32L1XX General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/hash/" relativeFileURI="ini/per_stm32f2xx_hash.Plugin" name="per_stm32f2xx_hash" implements="per_stm32_hash">
        <hardwareIds>STM32F2XX_HASH</hardwareIds>
        <instanceIds>STM32F2XX_HASH</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX HASH</captions>
        <descriptions>STMicroelectronics STM32F2XX Hash Processor</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/hash/" relativeFileURI="ini/per_stm32f4xx_hash.Plugin" name="per_stm32f4xx_hash" implements="per_stm32_hash">
        <hardwareIds>STM32F4XX_HASH</hardwareIds>
        <instanceIds>STM32F4XX_HASH</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX HASH</captions>
        <descriptions>STMicroelectronics STM32F4XX Hash Processor</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f0xx_i2c.Plugin" name="per_stm32f0xx_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F0XX_I2C</hardwareIds>
        <instanceIds>STM32F0XX_I2C1</instanceIds>
        <instanceIds>STM32F0XX_I2C2</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX I2C</captions>
        <descriptions>STMicroelectronics STM32F0XX I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f10x_i2c.Plugin" name="per_stm32f10x_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F10X_I2C</hardwareIds>
        <instanceIds>STM32F10X_I2C1</instanceIds>
        <instanceIds>STM32F10X_I2C2</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X I2C</captions>
        <descriptions>STMicroelectronics STM32F10X I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f2xx_i2c.Plugin" name="per_stm32f2xx_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F2XX_I2C</hardwareIds>
        <instanceIds>STM32F2XX_I2C1</instanceIds>
        <instanceIds>STM32F2XX_I2C2</instanceIds>
        <instanceIds>STM32F2XX_I2C3</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX I2C</captions>
        <descriptions>STMicroelectronics STM32F2XX I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f30x_i2c.Plugin" name="per_stm32f30x_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F30X_I2C</hardwareIds>
        <instanceIds>STM32F30X_I2C1</instanceIds>
        <instanceIds>STM32F30X_I2C2</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X I2C</captions>
        <descriptions>STMicroelectronics STM32F30X I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f37x_i2c.Plugin" name="per_stm32f37x_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F37X_I2C</hardwareIds>
        <instanceIds>STM32F37X_I2C1</instanceIds>
        <instanceIds>STM32F37X_I2C2</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X I2C</captions>
        <descriptions>STMicroelectronics STM32F37X I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32l1xx_i2c.Plugin" name="per_stm32l1xx_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32L1XX_I2C</hardwareIds>
        <instanceIds>STM32L1XX_I2C1</instanceIds>
        <instanceIds>STM32L1XX_I2C2</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX I2C</captions>
        <descriptions>STMicroelectronics STM32L1XX I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32f10x_i2s.Plugin" name="per_stm32f10x_i2s" implements="per_stm32_i2s">
        <hardwareIds>STM32F10X_I2S</hardwareIds>
        <instanceIds>STM32F10X_I2S2</instanceIds>
        <instanceIds>STM32F10X_I2S3</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X I2S</captions>
        <descriptions>STMicroelectronics STM32F10X I2S</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32f2xx_i2s.Plugin" name="per_stm32f2xx_i2s" implements="per_stm32_i2s">
        <hardwareIds>STM32F2XX_I2S</hardwareIds>
        <instanceIds>STM32F2XX_I2S2</instanceIds>
        <instanceIds>STM32F2XX_I2S3</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX I2S</captions>
        <descriptions>STMicroelectronics STM32F2XX I2S</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32f30x_i2s.Plugin" name="per_stm32f30x_i2s" implements="per_stm32_i2s">
        <hardwareIds>STM32F30X_I2S</hardwareIds>
        <instanceIds>STM32F30X_I2S2</instanceIds>
        <instanceIds>STM32F30X_I2S3</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X I2S</captions>
        <descriptions>STMicroelectronics STM32F30X I2S</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32f37x_i2s.Plugin" name="per_stm32f37x_i2s" implements="per_stm32_i2s">
        <hardwareIds>STM32F37X_I2S</hardwareIds>
        <instanceIds>STM32F37X_I2S1</instanceIds>
        <instanceIds>STM32F37X_I2S2</instanceIds>
        <instanceIds>STM32F37X_I2S3</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X I2S</captions>
        <descriptions>STMicroelectronics STM32F37X I2S</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f0xx_iwdg.Plugin" name="per_stm32f0xx_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F0XX_IWDG</hardwareIds>
        <instanceIds>STM32F0XX_IWDG</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX IWDG</captions>
        <descriptions>STMicroelectronics STM32F0XX Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f10x_iwdg.Plugin" name="per_stm32f10x_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F10X_IWDG</hardwareIds>
        <instanceIds>STM32F10X_IWDG</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X IWDG</captions>
        <descriptions>STMicroelectronics STM32F10X Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f2xx_iwdg.Plugin" name="per_stm32f2xx_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F2XX_IWDG</hardwareIds>
        <instanceIds>STM32F2XX_IWDG</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX IWDG</captions>
        <descriptions>STMicroelectronics STM32F2XX Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f30x_iwdg.Plugin" name="per_stm32f30x_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F30X_IWDG</hardwareIds>
        <instanceIds>STM32F30X_IWDG</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X IWDG</captions>
        <descriptions>STMicroelectronics STM32F30X Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f37x_iwdg.Plugin" name="per_stm32f37x_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F37X_IWDG</hardwareIds>
        <instanceIds>STM32F37X_IWDG</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X IWDG</captions>
        <descriptions>STMicroelectronics STM32F37X Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32f4xx_iwdg.Plugin" name="per_stm32f4xx_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32F4XX_IWDG</hardwareIds>
        <instanceIds>STM32F4XX_IWDG</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX IWDG</captions>
        <descriptions>STMicroelectronics STM32F4XX Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/iwdg/" relativeFileURI="ini/per_stm32l1xx_iwdg.Plugin" name="per_stm32l1xx_iwdg" implements="per_stm32_iwdg">
        <hardwareIds>STM32L1XX_IWDG</hardwareIds>
        <instanceIds>STM32L1XX_IWDG</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX IWDG</captions>
        <descriptions>STMicroelectronics STM32L1XX Independent Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/lcd/" relativeFileURI="ini/per_stm32l1xx_lcd.Plugin" name="per_stm32l1xx_lcd" implements="per_stm32_lcd">
        <hardwareIds>STM32L1XX_LCD</hardwareIds>
        <instanceIds>STM32L1XX_LCD</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX LCD</captions>
        <descriptions>STMicroelectronics STM32L1XX LCD Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/ltdc/" relativeFileURI="ini/per_stm32f4xx_ltdc.Plugin" name="per_stm32f4xx_ltdc" implements="per_stm32_ltdc">
        <hardwareIds>STM32F4XX_LTDC</hardwareIds>
        <instanceIds>STM32F4XX_LTDC</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX LTDC</captions>
        <descriptions>STMicroelectronics STM32F4XX LTDC Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F429." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F439." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/opamp/" relativeFileURI="ini/per_stm32f30x_opamp.Plugin" name="per_stm32f30x_opamp" implements="per_stm32_opamp">
        <hardwareIds>STM32F30X_OPAMP</hardwareIds>
        <instanceIds>STM32F30X_OPAMP1</instanceIds>
        <instanceIds>STM32F30X_OPAMP2</instanceIds>
        <instanceIds>STM32F30X_OPAMP3</instanceIds>
        <instanceIds>STM32F30X_OPAMP4</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X OPAMP</captions>
        <descriptions>STMicroelectronics STM32F30X Operational Amplifiers</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/opamp/" relativeFileURI="ini/per_stm32l1xx_opamp.Plugin" name="per_stm32l1xx_opamp" implements="per_stm32_opamp">
        <hardwareIds>STM32L1XX_OPAMP</hardwareIds>
        <instanceIds>STM32L1XX_OPAMP</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX OPAMP</captions>
        <descriptions>STMicroelectronics STM32L1XX Operational Amplifiers</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f0xx_pwr.Plugin" name="per_stm32f0xx_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F0XX_PWR</hardwareIds>
        <instanceIds>STM32F0XX_PWR</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX PWR</captions>
        <descriptions>STMicroelectronics STM32F0XX Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f10x_pwr.Plugin" name="per_stm32f10x_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F10X_PWR</hardwareIds>
        <instanceIds>STM32F10X_PWR</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X PWR</captions>
        <descriptions>STMicroelectronics STM32F10X Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f2xx_pwr.Plugin" name="per_stm32f2xx_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F2XX_PWR</hardwareIds>
        <instanceIds>STM32F2XX_PWR</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX PWR</captions>
        <descriptions>STMicroelectronics STM32F2XX Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f30x_pwr.Plugin" name="per_stm32f30x_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F30X_PWR</hardwareIds>
        <instanceIds>STM32F30X_PWR</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X PWR</captions>
        <descriptions>STMicroelectronics STM32F30X Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f37x_pwr.Plugin" name="per_stm32f37x_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F37X_PWR</hardwareIds>
        <instanceIds>STM32F37X_PWR</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X PWR</captions>
        <descriptions>STMicroelectronics STM32F37X Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32f4xx_pwr.Plugin" name="per_stm32f4xx_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32F4XX_PWR</hardwareIds>
        <instanceIds>STM32F4XX_PWR</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX PWR</captions>
        <descriptions>STMicroelectronics STM32F4XX Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/pwr/" relativeFileURI="ini/per_stm32l1xx_pwr.Plugin" name="per_stm32l1xx_pwr" implements="per_stm32_pwr">
        <hardwareIds>STM32L1XX_PWR</hardwareIds>
        <instanceIds>STM32L1XX_PWR</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX PWR</captions>
        <descriptions>STMicroelectronics STM32L1XX Power Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f0xx_rcc.Plugin" name="per_stm32f0xx_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F0XX_RCC</hardwareIds>
        <instanceIds>STM32F0XX_RCC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX RCC</captions>
        <descriptions>STMicroelectronics STM32F0XX Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f10x_rcc.Plugin" name="per_stm32f10x_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F10X_RCC</hardwareIds>
        <instanceIds>STM32F10X_RCC</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X RCC</captions>
        <descriptions>STMicroelectronics STM32F10X Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f2xx_rcc.Plugin" name="per_stm32f2xx_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F2XX_RCC</hardwareIds>
        <instanceIds>STM32F2XX_RCC</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX RCC</captions>
        <descriptions>STMicroelectronics STM32F2XX Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f30x_rcc.Plugin" name="per_stm32f3x_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F30X_RCC</hardwareIds>
        <instanceIds>STM32F30X_RCC</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X RCC</captions>
        <descriptions>STMicroelectronics STM32F30X Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f37x_rcc.Plugin" name="per_stm32f37x_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F37X_RCC</hardwareIds>
        <instanceIds>STM32F37X_RCC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X RCC</captions>
        <descriptions>STMicroelectronics STM32F37X Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32f4xx_rcc.Plugin" name="per_stm32f4xx_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32F4XX_RCC</hardwareIds>
        <instanceIds>STM32F4XX_RCC</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX RCC</captions>
        <descriptions>STMicroelectronics STM32F4XX Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rcc/" relativeFileURI="ini/per_stm32l1xx_rcc.Plugin" name="per_stm32l1xx_rcc" implements="per_stm32_rcc">
        <hardwareIds>STM32L1XX_RCC</hardwareIds>
        <instanceIds>STM32L1XX_RCC</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX RCC</captions>
        <descriptions>STMicroelectronics STM32L1XX Reset and Clock Control</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rng/" relativeFileURI="ini/per_stm32f2xx_rng.Plugin" name="per_stm32f2xx_rng" implements="per_stm32_rng">
        <hardwareIds>STM32F2XX_RNG</hardwareIds>
        <instanceIds>STM32F2XX_RNG</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX RNG</captions>
        <descriptions>STMicroelectronics STM32F2XX Random Number Generator</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rng/" relativeFileURI="ini/per_stm32f4xx_rng.Plugin" name="per_stm32f4xx_rng" implements="per_stm32_rng">
        <hardwareIds>STM32F4XX_RNG</hardwareIds>
        <instanceIds>STM32F4XX_RNG</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX RNG</captions>
        <descriptions>STMicroelectronics STM32F4XX Random Number Generator</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f0xx_rtc.Plugin" name="per_stm32f0xx_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F0XX_RTC</hardwareIds>
        <instanceIds>STM32F0XX_RTC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX RTC</captions>
        <descriptions>STMicroelectronics STM32F0XX Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f10x_rtc.Plugin" name="per_stm32f10x_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F10X_RTC</hardwareIds>
        <instanceIds>STM32F10X_RTC</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X RTC</captions>
        <descriptions>STMicroelectronics STM32F10X Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f2xx_rtc.Plugin" name="per_stm32f2xx_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F2XX_RTC</hardwareIds>
        <instanceIds>STM32F2XX_RTC</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX RTC</captions>
        <descriptions>STMicroelectronics STM32F2XX Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f30x_rtc.Plugin" name="per_stm32f30x_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F30X_RTC</hardwareIds>
        <instanceIds>STM32F30X_RTC</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X RTC</captions>
        <descriptions>STMicroelectronics STM32F30X Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f37x_rtc.Plugin" name="per_stm32f37x_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F37X_RTC</hardwareIds>
        <instanceIds>STM32F37X_RTC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X RTC</captions>
        <descriptions>STMicroelectronics STM32F37X Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32f4xx_rtc.Plugin" name="per_stm32f4xx_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32F4XX_RTC</hardwareIds>
        <instanceIds>STM32F4XX_RTC</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX RTC</captions>
        <descriptions>STMicroelectronics STM32F4XX Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/rtc/" relativeFileURI="ini/per_stm32l1xx_rtc.Plugin" name="per_stm32l1xx_rtc" implements="per_stm32_rtc">
        <hardwareIds>STM32L1XX_RTC</hardwareIds>
        <instanceIds>STM32L1XX_RTC</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX RTC</captions>
        <descriptions>STMicroelectronics STM32L1XX Real Time Clock</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sai/" relativeFileURI="ini/per_stm32f4xx_sai.Plugin" name="per_stm32f4xx_sai" implements="per_stm32_sai">
        <hardwareIds>STM32F4XX_SAI</hardwareIds>
        <instanceIds>STM32F4XX_SAI1A</instanceIds>
        <instanceIds>STM32F4XX_SAI1B</instanceIds>
        <generateIncludes>stm32f4xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX SAI</captions>
        <descriptions>STMicroelectronics STM32F4XX Serial Audio Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F42." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F43." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sdadc/" relativeFileURI="ini/per_stm32f37x_sdadc.Plugin" name="per_stm32f37x_sdadc" implements="per_stm32_sdadc">
        <hardwareIds>STM32F37X_SDADC</hardwareIds>
        <instanceIds>STM32F37X_SDADC1</instanceIds>
        <instanceIds>STM32F37X_SDADC2</instanceIds>
        <instanceIds>STM32F37X_SDADC3</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X SDADC</captions>
        <descriptions>STMicroelectronics STM32F37X Sigma-Delta Analog-to-Digital Converter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sdio/" relativeFileURI="ini/per_stm32f10x_sdio.Plugin" name="per_stm32f10x_sdio" implements="per_stm32_sdio">
        <hardwareIds>STM32F10X_SDIO</hardwareIds>
        <instanceIds>STM32F10X_SDIO</instanceIds>
        <generateIncludes>stm32f10x_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X SDIO</captions>
        <descriptions>STMicroelectronics STM32F10X Secure Digital Card interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F103."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sdio/" relativeFileURI="ini/per_stm32f2xx_sdio.Plugin" name="per_stm32f2xx_sdio" implements="per_stm32_sdio">
        <hardwareIds>STM32F2XX_SDIO</hardwareIds>
        <instanceIds>STM32F2XX_SDIO</instanceIds>
        <generateIncludes>stm32f2xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX SDIO</captions>
        <descriptions>STMicroelectronics STM32 Secure Digital Card interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sdio/" relativeFileURI="ini/per_stm32f4xx_sdio.Plugin" name="per_stm32f4xx_sdio" implements="per_stm32_sdio">
        <hardwareIds>STM32F4XX_SDIO</hardwareIds>
        <instanceIds>STM32F4XX_SDIO</instanceIds>
        <generateIncludes>stm32f4xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX SDIO</captions>
        <descriptions>STMicroelectronics STM32 Secure Digital Card interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/sdio/" relativeFileURI="ini/per_stm32l1xx_sdio.Plugin" name="per_stm32l1xx_sdio" implements="per_stm32_sdio">
        <hardwareIds>STM32L1XX_SDIO</hardwareIds>
        <instanceIds>STM32L1XX_SDIO</instanceIds>
        <generateIncludes>stm32l1xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX SDIO</captions>
        <descriptions>STMicroelectronics STM32 Secure Digital Card interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L15." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L16." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f0xx_spi.Plugin" name="per_stm32f0xx_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F0XX_SPI</hardwareIds>
        <instanceIds>STM32F0XX_SPI1</instanceIds>
        <instanceIds>STM32F0XX_SPI2</instanceIds>
        <generateIncludes>stm32f0xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX SPI</captions>
        <descriptions>STMicroelectronics STM32 Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f10x_spi.Plugin" name="per_stm32f10x_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F10X_SPI</hardwareIds>
        <instanceIds>STM32F10X_SPI1</instanceIds>
        <instanceIds>STM32F10X_SPI2</instanceIds>
        <instanceIds>STM32F10X_SPI3</instanceIds>
        <generateIncludes>stm32f10x_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X SPI</captions>
        <descriptions>STMicroelectronics STM32F10X Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f2xx_spi.Plugin" name="per_stm32f2xx_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F2XX_SPI</hardwareIds>
        <instanceIds>STM32F2XX_SPI1</instanceIds>
        <instanceIds>STM32F2XX_SPI2</instanceIds>
        <instanceIds>STM32F2XX_SPI3</instanceIds>
        <generateIncludes>stm32f2xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX SPI</captions>
        <descriptions>STMicroelectronics STM32F2XX Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f30x_spi.Plugin" name="per_stm32f30x_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F30X_SPI</hardwareIds>
        <instanceIds>STM32F30X_SPI1</instanceIds>
        <instanceIds>STM32F30X_SPI2</instanceIds>
        <instanceIds>STM32F30X_SPI3</instanceIds>
        <instanceIds>STM32F30X_SPI4</instanceIds>
        <generateIncludes>stm32f30x_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X SPI</captions>
        <descriptions>STMicroelectronics STM32F30X Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f37x_spi.Plugin" name="per_stm32f37x_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F37X_SPI</hardwareIds>
        <instanceIds>STM32F37X_SPI1</instanceIds>
        <instanceIds>STM32F37X_SPI2</instanceIds>
        <instanceIds>STM32F37X_SPI3</instanceIds>
        <generateIncludes>stm32f37x_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X SPI</captions>
        <descriptions>STMicroelectronics STM32F37X Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32f4xx_spi.Plugin" name="per_stm32f4xx_spi" implements="per_stm32_spi">
        <hardwareIds>STM32F4XX_SPI</hardwareIds>
        <instanceIds>STM32F4XX_SPI1</instanceIds>
        <instanceIds>STM32F4XX_SPI2</instanceIds>
        <instanceIds>STM32F4XX_SPI3</instanceIds>
        <instanceIds>STM32F4XX_SPI4</instanceIds>
        <instanceIds>STM32F4XX_SPI5</instanceIds>
        <instanceIds>STM32F4XX_SPI6</instanceIds>
        <generateIncludes>stm32f4xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX SPI</captions>
        <descriptions>STMicroelectronics STM32F4XX Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/spi/" relativeFileURI="ini/per_stm32l1xx_spi.Plugin" name="per_stm32l1xx_spi" implements="per_stm32_spi">
        <hardwareIds>STM32L1XX_SPI</hardwareIds>
        <instanceIds>STM32L1XX_SPI1</instanceIds>
        <instanceIds>STM32L1XX_SPI2</instanceIds>
        <instanceIds>STM32L1XX_SPI3</instanceIds>
        <generateIncludes>stm32l1xx_gpio.h</generateIncludes>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX SPI</captions>
        <descriptions>STMicroelectronics STM32 Serial Peripheral Interface</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32f0xx_syscfg.Plugin" name="per_stm32f0xx_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32F0XX_SYSCFG</hardwareIds>
        <instanceIds>STM32F0XX_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX SYSCFG</captions>
        <descriptions>STMicroelectronics STM32F0XX System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32f2xx_syscfg.Plugin" name="per_stm32f2xx_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32F2XX_SYSCFG</hardwareIds>
        <instanceIds>STM32F2XX_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX SYSCFG</captions>
        <descriptions>STMicroelectronics STM32F2XX System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32f30x_syscfg.Plugin" name="per_stm32f30x_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32F30X_SYSCFG</hardwareIds>
        <instanceIds>STM32F30X_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X SYSCFG</captions>
        <descriptions>STMicroelectronics STM32F30X System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32f37x_syscfg.Plugin" name="per_stm32f37x_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32F37X_SYSCFG</hardwareIds>
        <instanceIds>STM32F37X_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X SYSCFG</captions>
        <descriptions>STMicroelectronics STM32F37X System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32f4xx_syscfg.Plugin" name="per_stm32f4xx_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32F4XX_SYSCFG</hardwareIds>
        <instanceIds>STM32F4XX_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX SYSCFG</captions>
        <descriptions>STMicroelectronics STM32F4XX System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/syscfg/" relativeFileURI="ini/per_stm32l1xx_syscfg.Plugin" name="per_stm32l1xx_syscfg" implements="per_stm32_syscfg">
        <hardwareIds>STM32L1XX_SYSCFG</hardwareIds>
        <instanceIds>STM32L1XX_SYSCFG</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX SYSCFG</captions>
        <descriptions>STMicroelectronics STM32L1XX System Configuration Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f0xx_tim.Plugin" name="per_stm32f0xx_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F0XX_TIM</hardwareIds>
        <instanceIds>STM32F0XX_TIM1</instanceIds>
        <instanceIds>STM32F0XX_TIM2</instanceIds>
        <instanceIds>STM32F0XX_TIM3</instanceIds>
        <instanceIds>STM32F0XX_TIM6</instanceIds>
        <instanceIds>STM32F0XX_TIM14</instanceIds>
        <instanceIds>STM32F0XX_TIM15</instanceIds>
        <instanceIds>STM32F0XX_TIM16</instanceIds>
        <instanceIds>STM32F0XX_TIM17</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX TIM</captions>
        <descriptions>STMicroelectronics STM32F0XX Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f10x_tim.Plugin" name="per_stm32f10x_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F10X_TIM</hardwareIds>
        <instanceIds>STM32F10X_TIM1</instanceIds>
        <instanceIds>STM32F10X_TIM2</instanceIds>
        <instanceIds>STM32F10X_TIM3</instanceIds>
        <instanceIds>STM32F10X_TIM4</instanceIds>
        <instanceIds>STM32F10X_TIM5</instanceIds>
        <instanceIds>STM32F10X_TIM6</instanceIds>
        <instanceIds>STM32F10X_TIM7</instanceIds>
        <instanceIds>STM32F10X_TIM8</instanceIds>
        <instanceIds>STM32F10X_TIM9</instanceIds>
        <instanceIds>STM32F10X_TIM10</instanceIds>
        <instanceIds>STM32F10X_TIM11</instanceIds>
        <instanceIds>STM32F10X_TIM12</instanceIds>
        <instanceIds>STM32F10X_TIM13</instanceIds>
        <instanceIds>STM32F10X_TIM14</instanceIds>
        <instanceIds>STM32F10X_TIM15</instanceIds>
        <instanceIds>STM32F10X_TIM16</instanceIds>
        <instanceIds>STM32F10X_TIM17</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X TIM</captions>
        <descriptions>STMicroelectronics STM32F10X Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f2xx_tim.Plugin" name="per_stm32f2xx_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F2XX_TIM</hardwareIds>
        <instanceIds>STM32F2XX_TIM1</instanceIds>
        <instanceIds>STM32F2XX_TIM2</instanceIds>
        <instanceIds>STM32F2XX_TIM3</instanceIds>
        <instanceIds>STM32F2XX_TIM4</instanceIds>
        <instanceIds>STM32F2XX_TIM5</instanceIds>
        <instanceIds>STM32F2XX_TIM6</instanceIds>
        <instanceIds>STM32F2XX_TIM7</instanceIds>
        <instanceIds>STM32F2XX_TIM8</instanceIds>
        <instanceIds>STM32F2XX_TIM9</instanceIds>
        <instanceIds>STM32F2XX_TIM10</instanceIds>
        <instanceIds>STM32F2XX_TIM11</instanceIds>
        <instanceIds>STM32F2XX_TIM12</instanceIds>
        <instanceIds>STM32F2XX_TIM13</instanceIds>
        <instanceIds>STM32F2XX_TIM14</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX TIM</captions>
        <descriptions>STMicroelectronics STM32F2XX Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM322." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f30x_tim.Plugin" name="per_stm32f30x_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F30X_TIM</hardwareIds>
        <instanceIds>STM32F30X_TIM1</instanceIds>
        <instanceIds>STM32F30X_TIM2</instanceIds>
        <instanceIds>STM32F30X_TIM3</instanceIds>
        <instanceIds>STM32F30X_TIM4</instanceIds>
        <instanceIds>STM32F30X_TIM6</instanceIds>
        <instanceIds>STM32F30X_TIM7</instanceIds>
        <instanceIds>STM32F30X_TIM8</instanceIds>
        <instanceIds>STM32F30X_TIM15</instanceIds>
        <instanceIds>STM32F30X_TIM16</instanceIds>
        <instanceIds>STM32F30X_TIM17</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X TIM</captions>
        <descriptions>STMicroelectronics STM32F30X Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f37x_tim.Plugin" name="per_stm32f37x_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F37X_TIM</hardwareIds>
        <instanceIds>STM32F37X_TIM2</instanceIds>
        <instanceIds>STM32F37X_TIM3</instanceIds>
        <instanceIds>STM32F37X_TIM4</instanceIds>
        <instanceIds>STM32F37X_TIM5</instanceIds>
        <instanceIds>STM32F37X_TIM6</instanceIds>
        <instanceIds>STM32F37X_TIM7</instanceIds>
        <instanceIds>STM32F37X_TIM12</instanceIds>
        <instanceIds>STM32F37X_TIM13</instanceIds>
        <instanceIds>STM32F37X_TIM14</instanceIds>
        <instanceIds>STM32F37X_TIM15</instanceIds>
        <instanceIds>STM32F37X_TIM16</instanceIds>
        <instanceIds>STM32F37X_TIM17</instanceIds>
        <instanceIds>STM32F37X_TIM18</instanceIds>
        <instanceIds>STM32F37X_TIM19</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X TIM</captions>
        <descriptions>STMicroelectronics STM32F37X Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32f4xx_tim.Plugin" name="per_stm32f4xx_tim" implements="per_stm32_tim">
        <hardwareIds>STM32F4XX_TIM</hardwareIds>
        <instanceIds>STM32F4XX_TIM1</instanceIds>
        <instanceIds>STM32F4XX_TIM2</instanceIds>
        <instanceIds>STM32F4XX_TIM3</instanceIds>
        <instanceIds>STM32F4XX_TIM4</instanceIds>
        <instanceIds>STM32F4XX_TIM5</instanceIds>
        <instanceIds>STM32F4XX_TIM6</instanceIds>
        <instanceIds>STM32F4XX_TIM7</instanceIds>
        <instanceIds>STM32F4XX_TIM8</instanceIds>
        <instanceIds>STM32F4XX_TIM9</instanceIds>
        <instanceIds>STM32F4XX_TIM10</instanceIds>
        <instanceIds>STM32F4XX_TIM11</instanceIds>
        <instanceIds>STM32F4XX_TIM12</instanceIds>
        <instanceIds>STM32F4XX_TIM13</instanceIds>
        <instanceIds>STM32F4XX_TIM14</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX TIM</captions>
        <descriptions>STMicroelectronics STM32F4XX Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tim/" relativeFileURI="ini/per_stm32l1xx_tim.Plugin" name="per_stm32l1xx_tim" implements="per_stm32_tim">
        <hardwareIds>STM32L1XX_TIM</hardwareIds>
        <instanceIds>STM32L1XX_TIM2</instanceIds>
        <instanceIds>STM32L1XX_TIM3</instanceIds>
        <instanceIds>STM32L1XX_TIM4</instanceIds>
        <instanceIds>STM32L1XX_TIM5</instanceIds>
        <instanceIds>STM32L1XX_TIM6</instanceIds>
        <instanceIds>STM32L1XX_TIM7</instanceIds>
        <instanceIds>STM32L1XX_TIM9</instanceIds>
        <instanceIds>STM32L1XX_TIM10</instanceIds>
        <instanceIds>STM32L1XX_TIM11</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX TIM</captions>
        <descriptions>STMicroelectronics STM32L1XX Timer</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tsc/" relativeFileURI="ini/per_stm32f0xx_tsc.Plugin" name="per_stm32f0xx_tsc" implements="per_stm32_tsc">
        <hardwareIds>STM32F0XX_TSC</hardwareIds>
        <instanceIds>STM32F0XX_TSC</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX TSC</captions>
        <descriptions>STMicroelectronics STM32F0XX Touch Sensing Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tsc/" relativeFileURI="ini/per_stm32f30x_tsc.Plugin" name="per_stm32f30x_tsc" implements="per_stm32_tsc">
        <hardwareIds>STM32F30X_TSC</hardwareIds>
        <instanceIds>STM32F30X_TSC</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X TSC</captions>
        <descriptions>STMicroelectronics STM32F30X Touch Sensing Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/tsc/" relativeFileURI="ini/per_stm32f37x_tsc.Plugin" name="per_stm32f37x_tsc" implements="per_stm32_tsc">
        <hardwareIds>STM32F37X_TSC</hardwareIds>
        <instanceIds>STM32F37X_TSC</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X TSC</captions>
        <descriptions>STMicroelectronics STM32F37X Touch Sensing Controller</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f0xx_usart.Plugin" name="per_stm32f0xx_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f0xx_gpio.h">
        <hardwareIds>STM32F0XX_USART</hardwareIds>
        <instanceIds>STM32F0XX_USART1</instanceIds>
        <instanceIds>STM32F0XX_USART2</instanceIds>
        <instanceIds>STM32F0XX_USART3</instanceIds>
        <instanceIds>STM32F0XX_USART4</instanceIds>
        <instanceIds>STM32F0XX_USART5</instanceIds>
        <instanceIds>STM32F0XX_USART6</instanceIds>
        <instanceIds>STM32F0XX_USART7</instanceIds>
        <instanceIds>STM32F0XX_USART8</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX USART</captions>
        <descriptions>STMicroelectronics STM32F0XX Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f10x_usart.Plugin" name="per_stm32f10x_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f10x_gpio.h">
        <hardwareIds>STM32F10X_USART</hardwareIds>
        <instanceIds>STM32F10X_USART1</instanceIds>
        <instanceIds>STM32F10X_USART2</instanceIds>
        <instanceIds>STM32F10X_USART3</instanceIds>
        <instanceIds>STM32F10X_UART4</instanceIds>
        <instanceIds>STM32F10X_UART5</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X USART</captions>
        <descriptions>STMicroelectronics STM32F10X Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f2xx_usart.Plugin" name="per_stm32f2xx_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f2xx_gpio.h">
        <hardwareIds>STM32F2XX_USART</hardwareIds>
        <instanceIds>STM32F2XX_USART1</instanceIds>
        <instanceIds>STM32F2XX_USART2</instanceIds>
        <instanceIds>STM32F2XX_USART3</instanceIds>
        <instanceIds>STM32F2XX_UART4</instanceIds>
        <instanceIds>STM32F2XX_UART5</instanceIds>
        <instanceIds>STM32F2XX_USART6</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F2XX USART</captions>
        <descriptions>STMicroelectronics STM32F2XX Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f30x_usart.Plugin" name="per_stm32f30x_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f30x_gpio.h">
        <hardwareIds>STM32F30X_USART</hardwareIds>
        <instanceIds>STM32F30X_USART1</instanceIds>
        <instanceIds>STM32F30X_USART2</instanceIds>
        <instanceIds>STM32F30X_USART3</instanceIds>
        <instanceIds>STM32F30X_UART4</instanceIds>
        <instanceIds>STM32F30X_UART5</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X USART</captions>
        <descriptions>STMicroelectronics STM32F30X Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f37x_usart.Plugin" name="per_stm32f37x_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f37x_gpio.h">
        <hardwareIds>STM32F37X_USART</hardwareIds>
        <instanceIds>STM32F37X_USART1</instanceIds>
        <instanceIds>STM32F37X_USART2</instanceIds>
        <instanceIds>STM32F37X_USART3</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X USART</captions>
        <descriptions>STMicroelectronics STM32F37X Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32f4xx_usart.Plugin" name="per_stm32f4xx_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32f4xx_gpio.h">
        <hardwareIds>STM32F4XX_USART</hardwareIds>
        <instanceIds>STM32F4XX_USART1</instanceIds>
        <instanceIds>STM32F4XX_USART2</instanceIds>
        <instanceIds>STM32F4XX_USART3</instanceIds>
        <instanceIds>STM32F4XX_UART4</instanceIds>
        <instanceIds>STM32F4XX_UART5</instanceIds>
        <instanceIds>STM32F4XX_USART6</instanceIds>
        <instanceIds>STM32F4XX_UART7</instanceIds>
        <instanceIds>STM32F4XX_UART8</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX USART</captions>
        <descriptions>STMicroelectronics STM32F4XX Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usart/" relativeFileURI="ini/per_stm32l1xx_usart.Plugin" name="per_stm32l1xx_usart" implements="per_stm32_usart" userTypeHeaderFile="stm32l1xx_gpio.h">
        <hardwareIds>STM32L1XX_USART</hardwareIds>
        <instanceIds>STM32L1XX_USART1</instanceIds>
        <instanceIds>STM32L1XX_USART2</instanceIds>
        <instanceIds>STM32L1XX_USART3</instanceIds>
        <instanceIds>STM32L1XX_USART4</instanceIds>
        <instanceIds>STM32L1XX_USART5</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX USART</captions>
        <descriptions>STMicroelectronics STM32L1XX Universal Synchronous/Asynchronous Receiver/Transmitter</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32f0xx_usb.Plugin" name="per_stm32f0xx_usb" implements="per_stm32_usb">
        <hardwareIds>STM32F0XX_USB</hardwareIds>
        <instanceIds>STM32F0XX_USB_DEV_FS</instanceIds>
        <instanceIds>STM32F0XX_USB_DEV_FS_SRAM</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F0XX USB Device</captions>
        <descriptions>STMicroelectronics STM32F0XX USB Device</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F04." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F07." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32f10x_usb.Plugin" name="per_stm32f10x_usb" implements="per_stm32_usb">
        <hardwareIds>STM32F10X_USB</hardwareIds>
        <instanceIds>STM32F10X_USB</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F10X USB</captions>
        <descriptions>STMicroelectronics STM32F10X USB Device</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F102." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F103." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32f30x_usb.Plugin" name="per_stm32f30x_usb" implements="per_stm32_usb">
        <hardwareIds>STM32F30X_USB</hardwareIds>
        <instanceIds>STM32F30X_USB</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F30X USB</captions>
        <descriptions>STMicroelectronics STM32 USB Device</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F30[23]."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32f37x_usb.Plugin" name="per_stm32f37x_usb" implements="per_stm32_usb">
        <hardwareIds>STM32F37X_USB</hardwareIds>
        <instanceIds>STM32F37X_USB</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F37X USB</captions>
        <descriptions>STMicroelectronics STM32 USB Device</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb/" relativeFileURI="ini/per_stm32l1xx_usb.Plugin" name="per_stm32l1xx_usb" implements="per_stm32_usb">
        <hardwareIds>STM32L1XX_USB</hardwareIds>
        <instanceIds>STM32L1XX_USB_DEV_FS</instanceIds>
        <instanceIds>STM32L1XX_USB_DEV_FS_SRAM</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32L1XX USB</captions>
        <descriptions>STMicroelectronics STM32 USB Device</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb_otg/" relativeFileURI="ini/per_stm32f10x_usb_otg.Plugin" name="per_stm32f10x_usb_otg_fs" implements="per_stm32_usb_otg">
        <hardwareIds>STM32F10X_USB_OTG</hardwareIds>
        <instanceIds>STM32F10X_USB_OTG_FS</instanceIds>
        <pluginRequirements interface="stm32_pinmapper"/>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X USB OTG</captions>
        <descriptions>STMicroelectronics STM32F10X peripheral library access for using FS Universal Serial BUS On-The-GO</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F105." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F107." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb_otg/" relativeFileURI="ini/per_stm32f2xx_usb_otg.Plugin" name="per_stm32f2xx_usb_otg" implements="per_stm32_usb_otg">
        <hardwareIds>STM32F2XX_USB_OTG</hardwareIds>
        <instanceIds>STM32F2XX_USB_OTG_HS</instanceIds>
        <instanceIds>STM32F2XX_USB_OTG_FS</instanceIds>
        <pluginRequirements interface="stm32_pinmapper"/>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX USB OTG</captions>
        <descriptions>STMicroelectronics STM32F2XX peripheral library access for using FS Universal Serial BUS On-The-GO</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/usb_otg/" relativeFileURI="ini/per_stm32f4xx_usb_otg.Plugin" name="per_stm32f4xx_usb_otg" implements="per_stm32_usb_otg">
        <hardwareIds>STM32F4XX_USB_OTG</hardwareIds>
        <instanceIds>STM32F4XX_USB_OTG_HS</instanceIds>
        <instanceIds>STM32F4XX_USB_OTG_FS</instanceIds>
        <pluginRequirements interface="stm32_pinmapper"/>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX USB OTG</captions>
        <descriptions>STMicroelectronics STM32F4XX peripheral library access for using FS Universal Serial BUS On-The-GO</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f0xx_wwdg.Plugin" name="per_stm32f0xx_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F0XX_WWDG</hardwareIds>
        <instanceIds>STM32F0XX_WWDG</instanceIds>
        <pluginRequirements interface="stm32f0xx_lib"/>
        <captions>STM32F0XX WWDG</captions>
        <descriptions>STMicroelectronics STM32F0XX Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f10x_wwdg.Plugin" name="per_stm32f10x_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F10X_WWDG</hardwareIds>
        <instanceIds>STM32F10X_WWDG</instanceIds>
        <pluginRequirements interface="stm32f10x_lib"/>
        <captions>STM32F10X WWDG</captions>
        <descriptions>STMicroelectronics STM32F10X Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f2xx_wwdg.Plugin" name="per_stm32f2xx_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F2XX_WWDG</hardwareIds>
        <instanceIds>STM32F2XX_WWDG</instanceIds>
        <pluginRequirements interface="stm32f2xx_lib"/>
        <captions>STM32F2XX WWDG</captions>
        <descriptions>STMicroelectronics STM32F2XX Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f30x_wwdg.Plugin" name="per_stm32f30x_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F30X_WWDG</hardwareIds>
        <instanceIds>STM32F30X_WWDG</instanceIds>
        <pluginRequirements interface="stm32f30x_lib"/>
        <captions>STM32F30X WWDG</captions>
        <descriptions>STMicroelectronics STM32F30X Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f37x_wwdg.Plugin" name="per_stm32f37x_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F37X_WWDG</hardwareIds>
        <instanceIds>STM32F37X_WWDG</instanceIds>
        <pluginRequirements interface="stm32f37x_lib"/>
        <captions>STM32F37X WWDG</captions>
        <descriptions>STMicroelectronics STM32F37X Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32f4xx_wwdg.Plugin" name="per_stm32f4xx_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32F4XX_WWDG</hardwareIds>
        <instanceIds>STM32F4XX_WWDG</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <captions>STM32F4XX WWDG</captions>
        <descriptions>STMicroelectronics STM32F4XX Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/wwdg/" relativeFileURI="ini/per_stm32l1xx_wwdg.Plugin" name="per_stm32l1xx_wwdg" implements="per_stm32_wwdg">
        <hardwareIds>STM32L1XX_WWDG</hardwareIds>
        <instanceIds>STM32L1XX_WWDG</instanceIds>
        <pluginRequirements interface="stm32l1xx_lib"/>
        <captions>STM32L1XX WWDG</captions>
        <descriptions>STMicroelectronics STM32L1XX Window Watchdog</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f0xx_device/" relativeFileURI="ini/stm32f0xx_device_generic.Plugin" name="stm32f0xx_device_generic" implements="stm32f0xx_device" generateData="false">
        <captions>STM32F0XX Configuration</captions>
        <descriptions>configuration for STM32F0XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f10x_device/" relativeFileURI="ini/stm32f10x_device_generic.Plugin" name="stm32f10x_device_generic" implements="stm32f10x_device" generateData="false">
        <captions>STM32F10X Configuration</captions>
        <descriptions>configuration for STM32F10X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F10."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f2xx_device/" relativeFileURI="ini/stm32f2xx_device_generic.Plugin" name="stm32f2xx_device_generic" implements="stm32f2xx_device" generateData="false">
        <captions>STM32F2XX Configuration</captions>
        <descriptions>configuration for STM32F2xX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f30x_device/" relativeFileURI="ini/stm32f30x_device_generic.Plugin" name="stm32f30x_device_generic" implements="stm32f30x_device" generateData="false">
        <captions>STM32F30X Configuration</captions>
        <descriptions>configuration for STM32F30X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[01]." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3[1259]8." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F334." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f37x_device/" relativeFileURI="ini/stm32f37x_device_generic.Plugin" name="stm32f37x_device_generic" implements="stm32f37x_device" generateData="false">
        <captions>STM32F37X Configuration</captions>
        <descriptions>configuration for STM32F37X devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F37." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F38." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32f4xx_device/" relativeFileURI="ini/stm32f4xx_device_generic.Plugin" name="stm32f4xx_device_generic" implements="stm32f4xx_device" generateData="false">
        <captions>STM32F4XX Configuration</captions>
        <descriptions>configuration for STM32F4XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/stm32l1xx_device/" relativeFileURI="ini/stm32l1xx_device_generic.Plugin" name="stm32l1xx_device_generic" implements="stm32l1xx_device" generateData="false">
        <captions>STM32L1XX Configuration</captions>
        <descriptions>configuration for STM32L1XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/util/" relativeFileURI="ini/stm32_util.Plugin" name="stm32_util" implements="stm32_util">
        <sourceFiles>$(SWP_RELPATH)\src\stm32_util.c</sourceFiles>
        <descriptions>Internal plugin for use by stm32 drivers</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F0." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F1." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F2." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F3." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32L1." orCondition="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f0xx_adc.Plugin" name="st_stm32f0xx_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f0xx_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_adc.c</sourceFiles>
        <captions>STM32F0XX ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f10x_adc.Plugin" name="st_stm32f10x_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f10x_adc.h</generateIncludes>
        <generateIncludes>stm32f10x_rcc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_adc.c</sourceFiles>
        <captions>STM32F10X ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f2xx_adc.Plugin" name="st_stm32f2xx_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f2xx_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_adc.c</sourceFiles>
        <captions>STM32F2XX ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f30x_adc.Plugin" name="st_stm32f30x_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f30x_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_adc.c</sourceFiles>
        <captions>STM32F30X ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f37x_adc.Plugin" name="st_stm32f37x_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f37x_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_adc.c</sourceFiles>
        <captions>STM32F37X ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32f4xx_adc.Plugin" name="st_stm32f4xx_adc" implements="st_stm32_adc">
        <generateIncludes>stm32f4xx_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_adc.c</sourceFiles>
        <captions>STM32F4XX ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/adc/" relativeFileURI="ini/st_stm32l1xx_adc.Plugin" name="st_stm32l1xx_adc" implements="st_stm32_adc">
        <generateIncludes>stm32l1xx_adc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_adc.c</sourceFiles>
        <captions>STM32L1XX ADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using A/D converters on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_adc.bmp</bitmaps>
        <largeBitmaps>st_stm32_adc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_adc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/aes/" relativeFileURI="ini/st_stm32l1xx_aes.Plugin" name="st_stm32l1xx_aes" implements="st_stm32_aes">
        <generateIncludes>stm32l1xx_aes.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_aes.c</sourceFiles>
        <captions>STM32L1XX AES Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Advanced Encryption Standard hardware accelerator on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_aes.bmp</bitmaps>
        <largeBitmaps>st_stm32_aes_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_aes" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_aes"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/bkp/" relativeFileURI="ini/st_stm32f10x_bkp.Plugin" name="st_stm32f10x_bkp" implements="st_stm32_bkp">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_bkp.c</sourceFiles>
        <captions>STM32F10X BKP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Backup Registers on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_bkp.bmp</bitmaps>
        <largeBitmaps>st_stm32_bkp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_bkp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_bkp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f0xx_can.Plugin" name="st_stm32f0xx_can" implements="st_stm32_can">
        <generateIncludes>stm32f0xx_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_can.c</sourceFiles>
        <captions>STM32F0XX CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f10x_can.Plugin" name="st_stm32f10x_can" implements="st_stm32_can">
        <generateIncludes>stm32f10x_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_can.c</sourceFiles>
        <captions>STM32F10X CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f2xx_can.Plugin" name="st_stm32f2xx_can" implements="st_stm32_can">
        <generateIncludes>stm32f2xx_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_can.c</sourceFiles>
        <captions>STM32F2XX CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f30x_can.Plugin" name="st_stm32f30x_can" implements="st_stm32_can">
        <generateIncludes>stm32f30x_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_can.c</sourceFiles>
        <captions>STM32F30X CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f37x_can.Plugin" name="st_stm32f37x_can" implements="st_stm32_can">
        <generateIncludes>stm32f37x_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_can.c</sourceFiles>
        <captions>STM32F37X CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/can/" relativeFileURI="ini/st_stm32f4xx_can.Plugin" name="st_stm32f4xx_can" implements="st_stm32_can">
        <generateIncludes>stm32f4xx_can.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_can.c</sourceFiles>
        <captions>STM32F4XX CAN Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Controller Area Networks on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_can.bmp</bitmaps>
        <largeBitmaps>st_stm32_can_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_can" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_can"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/cec/" relativeFileURI="ini/st_stm32f0xx_cec.Plugin" name="st_stm32f0xx_cec" implements="st_stm32_cec">
        <generateIncludes>stm32f0xx_cec.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_cec.c</sourceFiles>
        <captions>STM32F0XX HDMI-CEC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Consumer Electronics Control STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_cec.bmp</bitmaps>
        <largeBitmaps>st_stm32_cec_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_cec" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_cec"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/cec/" relativeFileURI="ini/st_stm32f10x_cec.Plugin" name="st_stm32f10x_cec" implements="st_stm32_cec">
        <generateIncludes>stm32f10x_cec.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_cec.c</sourceFiles>
        <captions>STM32F10X HDMI-CEC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Consumer Electronics Control on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_cec.bmp</bitmaps>
        <largeBitmaps>st_stm32_cec_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_cec" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_cec"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/cec/" relativeFileURI="ini/st_stm32f37x_cec.Plugin" name="st_stm32f37x_cec" implements="st_stm32_cec">
        <generateIncludes>stm32f37x_cec.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_cec.c</sourceFiles>
        <captions>STM32F37X HDMI-CEC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Consumer Electronics Control STM32F37X devices</descriptions>
        <bitmaps>st_stm32_cec.bmp</bitmaps>
        <largeBitmaps>st_stm32_cec_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_cec" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_cec"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/comp/" relativeFileURI="ini/st_stm32f0xx_comp.Plugin" name="st_stm32f0xx_comp" implements="st_stm32_comp">
        <generateIncludes>stm32f0xx_comp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_comp.c</sourceFiles>
        <captions>STM32F0XX COMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Advanced Encryption Standard hardware accelerator on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_comp.bmp</bitmaps>
        <largeBitmaps>st_stm32_comp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_comp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_comp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/comp/" relativeFileURI="ini/st_stm32f30x_comp.Plugin" name="st_stm32f30x_comp" implements="st_stm32_comp">
        <generateIncludes>stm32f30x_comp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_comp.c</sourceFiles>
        <captions>STM32F30X COMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Advanced Encryption Standard hardware accelerator on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_comp.bmp</bitmaps>
        <largeBitmaps>st_stm32_comp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_comp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_comp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/comp/" relativeFileURI="ini/st_stm32f37x_comp.Plugin" name="st_stm32f37x_comp" implements="st_stm32_comp">
        <generateIncludes>stm32f37x_comp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_comp.c</sourceFiles>
        <captions>STM32F37X COMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Advanced Encryption Standard hardware accelerator on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_comp.bmp</bitmaps>
        <largeBitmaps>st_stm32_comp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_comp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_comp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/comp/" relativeFileURI="ini/st_stm32l1xx_comp.Plugin" name="st_stm32l1xx_comp" implements="st_stm32_comp">
        <generateIncludes>stm32l1xx_comp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_comp.c</sourceFiles>
        <captions>STM32L1XX COMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Advanced Encryption Standard hardware accelerator on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_comp.bmp</bitmaps>
        <largeBitmaps>st_stm32_comp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_comp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_comp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f0xx_crc.Plugin" name="st_stm32f0xx_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_crc.c</sourceFiles>
        <captions>STM32F0XX CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f10x_crc.Plugin" name="st_stm32f10x_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_crc.c</sourceFiles>
        <captions>STM32F10X CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f2xx_crc.Plugin" name="st_stm32f2xx_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_crc.c</sourceFiles>
        <captions>STM32F2XX CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f30x_crc.Plugin" name="st_stm32f30x_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_crc.c</sourceFiles>
        <captions>STM32F30X CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f37x_crc.Plugin" name="st_stm32f37x_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_crc.c</sourceFiles>
        <captions>STM32F37X CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32f4xx_crc.Plugin" name="st_stm32f4xx_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f4xx_crc.c</sourceFiles>
        <captions>STM32F4XX CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/crc/" relativeFileURI="ini/st_stm32l1xx_crc.Plugin" name="st_stm32l1xx_crc" implements="st_stm32_crc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_crc.c</sourceFiles>
        <captions>STM32L1XX CRC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cyclic Redundancy Check on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_crc.bmp</bitmaps>
        <largeBitmaps>st_stm32_crc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_crc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_crc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/cryp/" relativeFileURI="ini/st_stm32f2xx_cryp.Plugin" name="st_stm32f2xx_cryp" implements="st_stm32_cryp">
        <generateIncludes>stm32f2xx_cryp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_cryp.c</sourceFiles>
        <captions>STM32F2XX CRYP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cryptographic Processor on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_cryp.bmp</bitmaps>
        <largeBitmaps>st_stm32_cryp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_cryp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_cryp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/cryp/" relativeFileURI="ini/st_stm32f4xx_cryp.Plugin" name="st_stm32f4xx_cryp" implements="st_stm32_cryp">
        <generateIncludes>stm32f4xx_cryp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_cryp.c</sourceFiles>
        <captions>STM32F4XX CRYP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Cryptographic Processor on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_cryp.bmp</bitmaps>
        <largeBitmaps>st_stm32_cryp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_cryp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_cryp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f0xx_dac.Plugin" name="st_stm32f0xx_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f0xx_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_dac.c</sourceFiles>
        <captions>STM32F0XX DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f10x_dac.Plugin" name="st_stm32f10x_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f10x_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_dac.c</sourceFiles>
        <captions>STM32F10X DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f2xx_dac.Plugin" name="st_stm32f2xx_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f2xx_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dac.c</sourceFiles>
        <captions>STM32F2XX DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f30x_dac.Plugin" name="st_stm32f30x_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f30x_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_dac.c</sourceFiles>
        <captions>STM32F30X DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f37x_dac.Plugin" name="st_stm32f37x_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f37x_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_dac.c</sourceFiles>
        <captions>STM32F37X DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32f4xx_dac.Plugin" name="st_stm32f4xx_dac" implements="st_stm32_dac">
        <generateIncludes>stm32f4xx_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dac.c</sourceFiles>
        <captions>STM32F4XX DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_dac" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dac/" relativeFileURI="ini/st_stm32l1xx_dac.Plugin" name="st_stm32l1xx_dac" implements="st_stm32_dac">
        <generateIncludes>stm32l1xx_dac.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_dac.c</sourceFiles>
        <captions>STM32L1XX DAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Digital to Analog Converters on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_dac.bmp</bitmaps>
        <largeBitmaps>st_stm32_dac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_dac" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dbgmcu/" relativeFileURI="ini/st_stm32_dbgmcu.Plugin" name="st_stm32_dbgmcu" implements="st_stm32_dbgmcu">
        <captions>STM32 DBGMCU Library Wrapper</captions>
        <descriptions>ST Library wrapper for Debug MCU support on STM32 devices</descriptions>
        <bitmaps>st_stm32_dbgmcu.bmp</bitmaps>
        <largeBitmaps>st_stm32_dbgmcu_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dbgmcu"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dcmi/" relativeFileURI="ini/st_stm32f2xx_dcmi.Plugin" name="st_stm32f2xx_dcmi" implements="st_stm32_dcmi">
        <generateIncludes>stm32f2xx_dcmi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dcmi.c</sourceFiles>
        <captions>STM32F2XX DCMI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Digital Camera Interface on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_dcmi.bmp</bitmaps>
        <largeBitmaps>st_stm32_dcmi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_dcmi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dcmi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dcmi/" relativeFileURI="ini/st_stm32f4xx_dcmi.Plugin" name="st_stm32f4xx_dcmi" implements="st_stm32_dcmi">
        <generateIncludes>stm32f4xx_dcmi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dcmi.c</sourceFiles>
        <captions>STM32F4XX DCMI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Digital Camera Interface on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_dcmi.bmp</bitmaps>
        <largeBitmaps>st_stm32_dcmi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_dcmi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dcmi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f0xx_dma.Plugin" name="st_stm32f0xx_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f0xx_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_dma.c</sourceFiles>
        <captions>STM32F0XX DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f10x_dma.Plugin" name="st_stm32f10x_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f10x_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_l1xx_dma.c</sourceFiles>
        <captions>STM32F10X DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Acces on STM32F10X devicess</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f2xx_dma.Plugin" name="st_stm32f2xx_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f2xx_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dma.c</sourceFiles>
        <captions>STM32F2XX DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f30x_dma.Plugin" name="st_stm32f30x_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f30x_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_dma.c</sourceFiles>
        <captions>STM32F30X DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f37x_dma.Plugin" name="st_stm32f37x_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f37x_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_dma.c</sourceFiles>
        <captions>STM32F37X DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32f4xx_dma.Plugin" name="st_stm32f4xx_dma" implements="st_stm32_dma">
        <generateIncludes>stm32f4xx_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_dma.c</sourceFiles>
        <captions>STM32F4XX DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma/" relativeFileURI="ini/st_stm32l1xx_dma.Plugin" name="st_stm32l1xx_dma" implements="st_stm32_dma">
        <generateIncludes>stm32l1xx_dma.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_l1xx_dma.c</sourceFiles>
        <captions>STM32L1XX DMA Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_dma.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_dma" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/dma2d/" relativeFileURI="ini/st_stm32f4xx_dma2d.Plugin" name="st_stm32f4xx_dma2d" implements="st_stm32_dma2d">
        <generateIncludes>stm32f4xx_dma2d.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f4xx_dma2d.c</sourceFiles>
        <captions>STM32F4XX DMA2D Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Direct Memory Access on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_dma2d.bmp</bitmaps>
        <largeBitmaps>st_stm32_dma2d_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_dma2d" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_dma2d"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/ethmac/" relativeFileURI="ini/st_stm32f10x_ethmac.Plugin" name="st_stm32f10x_ethmac" implements="st_stm32_ethmac">
        <generateIncludes>stm32_eth.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_ethmac.c</sourceFiles>
        <captions>STM32F10X EMAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Ethernet MAC peripheral on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_ethmac.bmp</bitmaps>
        <largeBitmaps>st_stm32_ethmac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_ethmac" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_ethmac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/ethmac/" relativeFileURI="ini/st_stm32f2xx_ethmac.Plugin" name="st_stm32f2xx_ethmac" implements="st_stm32_ethmac">
        <generateIncludes>stm32f2x7_eth.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_ethmac.c</sourceFiles>
        <captions>STM32F2XX EMAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Ethernet MAC peripheral on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_ethmac.bmp</bitmaps>
        <largeBitmaps>st_stm32_ethmac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_ethmac" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_ethmac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/ethmac/" relativeFileURI="ini/st_stm32f4xx_ethmac.Plugin" name="st_stm32f4xx_ethmac" implements="st_stm32_ethmac">
        <generateIncludes>stm32f4x7_eth.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_ethmac.c</sourceFiles>
        <captions>STM32F4XX EMAC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Ethernet MAC peripheral on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_ethmac.bmp</bitmaps>
        <largeBitmaps>st_stm32_ethmac_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_ethmac" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_ethmac"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f0xx_exti.Plugin" name="st_stm32f0xx_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f0xx_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_exti.c</sourceFiles>
        <captions>STM32F0XX EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f10x_exti.Plugin" name="st_stm32f10x_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f10x_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_exti.c</sourceFiles>
        <captions>STM32F10X EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f2xx_exti.Plugin" name="st_stm32f2xx_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f2xx_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_exti.c</sourceFiles>
        <captions>STM32F2XX EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f30x_exti.Plugin" name="st_stm32f30x_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f30x_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_exti.c</sourceFiles>
        <captions>STM32F30X EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f37x_exti.Plugin" name="st_stm32f37x_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f37x_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_exti.c</sourceFiles>
        <captions>STM32F37X EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32f4xx_exti.Plugin" name="st_stm32f4xx_exti" implements="st_stm32_exti">
        <generateIncludes>stm32f4xx_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_exti.c</sourceFiles>
        <captions>STM32F4XX EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_exti" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/exti/" relativeFileURI="ini/st_stm32l1xx_exti.Plugin" name="st_stm32l1xx_exti" implements="st_stm32_exti">
        <generateIncludes>stm32l1xx_exti.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_exti.c</sourceFiles>
        <captions>STM32L1XX EXTI Library Wrapper</captions>
        <descriptions>ST Library wrapper for EXTI controller on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_exti.bmp</bitmaps>
        <largeBitmaps>st_stm32_exti_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_exti" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_exti"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/flash/" relativeFileURI="ini/st_stm32_flash.Plugin" name="st_stm32_flash" implements="st_stm32_flash">
        <captions>STM32 FLASH Library Wrapper</captions>
        <descriptions>ST Library wrapper for using STM32 Flash support</descriptions>
        <bitmaps>st_stm32_flash.bmp</bitmaps>
        <largeBitmaps>st_stm32_flash_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_flash"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/fmc/" relativeFileURI="ini/st_stm32_fmc.Plugin" name="st_stm32_fmc" implements="st_stm32_fmc">
        <captions>STM32 FMC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Flexible Memory Controller on STM32 devices</descriptions>
        <bitmaps>st_stm32_fmc.bmp</bitmaps>
        <largeBitmaps>st_stm32_fmc_large.bmp</largeBitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_fmc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/fsmc/" relativeFileURI="ini/st_stm32_fsmc.Plugin" name="st_stm32_fsmc" implements="st_stm32_fsmc">
        <captions>STM32 FSMC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Flexible Static Memory Controller on STM32 devices</descriptions>
        <bitmaps>st_stm32_fsmc.bmp</bitmaps>
        <largeBitmaps>st_stm32_fsmc_large.bmp</largeBitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_fsmc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f0xx_gpio.Plugin" name="st_stm32f0xx_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_gpio.c</sourceFiles>
        <captions>STM32F0XX GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F0XX device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f10x_gpio.Plugin" name="st_stm32f10x_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_gpio.c</sourceFiles>
        <captions>STM32F10X GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F10X device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f2xx_gpio.Plugin" name="st_stm32f2xx_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_gpio.c</sourceFiles>
        <captions>STM32F2XX GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F2XX device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f30x_gpio.Plugin" name="st_stm32f30x_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_gpio.c</sourceFiles>
        <captions>STM32F30X GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F30X device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f37x_gpio.Plugin" name="st_stm32f37x_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_gpio.c</sourceFiles>
        <captions>STM32F37X GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32f4xx_gpio.Plugin" name="st_stm32f4xx_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_gpio.c</sourceFiles>
        <captions>STM32F4XX GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32F4XX device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/gpio/" relativeFileURI="ini/st_stm32l1xx_gpio.Plugin" name="st_stm32l1xx_gpio" implements="st_stm32_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_gpio.c</sourceFiles>
        <captions>STM32L1XX GPIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using General Purpose I/O on STM32L1XX device</descriptions>
        <bitmaps>st_stm32_gpio.bmp</bitmaps>
        <largeBitmaps>st_stm32_gpio_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_gpio" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/hash/" relativeFileURI="ini/st_stm32f2xx_hash.Plugin" name="st_stm32f2xx_hash" implements="st_stm32_hash">
        <generateIncludes>stm32f2xx_hash.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_hash.c</sourceFiles>
        <captions>STM32F2XX HASH Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Hash Processor on STM32F2XX device</descriptions>
        <bitmaps>st_stm32_hash.bmp</bitmaps>
        <largeBitmaps>st_stm32_hash_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_hash" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_hash"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/hash/" relativeFileURI="ini/st_stm32f4xx_hash.Plugin" name="st_stm32f4xx_hash" implements="st_stm32_hash">
        <generateIncludes>stm32f4xx_hash.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_hash.c</sourceFiles>
        <captions>STM32F4XX HASH Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Hash Processor on STM32F4XX device</descriptions>
        <bitmaps>st_stm32_hash.bmp</bitmaps>
        <largeBitmaps>st_stm32_hash_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_hash" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_hash"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f0xx_i2c.Plugin" name="st_stm32f0xx_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f0xx_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_i2c.c</sourceFiles>
        <captions>STM32F0XX I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f10x_i2c.Plugin" name="st_stm32f10x_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f10x_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_i2c.c</sourceFiles>
        <captions>STM32F10X I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f2xx_i2c.Plugin" name="st_stm32f2xx_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f2xx_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_i2c.c</sourceFiles>
        <captions>STM32F2XX I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f30x_i2c.Plugin" name="st_stm32f30x_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f30x_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_i2c.c</sourceFiles>
        <captions>STM32F30X I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f37x_i2c.Plugin" name="st_stm32f37x_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f37x_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_i2c.c</sourceFiles>
        <captions>STM32F37X I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32f4xx_i2c.Plugin" name="st_stm32f4xx_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32f4xx_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_i2c.c</sourceFiles>
        <captions>STM32F4XX I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/i2c/" relativeFileURI="ini/st_stm32l1xx_i2c.Plugin" name="st_stm32l1xx_i2c" implements="st_stm32_i2c">
        <generateIncludes>stm32l1xx_i2c.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_i2c.c</sourceFiles>
        <captions>STM32L1XX I2C Library Wrapper</captions>
        <descriptions>ST Library wrapper for using I2C on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_i2c.bmp</bitmaps>
        <largeBitmaps>st_stm32_i2c_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_i2c" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/iwdg/" relativeFileURI="ini/st_stm32_iwdg.Plugin" name="st_stm32_iwdg" implements="st_stm32_iwdg">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_iwdg.c</sourceFiles>
        <captions>STM32 IWDG Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Independant Watchdog</descriptions>
        <bitmaps>st_stm32_iwdg.bmp</bitmaps>
        <largeBitmaps>st_stm32_iwdg_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_iwdg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/lcd/" relativeFileURI="ini/st_stm32l1xx_lcd.Plugin" name="st_stm32l1xx_lcd" implements="st_stm32_lcd">
        <generateIncludes>stm32l1xx_lcd.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_lcd.c</sourceFiles>
        <captions>STM32L1XX LCD Library Wrapper</captions>
        <descriptions>ST Library wrapper for using LCD on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_lcd.bmp</bitmaps>
        <largeBitmaps>st_stm32_lcd_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_lcd" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_lcd"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/ltdc/" relativeFileURI="ini/st_stm32f4xx_ltdc.Plugin" name="st_stm32f4xx_ltdc" implements="st_stm32_ltdc">
        <generateIncludes>stm32f4xx_ltdc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f4xx_ltdc.c</sourceFiles>
        <captions>STM32F4XX LCD Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the LTCD on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_ltdc.bmp</bitmaps>
        <largeBitmaps>st_stm32_ltdc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_ltdc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_ltdc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/opamp/" relativeFileURI="ini/st_stm32f30x_opamp.Plugin" name="st_stm32f30x_opamp" implements="st_stm32_opamp">
        <generateIncludes>stm32f30x_opamp.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_opamp.c</sourceFiles>
        <captions>STM32F30X OPAMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Operational Amplifiers on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_opamp.bmp</bitmaps>
        <largeBitmaps>st_stm32_opamp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_opamp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_opamp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/opamp/" relativeFileURI="ini/st_stm32l1xx_opamp.Plugin" name="st_stm32l1xx_opamp" implements="st_stm32_opamp">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_opamp.c</sourceFiles>
        <captions>STM32L1XX OPAMP Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Operational Amplifiers on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_opamp.bmp</bitmaps>
        <largeBitmaps>st_stm32_opamp_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_opamp" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_opamp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/pwr/" relativeFileURI="ini/st_stm32_pwr.Plugin" name="st_stm32_pwr" implements="st_stm32_pwr">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_pwr.c</sourceFiles>
        <captions>STM32 PWR Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Power Control</descriptions>
        <bitmaps>st_stm32_pwr.bmp</bitmaps>
        <largeBitmaps>st_stm32_pwr_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_pwr"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rcc/" relativeFileURI="ini/st_stm32_rcc.Plugin" name="st_stm32_rcc" implements="st_stm32_rcc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_rcc.c</sourceFiles>
        <captions>STM32 RCC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Reset and Clock Control</descriptions>
        <bitmaps>st_stm32_rcc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rcc_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rcc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rng/" relativeFileURI="ini/st_stm32_rng.Plugin" name="st_stm32_rng" implements="st_stm32_rng">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_rng.c</sourceFiles>
        <captions>STM32 RNG Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Random Number Generator</descriptions>
        <bitmaps>st_stm32_rng.bmp</bitmaps>
        <largeBitmaps>st_stm32_rng_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rng"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f0xx_rtc.Plugin" name="st_stm32f0xx_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32f0xx_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_rtc.c</sourceFiles>
        <captions>STM32F0XX RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F0XX device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f10x_rtc.Plugin" name="st_stm32f10x_rtc" implements="st_stm32_rtc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_rtc.c</sourceFiles>
        <captions>STM32F10X RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F10X device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f2xx_rtc.Plugin" name="st_stm32f2xx_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32f2xx_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_rtc.c</sourceFiles>
        <captions>STM32F2XX RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F2XX device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f30x_rtc.Plugin" name="st_stm32f30x_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32f30x_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_rtc.c</sourceFiles>
        <captions>STM32F30X RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F30X device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f37x_rtc.Plugin" name="st_stm32f37x_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32f37x_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_rtc.c</sourceFiles>
        <captions>STM32F37X RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F37X device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32f4xx_rtc.Plugin" name="st_stm32f4xx_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32f4xx_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f4xx_rtc.c</sourceFiles>
        <captions>STM32F4XX RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32F4XX device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/rtc/" relativeFileURI="ini/st_stm32l1xx_rtc.Plugin" name="st_stm32l1xx_rtc" implements="st_stm32_rtc">
        <generateIncludes>stm32l1xx_rtc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_rtc.c</sourceFiles>
        <captions>STM32L1XX RTC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Real Time Clock on STM32L1XX device</descriptions>
        <bitmaps>st_stm32_rtc.bmp</bitmaps>
        <largeBitmaps>st_stm32_rtc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_rtc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_rtc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sai/" relativeFileURI="ini/st_stm32f4xx_sai.Plugin" name="st_stm32f4xx_sai" implements="st_stm32_sai">
        <generateIncludes>stm32f4xx_sai.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f4xx_sai.c</sourceFiles>
        <captions>STM32F4XX SAI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SAI on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_sai.bmp</bitmaps>
        <largeBitmaps>st_stm32_sai_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_sai" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_sai"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sdadc/" relativeFileURI="ini/st_stm32f37x_sdadc.Plugin" name="st_stm32f37x_sdadc" implements="st_stm32_sdadc">
        <generateIncludes>stm32f37x_sdadc.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_sdadc.c</sourceFiles>
        <captions>STM32F37X SDADC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Sigma-delta A/D converters on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_sdadc.bmp</bitmaps>
        <largeBitmaps>st_stm32_sdadc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_sdadc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_sdadc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sdio/" relativeFileURI="ini/st_stm32f10x_sdio.Plugin" name="st_stm32f10x_sdio" implements="st_stm32_sdio">
        <generateIncludes>stm32f10x_sdio.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_sdio.c</sourceFiles>
        <captions>STM32F10X SDIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SDIO on STM32F10X devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_sdio" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_sdio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sdio/" relativeFileURI="ini/st_stm32f2xx_sdio.Plugin" name="st_stm32f2xx_sdio" implements="st_stm32_sdio">
        <generateIncludes>stm32f2xx_sdio.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_sdio.c</sourceFiles>
        <captions>STM32F2XX SDIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SDIO on STM32F2XX devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_sdio" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_sdio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sdio/" relativeFileURI="ini/st_stm32f4xx_sdio.Plugin" name="st_stm32f4xx_sdio" implements="st_stm32_sdio">
        <generateIncludes>stm32f4xx_sdio.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_sdio.c</sourceFiles>
        <captions>STM32F4XX SDIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SDIO on STM32F4XX devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_sdio" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_sdio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/sdio/" relativeFileURI="ini/st_stm32l1xx_sdio.Plugin" name="st_stm32l1xx_sdio" implements="st_stm32_sdio">
        <generateIncludes>stm32l1xx_sdio.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_sdio.c</sourceFiles>
        <captions>STM32L1XX SDIO Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SDIO on STM32L1XX devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_sdio" condition="EQ"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_sdio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f0xx_spi.Plugin" name="st_stm32f0xx_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f0xx_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_spi.c</sourceFiles>
        <captions>STM32F0XX SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f10x_spi.Plugin" name="st_stm32f10x_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f10x_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_spi.c</sourceFiles>
        <captions>STM32F10X SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f2xx_spi.Plugin" name="st_stm32f2xx_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f2xx_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_spi.c</sourceFiles>
        <captions>STM32F2XX SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f30x_spi.Plugin" name="st_stm32f30x_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f30x_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_spi.c</sourceFiles>
        <captions>STM32F30X SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f37x_spi.Plugin" name="st_stm32f37x_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f37x_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_spi.c</sourceFiles>
        <captions>STM32F37X SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32f4xx_spi.Plugin" name="st_stm32f4xx_spi" implements="st_stm32_spi">
        <generateIncludes>stm32f4xx_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_spi.c</sourceFiles>
        <captions>STM32F4XX SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/spi/" relativeFileURI="ini/st_stm32l1xx_spi.Plugin" name="st_stm32l1xx_spi" implements="st_stm32_spi">
        <generateIncludes>stm32l1xx_spi.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_spi.c</sourceFiles>
        <captions>STM32L1XX SPI Library Wrapper</captions>
        <descriptions>ST Library wrapper for using SPI on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_spi.bmp</bitmaps>
        <largeBitmaps>st_stm32_spi_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_spi" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/syscfg/" relativeFileURI="ini/st_stm32_syscfg.Plugin" name="st_stm32_syscfg" implements="st_stm32_syscfg">
        <captions>STM32 SYSCFG Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the System Configuration Controller</descriptions>
        <bitmaps>st_stm32_syscfg.bmp</bitmaps>
        <largeBitmaps>st_stm32_syscfg_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_syscfg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f0xx_tim.Plugin" name="st_stm32f0xx_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f0xx_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_tim.c</sourceFiles>
        <captions>STM32F0XX TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f10x_tim.Plugin" name="st_stm32f10x_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f10x_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_tim.c</sourceFiles>
        <captions>STM32F10X TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f2xx_tim.Plugin" name="st_stm32f2xx_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f2xx_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_tim.c</sourceFiles>
        <captions>STM32F2XX TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f30x_tim.Plugin" name="st_stm32f30x_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f30x_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_tim.c</sourceFiles>
        <captions>STM32F30X TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f37x_tim.Plugin" name="st_stm32f37x_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f37x_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_tim.c</sourceFiles>
        <captions>STM32F37X TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32f4xx_tim.Plugin" name="st_stm32f4xx_tim" implements="st_stm32_tim">
        <generateIncludes>stm32f4xx_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_tim.c</sourceFiles>
        <captions>STM32F4XX TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tim/" relativeFileURI="ini/st_stm32l1xx_tim.Plugin" name="st_stm32l1xx_tim" implements="st_stm32_tim">
        <generateIncludes>stm32l1xx_tim.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_tim.c</sourceFiles>
        <captions>STM32L1XX TIM Library Wrapper</captions>
        <descriptions>ST Library wrapper for using Timers on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_tim.bmp</bitmaps>
        <largeBitmaps>st_stm32_tim_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_tim" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tim"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tsc/" relativeFileURI="ini/st_stm32f0xx_tsc.Plugin" name="st_stm32f0xx_tsc" implements="st_stm32_tsc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_tsc.c</sourceFiles>
        <captions>STM32F0XX TSC Library Wrapper</captions>
        <descriptions>ST Library wrapper for tousch sensing controller on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_tsc.bmp</bitmaps>
        <largeBitmaps>st_stm32_tsc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_tsc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tsc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tsc/" relativeFileURI="ini/st_stm32f30x_tsc.Plugin" name="st_stm32f30x_tsc" implements="st_stm32_tsc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f30x_tsc.c</sourceFiles>
        <captions>STM32F30X TSC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using touch sensing controller on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_tsc.bmp</bitmaps>
        <largeBitmaps>st_stm32_tsc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_tsc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tsc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/tsc/" relativeFileURI="ini/st_stm32f37x_tsc.Plugin" name="st_stm32f37x_tsc" implements="st_stm32_tsc">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f37x_tsc.c</sourceFiles>
        <captions>STM32F37X TSC Library Wrapper</captions>
        <descriptions>ST Library wrapper for using touch sensing controller on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_tsc.bmp</bitmaps>
        <largeBitmaps>st_stm32_tsc_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_tsc" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_tsc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f0xx_usart.Plugin" name="st_stm32f0xx_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f0xx_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f0xx_usart.c</sourceFiles>
        <captions>STM32F0XX USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F0XX devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f10x_usart.Plugin" name="st_stm32f10x_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f10x_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f10x_usart.c</sourceFiles>
        <captions>STM32F10X USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F10X devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f2xx_usart.Plugin" name="st_stm32f2xx_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f2xx_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_usart.c</sourceFiles>
        <captions>STM32F2XX USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F2XX devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f30x_usart.Plugin" name="st_stm32f30x_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f30x_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_usart.c</sourceFiles>
        <captions>STM32F30X USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F30X devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f37x_usart.Plugin" name="st_stm32f37x_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f37x_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f3xx_usart.c</sourceFiles>
        <captions>STM32F37X USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F37X devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32f4xx_usart.Plugin" name="st_stm32f4xx_usart" implements="st_stm32_usart">
        <generateIncludes>stm32f4xx_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32f2xx_f4xx_usart.c</sourceFiles>
        <captions>STM32F4XX USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32F4XX devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usart/" relativeFileURI="ini/st_stm32l1xx_usart.Plugin" name="st_stm32l1xx_usart" implements="st_stm32_usart">
        <generateIncludes>stm32l1xx_usart.h</generateIncludes>
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32l1xx_usart.c</sourceFiles>
        <captions>STM32L1XX USART Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USART on STM32L1XX devices</descriptions>
        <bitmaps>st_stm32_usart.bmp</bitmaps>
        <largeBitmaps>st_stm32_usart_large.bmp</largeBitmaps>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_usart" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usart"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usb/" relativeFileURI="ini/st_stm32_usb.Plugin" name="st_stm32_usb" implements="st_stm32_usb">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_usb.c</sourceFiles>
        <captions>STM32 USB Device Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USB Device on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_usb" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_usb" condition="EQ" orCondition="true"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_usb"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usb_otg/" relativeFileURI="ini/st_stm32_usb_otg_fs.Plugin" name="st_stm32_usb_otg_fs" implements="st_stm32_usb_otg">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_usb_otg_fs.c</sourceFiles>
        <globalCompileOptions>-DUSE_EMBEDDED_PHY</globalCompileOptions>
        <captions>STM32 USB OTG FS Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USB OTG FS on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_usb_otg_fs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usb_otg_fs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usb_otg_fs" condition="EQ" orCondition="true"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/usb_otg/" relativeFileURI="ini/st_stm32_usb_otg_hs.Plugin" name="st_stm32_usb_otg_hs" implements="st_stm32_usb_otg">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_usb_otg_hs.c</sourceFiles>
        <globalCompileOptions>-DUSE_ULPI_PHY</globalCompileOptions>
        <captions>STM32 USB OTG HS Library Wrapper</captions>
        <descriptions>ST Library wrapper for using USB OTG HS on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_usb_otg_hs" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_usb_otg_hs" condition="EQ" orCondition="true"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/vendor/wwdg/" relativeFileURI="ini/st_stm32_wwdg.Plugin" name="st_stm32_wwdg" implements="st_stm32_wwdg">
        <sourceFiles>$(SWP_RELPATH)\src\st_stm32_wwdg.c</sourceFiles>
        <captions>STM32 WWDG Library Wrapper</captions>
        <descriptions>ST Library wrapper for using the Window Watchdog on STM32 devices</descriptions>
        <bitmaps>st_stm32_wwdg.bmp</bitmaps>
        <largeBitmaps>st_stm32_wwdg_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="per_stm32_wwdg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/gpio/" relativeFileURI="ini/drv_stm32_gpio.Plugin" name="drv_stm32_gpio" implements="drv_gpio">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_gpio.c</sourceFiles>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <captions>STM32 GPIO Driver</captions>
        <descriptions>Device driver for GPIO pins on STM32 devices</descriptions>
        <available_Ifs kind="PLUGIN" name="per_stm32f10x_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f2xx_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32l1xx_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f4xx_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f30x_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f37x_gpio" condition="EQ" orCondition="true"/>
        <available_Ifs kind="PLUGIN" name="per_stm32f0xx_gpio" condition="EQ" orCondition="true"/>
        <applicationCodeSection openType="gpio_t *" openFunction="gpio_open"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_gpio"/>
          <instanceOptions name="initvalue" kind="UINT16" caption="Initial value" description="Initial value to be written on port" defaultValue="0x0000"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/i2cm/" relativeFileURI="ini/drv_stm32_i2cm.Plugin" name="drv_stm32_i2cm" implements="drv_i2cm">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2cm.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2cm_f10x.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2cm_f2xx_f4xx.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2cm_l1xx.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2cm_f0xx_f3xx.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f0_f3_i2cm.c</sourceFiles>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="timing"/>
        <captions>STM32 Master I2C Driver</captions>
        <descriptions>Device driver for I2C masters on STM32 devices</descriptions>
        <applicationCodeSection openType="i2cm_t *" openFunction="i2cm_open"/>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="per_stm32_i2c"/>
          <instanceOptions name="i2c_frequency" kind="UINT32" caption="SCL frequency" description="I2C clock frequency (in Hz)" defaultValue="100000"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/drivers/i2sm/" relativeFileURI="ini/drv_stm32_i2sm.Plugin" name="drv_stm32_i2sm" implements="drv_i2sm" userTypeHeaderFile="drv_stm32_i2sm_internal.h">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32_i2sm_common.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f10x_i2sm.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f2xx_i2sm.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f30x_i2sm.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\drv_stm32f37x_i2sm.c</sourceFiles>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <captions>STM32 Master I2S Driver</captions>
        <descriptions>Device driver for I2S master on STM32 devices</descriptions>
        <bitmaps>drv_i2s.bmp</bitmaps>
        <applicationCodeSection openType="i2sm_t *" openFunction="i2sm_open"/>
        <instanceSection>
          <instanceRequirements interface="per_stm32_i2s"/>
          <instanceOptions name="DMA_Priority" kind="ENUM" caption="DMA Priority" description="Specifies the software priority for the DMA Channel." defaultValue="Medium">
            <enumItems enum="Veryhigh" enumValue="DMA_Priority_VeryHigh" enumCaption="Very High"/>
            <enumItems enum="High" enumValue="DMA_Priority_High" enumCaption="High"/>
            <enumItems enum="Medium" enumValue="DMA_Priority_Medium" enumCaption="Medium"/>
            <enumItems enum="Low" enumValue="DMA_Priority_Low" enumCaption="Low"/>
          </instanceOptions>
          <instanceOptions name="I2S_Mode" kind="ENUM" caption="I2S mode" description="Specifies the I2S operating mode" defaultValue="Transmit" type="UINT16">
            <enumItems enum="Transmit" enumValue="I2S_Mode_MasterTx" enumDescription="Transmit in master mode, play audio"/>
            <enumItems enum="Receive" enumValue="I2S_Mode_MasterRx" enumDescription="Receive in master mode, record audio"/>
          </instanceOptions>
          <instanceOptions name="I2S_Standard" kind="ENUM" caption="I2S Standard" description="Specifies the standard used for the I2S communication" defaultValue="Philips" type="UINT16">
            <enumItems enum="Philips" enumValue="I2S_Standard_Phillips" enumCaption="Philips" enumDescription="Philips standard, WS is generated 1 SCK before first data bit"/>
            <enumItems enum="MSB" enumValue="I2S_Standard_MSB" enumCaption="MSB justified" enumDescription="Samples are left justified, WS is generated at the same time as the first data bit"/>
            <enumItems enum="LSB" enumValue="I2S_Standard_LSB" enumCaption="LSB justified" enumDescription="Samples are right justified, WS is generated at the same time as the first data bit"/>
            <enumItems enum="PCMshort" enumValue="I2S_Standard_PCMShort" enumCaption="PCM short" enumDescription="PCM standard short frame, channel information is embedded in data stream"/>
            <enumItems enum="PCMlong" enumValue="I2S_Standard_PCMLong" enumCaption="PCM long" enumDescription="PCM standard long frame, channel information is embedded in data stream"/>
          </instanceOptions>
          <instanceOptions name="I2S_DataFormat" kind="ENUM" caption="Data format" description="Specifies the data format for the I2S communication" defaultValue="16bit" type="UINT16">
            <enumItems enum="16bit" enumValue="I2S_DataFormat_16b" enumCaption="16 bit" enumDescription="16-bit data packed in 16-bit frame"/>
            <enumItems enum="16bitext" enumValue="I2S_DataFormat_16bextended" enumCaption="16 bit extended" enumDescription="16-bit data packed in 32-bit frame"/>
            <enumItems enum="24bit" enumValue="I2S_DataFormat_24b" enumCaption="24 bit" enumDescription="24-bit data packed in 32-bit frame"/>
            <enumItems enum="32bit" enumValue="I2S_DataFormat_32b" enumCaption="32 bit" enumDescription="32-bit data packed in 32-bit frame"/>
          </instanceOptions>
          <instanceOptions name="I2S_AudioFreq" kind="ENUM" caption="Audio frequency" description="Specifies the frequency selected for the I2S communication" defaultValue="44kHz" type="UINT32">
            <enumItems enum="96kHz" enumValue="I2S_AudioFreq_96k" enumCaption="96 kHz"/>
            <enumItems enum="48kHz" enumValue="I2S_AudioFreq_48k" enumCaption="48 kHz"/>
            <enumItems enum="44kHz" enumValue="I2S_AudioFreq_44k" enumCaption="44.1 kHz"/>
            <enumItems enum="32kHz" enumValue="I2S_AudioFreq_32k" enumCaption="32 kHz"/>
            <enumItems enum="22kHz" enumValue="I2S_AudioFreq_22k" enumCaption="22.05 kHz"/>
            <enumItems enum="16kHz" enumValue="I2S_AudioFreq_16k" enumCaption="16 kHz"/>
            <enumItems enum="11kHz" enumValue="I2S_AudioFreq_11k" enumCaption="11.025 kHz"/>
            <enumItems enum="8kHz" enumValue="I2S_AudioFreq_8k" enumCaption="8 kHz"/>
          </instanceOptions>
          <instanceOptions name="I2S_CPOL" kind="ENUM" caption="Clock polarity" description="Specifies the idle state of the I2S clock" defaultValue="Low" type="UINT16">
            <enumItems enum="Low" enumValue="I2S_CPOL_Low"/>
            <enumItems enum="High" enumValue="I2S_CPOL_High"/>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/pal_arch_cortex_variant/" relativeFileURI="ini/pal_arch_cortex_variant_stm32.Plugin" name="pal_arch_cortex_variant_stm32" implements="pal_arch_cortex_variant" generateData="false">
        <sourceFiles>$(SWP_RELPATH)\src\pal_arch_cortex_variant.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32 PAL Services</captions>
        <descriptions>Implementation of pal_arch_cortex_variant for STM32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32."/>
        <pluginOptions name="connectivity_line_device" kind="BOOLEAN" autoValue="True" noGenerate="true">
          <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F10[57]"/>
          <hide_Ifs kind="TRUE"/>
          <autoSets targetOption="product_line" targetInterface="stm32f10x_conf" autoValue="CONNECTIVITY_LINE"/>
        </pluginOptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/gpio/" relativeFileURI="ini/per_stm32f4xx_gpio.Plugin" name="per_stm32f4xx_gpio" implements="per_stm32_gpio" userTypeHeaderFile="stm32f4xx_gpio.h">
        <hardwareIds>STM32F4XX_GPIO</hardwareIds>
        <instanceIds>STM32F4XX_GPIOA</instanceIds>
        <instanceIds>STM32F4XX_GPIOB</instanceIds>
        <instanceIds>STM32F4XX_GPIOC</instanceIds>
        <instanceIds>STM32F4XX_GPIOD</instanceIds>
        <instanceIds>STM32F4XX_GPIOE</instanceIds>
        <instanceIds>STM32F4XX_GPIOF</instanceIds>
        <instanceIds>STM32F4XX_GPIOG</instanceIds>
        <instanceIds>STM32F4XX_GPIOH</instanceIds>
        <instanceIds>STM32F4XX_GPIOI</instanceIds>
        <instanceIds>STM32F4XX_GPIOJ</instanceIds>
        <instanceIds>STM32F4XX_GPIOK</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX GPIO</captions>
        <descriptions>STMicroelectronics STM32F4XX General Purpose I/O</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection>
          <instanceOptions name="baseaddress" kind="UINT32" caption="Base Address" defaultValue="0xFFFFFFFF" auto="true">
            <instanceDefaultValues>0x40020000</instanceDefaultValues>
            <instanceDefaultValues>0x40020400</instanceDefaultValues>
            <instanceDefaultValues>0x40020800</instanceDefaultValues>
            <instanceDefaultValues>0x40020C00</instanceDefaultValues>
            <instanceDefaultValues>0x40021000</instanceDefaultValues>
            <instanceDefaultValues>0x40021400</instanceDefaultValues>
            <instanceDefaultValues>0x40021800</instanceDefaultValues>
            <instanceDefaultValues>0x40021C00</instanceDefaultValues>
            <instanceDefaultValues>0x40022000</instanceDefaultValues>
            <instanceDefaultValues>0x40022400</instanceDefaultValues>
            <instanceDefaultValues>0x40022800</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="pinconfig" kind="CALLBACK" caption="Pin Configuration" description="This function is generated by the Pin Mapper and sets up the pins for the peripheral." auto="true" return="void" param="void">
            <instanceDefaultValues>pincfg_gpioa_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpiob_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpioc_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpiod_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpioe_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpiof_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpiog_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpioh_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpioi_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpioj_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_gpiok_init</instanceDefaultValues>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2c/" relativeFileURI="ini/per_stm32f4xx_i2c.Plugin" name="per_stm32f4xx_i2c" implements="per_stm32_i2c">
        <hardwareIds>STM32F4XX_I2C</hardwareIds>
        <instanceIds>STM32F4XX_I2C1</instanceIds>
        <instanceIds>STM32F4XX_I2C2</instanceIds>
        <instanceIds>STM32F4XX_I2C3</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX I2C</captions>
        <descriptions>STMicroelectronics STM32F4XX I2C</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection>
          <instanceOptions name="baseaddress" kind="UINT32" caption="Base Address" defaultValue="0xFFFFFFFF" auto="true">
            <instanceDefaultValues>0x40005400</instanceDefaultValues>
            <instanceDefaultValues>0x40005800</instanceDefaultValues>
            <instanceDefaultValues>0x40005C00</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="pinconfig" kind="CALLBACK" caption="Pin Configuration" description="This function is generated by the Pin Mapper and sets up the pins for the peripheral." auto="true" return="void" param="void">
            <instanceDefaultValues>pincfg_i2c1_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_i2c2_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_i2c3_init</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="Interruptev" kind="INTERRUPT" caption="Interruptev" description="Event interrupt" auto="true">
            <instanceDefaultValues>31</instanceDefaultValues>
            <instanceDefaultValues>33</instanceDefaultValues>
            <instanceDefaultValues>72</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="Interrupter" kind="INTERRUPT" caption="Interrupter" description="Error interrupt" auto="true">
            <instanceDefaultValues>32</instanceDefaultValues>
            <instanceDefaultValues>34</instanceDefaultValues>
            <instanceDefaultValues>73</instanceDefaultValues>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/peripherals/i2s/" relativeFileURI="ini/per_stm32f4xx_i2s.Plugin" name="per_stm32f4xx_i2s" implements="per_stm32_i2s">
        <hardwareIds>STM32F4XX_I2S</hardwareIds>
        <instanceIds>STM32F4XX_I2S2</instanceIds>
        <instanceIds>STM32F4XX_I2S3</instanceIds>
        <pluginRequirements interface="stm32f4xx_lib"/>
        <pluginRequirements interface="stm32_pinmapper"/>
        <captions>STM32F4XX I2S</captions>
        <descriptions>STMicroelectronics STM32F4XX I2S</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4."/>
        <instanceSection>
          <instanceOptions name="baseaddress" kind="UINT32" caption="Base Address" defaultValue="0xFFFFFFFF" auto="true">
            <instanceDefaultValues>0x40003800</instanceDefaultValues>
            <instanceDefaultValues>0x40003C00</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="pinconfig" kind="CALLBACK" caption="Pin Configuration" description="This function is generated by the Pin Mapper and sets up the pins for the peripheral." auto="true" return="void" param="void">
            <instanceDefaultValues>pincfg_i2s2_init</instanceDefaultValues>
            <instanceDefaultValues>pincfg_i2s3_init</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="interrupt0" kind="INTERRUPT" description="Peripheral interrupt number" auto="true">
            <instanceDefaultValues>36</instanceDefaultValues>
            <instanceDefaultValues>51</instanceDefaultValues>
          </instanceOptions>
          <instanceOptions name="dma_stream_rx" kind="ENUM" description="DMA receive stream" auto="true" type="DMA_Stream_TypeDef *" userTypeHeaderFile="stm32f4xx.h">
            <instanceDefaultValues>DMA1_Stream3</instanceDefaultValues>
            <instanceDefaultValues>DMA1_Stream0</instanceDefaultValues>
            <enumItems enum="DMA1_Stream0" enumValue="DMA1_Stream0"/>
            <enumItems enum="DMA1_Stream3" enumValue="DMA1_Stream3"/>
          </instanceOptions>
          <instanceOptions name="dma_stream_tx" kind="ENUM" description="DMA transmit stream" auto="true" type="DMA_Stream_TypeDef *" userTypeHeaderFile="stm32f4xx.h">
            <instanceDefaultValues>DMA1_Stream4</instanceDefaultValues>
            <instanceDefaultValues>DMA1_Stream5</instanceDefaultValues>
            <enumItems enum="DMA1_Stream4" enumValue="DMA1_Stream4"/>
            <enumItems enum="DMA1_Stream5" enumValue="DMA1_Stream5"/>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32_cmsis.Plugin" name="stm32_cmsis" implements="stm32_cmsis" generateData="false">
        <pluginRequirements interface="stm32_cmsis_variant"/>
        <captions>STM32 CMSIS Core</captions>
        <descriptions>CMSIS Core for stm32 devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/pinmapper/" relativeFileURI="ini/pinmapper.Plugin" name="stm32_pinmapper" implements="stm32_pinmapper">
        <frameworkCompileOptions>-I&quot;../PinMapper&quot;</frameworkCompileOptions>
        <captions>STM32 Pin Mapper</captions>
        <descriptions>STM32 Pin Mapper</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/cmsis/" relativeFileURI="ini/stm32f4xx_cmsis.Plugin" name="stm32f4xx_cmsis" implements="stm32_cmsis_variant">
        <sourceFiles>$(SWP_RELPATH)\CM4\DeviceSupport\ST\STM32F4xx\system_stm32f4xx.c</sourceFiles>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\CoreSupport&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\CM4\DeviceSupport\ST\STM32F4xx&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>STM32F4XX CMSIS Core</captions>
        <descriptions>CMSIS Core configuration for STM32F4XX devices</descriptions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM324." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4." orCondition="true"/>
        <pluginOptions name="target" kind="BOOLEAN" defaultValue="True" generateCompilerDefine="STM32F4XX">
          <hide_Ifs kind="TRUE"/>
        </pluginOptions>
        <pluginOptions name="clksrc" kind="ENUM" caption="Clock Source" description="Select the clock source for the system core/processor clock." defaultValue="PLLCLKBYHSE">
          <autoSets targetOption="pll_used">
            <autoValueEnums>False</autoValueEnums>
            <autoValueEnums>False</autoValueEnums>
            <autoValueEnums>True</autoValueEnums>
            <autoValueEnums>True</autoValueEnums>
          </autoSets>
          <autoSets targetOption="hse_used">
            <autoValueEnums>False</autoValueEnums>
            <autoValueEnums>True</autoValueEnums>
            <autoValueEnums>False</autoValueEnums>
            <autoValueEnums>True</autoValueEnums>
          </autoSets>
          <autoSets targetOption="pll_input">
            <autoValueEnums>0</autoValueEnums>
            <autoValueEnums>0</autoValueEnums>
            <autoValueEnums>16000000/pll_m</autoValueEnums>
            <autoValueEnums>hse*1000000/pll_m</autoValueEnums>
          </autoSets>
          <autoSets targetOption="sysclk">
            <autoValueEnums>16000000</autoValueEnums>
            <autoValueEnums>hse*1000000</autoValueEnums>
            <autoValueEnums>sysclk</autoValueEnums>
            <autoValueEnums>sysclk</autoValueEnums>
          </autoSets>
          <enumItems enum="HSI" enumDescription="High Speed 16MHz Internal Oscilator"/>
          <enumItems enum="HSE" enumDescription="High Speed External Oscilator"/>
          <enumItems enum="PLLCLKBYHSI" enumDescription="PLL Clocked by High Speed Internal Oscillator"/>
          <enumItems enum="PLLCLKBYHSE" enumDescription="PLL Clocked by High Speed External Oscillator"/>
        </pluginOptions>
        <pluginOptions name="hse_bypass" kind="BOOLEAN" caption="HSE Bypass" description="HSE clock bypass  (set to bypass oscillator and use external clock)">
          <available_Ifs kind="OPTION" name="hse_used" condition="EQ" value="True"/>
          <available_Ifs kind="INTERFACE" name="stm32_pinmapper" condition="NE"/>
        </pluginOptions>
        <pluginOptions name="hse" kind="FLOAT" caption="HSE (MHZ)" description="High Speed External Oscillator (HSE)" defaultValue="25" minRange="4" maxRange="26">
          <available_Ifs kind="OPTION" name="hse_used" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="pll_used" kind="BOOLEAN" noGenerate="true">
          <hide_Ifs kind="TRUE"/>
        </pluginOptions>
        <pluginOptions name="hse_used" kind="BOOLEAN" noGenerate="true">
          <hide_Ifs kind="TRUE"/>
        </pluginOptions>
        <pluginOptions name="pll_m" kind="UINT8" caption="PLL_M Divider" description="PLL input equals PLL source divided by this value." defaultValue="25" minRange="2" maxRange="63">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="pll_input" kind="UINT32" caption="PLL input (Hz)" description="Internal input to PLL. Must be between 1MHz and 2MHz, recommended is 2MHz to limit jitter." noGenerate="true">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="pll_n" kind="UINT32" caption="PLL_N Multiplyer" description="PLL VCO equals PLL input times this value." defaultValue="192" minRange="192" maxRange="432">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
          <autoSets targetOption="vcoclk" autoValue="pll_input*pll_n"/>
        </pluginOptions>
        <pluginOptions name="vcoclk" kind="UINT32" caption="PLL VCO (Hz)" description="Internal VCO frequency." noGenerate="true">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="pll_p" kind="ENUM" caption="PLL_P Divider" description="SYSCLK equals PLL VCO divided by this value." defaultValue="2">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
          <autoSets targetOption="sysclk">
            <autoValueEnums>vcoclk/2</autoValueEnums>
            <autoValueEnums>vcoclk/4</autoValueEnums>
            <autoValueEnums>vcoclk/6</autoValueEnums>
            <autoValueEnums>vcoclk/8</autoValueEnums>
          </autoSets>
          <enumItems enum="2" enumValue="0"/>
          <enumItems enum="4" enumValue="1"/>
          <enumItems enum="6" enumValue="2"/>
          <enumItems enum="8" enumValue="3"/>
        </pluginOptions>
        <pluginOptions name="sysclk" kind="UINT32" caption="SYSCLK (Hz)" description="Internal system clock, also used as ethernet PTP clock." noGenerate="true"/>
        <pluginOptions name="ahb" kind="ENUM" caption="AHB Prescaler" description="CPU clock will equal SYSCLK divided by this value" defaultValue="2">
          <autoSets targetOption="clockhz">
            <autoValueEnums>sysclk</autoValueEnums>
            <autoValueEnums>sysclk/2</autoValueEnums>
            <autoValueEnums>sysclk/4</autoValueEnums>
            <autoValueEnums>sysclk/8</autoValueEnums>
            <autoValueEnums>sysclk/16</autoValueEnums>
            <autoValueEnums>sysclk/64</autoValueEnums>
            <autoValueEnums>sysclk/128</autoValueEnums>
            <autoValueEnums>sysclk/256</autoValueEnums>
            <autoValueEnums>sysclk/512</autoValueEnums>
          </autoSets>
          <enumItems enum="1" enumValue="0"/>
          <enumItems enum="2" enumValue="8"/>
          <enumItems enum="4" enumValue="9"/>
          <enumItems enum="8" enumValue="10"/>
          <enumItems enum="16" enumValue="11"/>
          <enumItems enum="64" enumValue="12"/>
          <enumItems enum="128" enumValue="13"/>
          <enumItems enum="256" enumValue="14"/>
          <enumItems enum="512" enumValue="15"/>
        </pluginOptions>
        <pluginOptions name="clockhz" kind="UINT32" caption="HCLK / CPU Clock (Hz)" description="CPU clock frequency. It must not exceed 120 MHz!">
          <autoSets targetOption="clockhz" targetInterface="timing"/>
          <autoSets targetOption="clockhz" targetInterface="pal"/>
        </pluginOptions>
        <pluginOptions name="apb1" kind="ENUM" caption="APB1 Prescaler" description="The APB1 clock will equal the CPU clock divided by this value." defaultValue="2">
          <autoSets targetOption="apb1clk">
            <autoValueEnums>clockhz</autoValueEnums>
            <autoValueEnums>clockhz/2</autoValueEnums>
            <autoValueEnums>clockhz/4</autoValueEnums>
            <autoValueEnums>clockhz/8</autoValueEnums>
            <autoValueEnums>clockhz/16</autoValueEnums>
          </autoSets>
          <enumItems enum="1" enumValue="0"/>
          <enumItems enum="2" enumValue="4"/>
          <enumItems enum="4" enumValue="5"/>
          <enumItems enum="8" enumValue="6"/>
          <enumItems enum="16" enumValue="7"/>
        </pluginOptions>
        <pluginOptions name="apb1clk" kind="UINT32" caption="APB1 Clock (Hz)" description="The APB1 clocks peripherals with a baseaddress in the range 0x40000000 - 0x40010000. It must not exceed 30MHz!" noGenerate="true"/>
        <pluginOptions name="apb2" kind="ENUM" caption="APB2 Prescaler" description="The APB2 clock will equal the CPU clock divided by this value." defaultValue="1">
          <autoSets targetOption="apb2clk">
            <autoValueEnums>clockhz</autoValueEnums>
            <autoValueEnums>clockhz/2</autoValueEnums>
            <autoValueEnums>clockhz/4</autoValueEnums>
            <autoValueEnums>clockhz/8</autoValueEnums>
            <autoValueEnums>clockhz/16</autoValueEnums>
          </autoSets>
          <enumItems enum="1" enumValue="0"/>
          <enumItems enum="2" enumValue="4"/>
          <enumItems enum="4" enumValue="5"/>
          <enumItems enum="8" enumValue="6"/>
          <enumItems enum="16" enumValue="7"/>
        </pluginOptions>
        <pluginOptions name="apb2clk" kind="UINT32" caption="APB2 Clock (Hz)" description="The APB2 clocks peripherals with a baseaddress in the range 0x40010000 - 0x40020000. It must not exceed 60MHz!" noGenerate="true"/>
        <pluginOptions name="pll_q" kind="UINT8" caption="PLL_Q Divider" description="48MHz clockline equals PLL VCO divided by this value." defaultValue="4" minRange="2" maxRange="15">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
          <autoSets targetOption="usbclk" autoValue="vcoclk/pll_q"/>
        </pluginOptions>
        <pluginOptions name="usbclk" kind="UINT32" caption="48MHz Clock (Hz)" description="The 48MHz clock for the USB OTG, SDIO and RNG peripherals." noGenerate="true">
          <available_Ifs kind="OPTION" name="pll_used" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="mco1src" kind="ENUM" caption="MCO1 Clock Source" description="Select the clock source for the MCO1 clock output." defaultValue="HSI">
          <enumItems enum="HSI"/>
          <enumItems enum="LSE"/>
          <enumItems enum="HSE"/>
          <enumItems enum="PLL"/>
        </pluginOptions>
        <pluginOptions name="mco1pre" kind="ENUM" caption="MCO1 Prescaler" description="The MCO1 clock will equal the MCO1 input divided by this value." defaultValue="1">
          <enumItems enum="1" enumValue="0"/>
          <enumItems enum="2" enumValue="4"/>
          <enumItems enum="3" enumValue="5"/>
          <enumItems enum="4" enumValue="6"/>
          <enumItems enum="5" enumValue="7"/>
        </pluginOptions>
        <pluginOptions name="mco2src" kind="ENUM" caption="MCO2 Clock Source" description="Select the clock source for the MCO2 clock output." defaultValue="SYSCLK">
          <enumItems enum="SYSCLK"/>
          <enumItems enum="PLLI2S"/>
          <enumItems enum="HSE"/>
          <enumItems enum="PLL"/>
        </pluginOptions>
        <pluginOptions name="mco2pre" kind="ENUM" caption="MCO2 Prescaler" description="The MCO2 clock will equal the MCO2 input divided by this value." defaultValue="1">
          <enumItems enum="1" enumValue="0"/>
          <enumItems enum="2" enumValue="4"/>
          <enumItems enum="3" enumValue="5"/>
          <enumItems enum="4" enumValue="6"/>
          <enumItems enum="5" enumValue="7"/>
        </pluginOptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/stm32/firmware/stm32f4xx_stdperiph_driver/" relativeFileURI="ini/stm32f4xx_lib.Plugin" name="stm32f4xx_lib" implements="stm32f4xx_lib">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-Wc--no-warnings=529,560,588</compileOptions>
        <globalCompileOptions>-DUSE_STDPERIPH_DRIVER=1</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\inc&quot;</globalCompileOptions>
        <pluginRequirements interface="stm32_cmsis"/>
        <captions>STM32F4XX Peripheral Access Library</captions>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM324." orCondition="true"/>
        <available_Ifs kind="ENVIRONMENT" name="DEVICE" condition="REQ" value="STM32F4." orCondition="true"/>
      </pluginFiles>
    </repositories>
    <repositories rootURI="platform:/plugin/com.tasking.swp.repository/SoftwarePlatform/" version="1.103.0.0">
      <interfaceFiles relativeRootURI="cstart/base/" relativeFileURI="ini/cstart.Interface" name="cstart" category="INTERNAL" isSystem="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="platform/discrete/processors/arm9/" relativeFileURI="ini/pal_arch_arm9_variant.Interface" name="pal_arch_arm9_variant" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/processors/cortex/" relativeFileURI="ini/pal_arch_cortex_variant.Interface" name="pal_arch_cortex_variant" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/discrete/processors/cortex_specials/" relativeFileURI="ini/cortex_specials.Interface" name="cortex_arch_specials" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="platform/external/drivers/adc084s021/" relativeFileURI="ini/drv_adc084s021.Interface" name="drv_adc084s021" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/adc104s021/" relativeFileURI="ini/drv_adc104s021.Interface" name="drv_adc104s021" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/apds9300/" relativeFileURI="ini/drv_apds9300.Interface" name="drv_apds9300" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/apds9700/" relativeFileURI="ini/drv_apds9700.Interface" name="drv_apds9700" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/at86rf231/" relativeFileURI="ini/drv_at86rf231.Interface" name="drv_at86rf231" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/bmp085/" relativeFileURI="ini/drv_bmp085.Interface" name="drv_bmp085" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/cs4270/" relativeFileURI="ini/drv_cs4270.Interface" name="drv_cs4270" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/cs4322/" relativeFileURI="ini/drv_cs4322.Interface" name="drv_cs4322" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/dac084s085/" relativeFileURI="ini/drv_dac084s085.Interface" name="drv_dac084s085" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/dac104s085/" relativeFileURI="ini/drv_dac104s085.Interface" name="drv_dac104s085" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ds1391/" relativeFileURI="ini/drv_ds1391.Interface" name="drv_ds1391" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/dwc_usb_otg/adaptors/" relativeFileURI="ini/dwc_otg_adaptor.Interface" name="dwc_usb_otg_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/external/drivers/dwc_usb_otg/" relativeFileURI="ini/dwc_usb_otg.Interface" name="dwc_usb_otg" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/enc28j60/" relativeFileURI="ini/drv_enc28j60.Interface" name="drv_enc28j60" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/hih5030/" relativeFileURI="ini/drv_hih5030.Interface" name="drv_hih5030" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ics307/" relativeFileURI="ini/drv_ics307.Interface" name="drv_ics307" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ili9320_par/" relativeFileURI="ini/ili9320_par.Interface" name="drv_ili9320_par" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ili9320_spi/" relativeFileURI="ini/ili9320_spi.Interface" name="drv_ili9320_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ili9341_ltdc/adaptors/" relativeFileURI="ini/ad_ili9341_ltdc.Interface" name="ad_drv_ili9341_ltdc" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/external/drivers/ili9341_ltdc/" relativeFileURI="ini/drv_ili9341_ltdc.Interface" name="drv_ili9341_ltdc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/lis302dl/" relativeFileURI="ini/drv_lis302dl.Interface" name="drv_lis302dl" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/m24cxx/" relativeFileURI="ini/drv_m24cxx.Interface" name="drv_m24cxx" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/m25px0/" relativeFileURI="ini/drv_m25px0.Interface" name="drv_m25px0" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/m25px0/m25px0_blockio/" relativeFileURI="ini/drv_m25px0_blockio.Interface" name="drv_m25px0_blockio" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/max1037/" relativeFileURI="ini/drv_max1037.Interface" name="drv_max1037" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/max1104/" relativeFileURI="ini/drv_max1104.Interface" name="drv_max1104" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/max1229/" relativeFileURI="ini/drv_max1229.Interface" name="drv_max1229" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/max5841/" relativeFileURI="ini/drv_max5841.Interface" name="drv_max5841" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/max6966/" relativeFileURI="ini/drv_max6966.Interface" name="drv_max6966" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/mcp3021/" relativeFileURI="ini/drv_mcp3021.Interface" name="drv_mcp3021" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/pcf2123/" relativeFileURI="ini/drv_pcf2123.Interface" name="drv_pcf2123" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/sdcard/" relativeFileURI="ini/drv_sdcard.Interface" name="drv_sdcard" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/spfd5408_par/" relativeFileURI="ini/spfd5408_par.Interface" name="drv_spfd5408_par" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/spfd5408_spi/" relativeFileURI="ini/spfd5408_spi.Interface" name="drv_spfd5408_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ssd0300_i2c/" relativeFileURI="ini/drv_ssd0300_i2c.Interface" name="drv_ssd0300_i2c" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/ssd1329_spi/" relativeFileURI="ini/drv_ssd1329_spi.Interface" name="drv_ssd1329_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/st7637_par/" relativeFileURI="ini/drv_st7637_par.Interface" name="drv_st7637_par" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/stlm75/" relativeFileURI="ini/drv_stlm75.Interface" name="drv_stlm75" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/stmpe811/" relativeFileURI="ini/drv_stmpe811.Interface" name="drv_stmpe811" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/external/drivers/tvp5150/" relativeFileURI="ini/drv_tvp5150.Interface" name="drv_tvp5150" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/adc/adaptors/" relativeFileURI="ini/adc_adaptor.Interface" name="adc_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/adc/" relativeFileURI="ini/drv_adc.Interface" name="adc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/aes_soft/" relativeFileURI="ini/soft_aes.Interface" name="soft_aes" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/can/adaptors/" relativeFileURI="ini/drv_can_adaptor.Interface" name="can_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/can/" relativeFileURI="ini/drv_can.Interface" name="can" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/dac/adaptors/" relativeFileURI="ini/dac_adaptor.Interface" name="dac_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/dac/" relativeFileURI="ini/drv_dac.Interface" name="dac" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/extint/adaptors/" relativeFileURI="ini/ad_extint.Interface" name="ad_extint" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/extint/" relativeFileURI="ini/extint.Interface" name="extint" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/lrwpan/adaptors/" relativeFileURI="ini/lrwpan_adaptor.Interface" name="lrwpan_radio" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/lrwpan/" relativeFileURI="ini/lrwpan.Interface" name="lrwpan" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/pwm/adaptors/" relativeFileURI="ini/pwm_adaptor.Interface" name="pwm_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/pwm/" relativeFileURI="ini/drv_pwm.Interface" name="pwm" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/ramdisk/" relativeFileURI="ini/ramdisk.Interface" name="ramdisk" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/drivers/rtc/adaptors/" relativeFileURI="ini/rtc_adaptor.Interface" name="rtc_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="platform/generic/drivers/rtc/" relativeFileURI="ini/drv_rtc.Interface" name="rtc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/interfaces/gpio/" relativeFileURI="ini/drv_gpio.Interface" name="drv_gpio" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/interfaces/i2cm/" relativeFileURI="ini/drv_i2cm.Interface" name="drv_i2cm" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/interfaces/i2sm/" relativeFileURI="ini/drv_i2sm.Interface" name="drv_i2sm" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/interfaces/sdhc/" relativeFileURI="ini/drv_sdhc.Interface" name="drv_sdhc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/generic/interfaces/spi/" relativeFileURI="ini/drv_spi.Interface" name="drv_spi" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/pal/base/" relativeFileURI="ini/pal.Interface" name="pal" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="platform/pal/base/" relativeFileURI="ini/pal_arch.Interface" name="pal_arch" category="INTERNAL" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="platform/pal/interrupts/" relativeFileURI="ini/interrupts.Interface" name="interrupts" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="platform/pal/timing/" relativeFileURI="ini/timing.Interface" name="timing" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/agui/" relativeFileURI="ini/agui.Interface" name="agui" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/bluetooth/base/" relativeFileURI="ini/bluetooth.Interface" name="bluetooth" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/bluetooth/bluetooth_hid/" relativeFileURI="ini/bluetooth_hid.Interface" name="bluetooth_hid" category="SERVICE"/>
      <interfaceFiles relativeRootURI="services/bsd/base/" relativeFileURI="ini/bsd_network.Interface" name="bsd_network" category="SERVICE" isIncludedAsRequirementOnly="true"/>
      <interfaceFiles relativeRootURI="services/bsd/bsd_drivers/atheros/otus/" relativeFileURI="ini/bsd_drv_otus.Interface" name="bsd_drv_otus" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/bsd/bsd_drivers/atheros/uath/" relativeFileURI="ini/bsd_drv_uath.Interface" name="bsd_drv_uath" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/bsd/bsd_drivers/ralink/rum/" relativeFileURI="ini/bsd_drv_rum.Interface" name="bsd_drv_rum" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/bsd/bsd_drivers/ralink/run/" relativeFileURI="ini/bsd_drv_run.Interface" name="bsd_drv_run" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/bsd/bsd_drivers/realtek/urtw/" relativeFileURI="ini/bsd_drv_urtw.Interface" name="bsd_drv_urtw" category="SERVICE" isIncludedAsRequirementOnly="true" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/http/" relativeFileURI="ini/http.Interface" name="http" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/ifconfig/" relativeFileURI="ini/ifconfig.Interface" name="ifconfig" category="INTERNAL" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/jpgdecoder/" relativeFileURI="ini/jpgdecoder.Interface" name="jpgdecoder" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/jpgenc/" relativeFileURI="ini/jpgenc.Interface" name="jpgenc" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/json/" relativeFileURI="ini/json.Interface" name="json" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/location/" relativeFileURI="ini/location.Interface" name="location" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/location/" relativeFileURI="ini/location_adaptor.Interface" name="location_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/lwip/adaptors/netif/" relativeFileURI="ini/netif.Interface" name="netif" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/lwip/" relativeFileURI="ini/lwip.Interface" name="lwip" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/matrixssl/" relativeFileURI="ini/matrixssl.Interface" name="matrixssl" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/modem/" relativeFileURI="ini/modem.Interface" name="modem" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/aes/adaptors/" relativeFileURI="ini/aes_adaptor.Interface" name="aes_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/aes/" relativeFileURI="ini/aes.Interface" name="aes" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/audio/adaptors/" relativeFileURI="ini/ad_audiostream.Interface" name="ad_audiostream" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/audio/adaptors/" relativeFileURI="ini/ad_codec.Interface" name="ad_codec" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/audio/" relativeFileURI="ini/audio.Interface" name="audio" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/canopen/" relativeFileURI="ini/canopen.Interface" name="canopen" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/ethernet/adaptors/" relativeFileURI="ini/ethernet_adaptor.Interface" name="ethernet_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/ethernet/" relativeFileURI="ini/ethernet.Interface" name="ethernet" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/gps_nmea/" relativeFileURI="ini/gps_nmea.Interface" name="gps_nmea" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/gps_simcom/" relativeFileURI="ini/gps_simcom.Interface" name="gps_simcom" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/graphics/adaptors/" relativeFileURI="ini/ad_graphics.Interface" name="ad_graphics" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/graphics/" relativeFileURI="ini/graphics.Interface" name="graphics" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/pointer/adaptors/" relativeFileURI="ini/ad_pointer.Interface" name="ad_pointer" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/pointer/" relativeFileURI="ini/pointer.Interface" name="pointer" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/platform/touchscreen/adaptors/" relativeFileURI="ini/ad_touchscreen.Interface" name="ad_touchscreen" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/platform/touchscreen/" relativeFileURI="ini/touchscreen.Interface" name="touchscreen" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/ppp/" relativeFileURI="ini/ppp.Interface" name="ppp" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/sysutils/" relativeFileURI="ini/sysutils.Interface" name="sysutils" category="INTERNAL" isSystem="true" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/base/adaptors/" relativeFileURI="ini/usbhost_adaptor.Interface" name="usbhost_adaptor" category="ADAPTOR"/>
      <interfaceFiles relativeRootURI="services/usbhost/base/" relativeFileURI="ini/usbhost.Interface" name="usbhost" category="SERVICE">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_bluetooth/" relativeFileURI="ini/usbhost_bluetooth.Interface" name="usbhost_bluetooth" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_core/" relativeFileURI="ini/usbhost_core.Interface" name="usbhost_core" category="INTERNAL"/>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_hub/" relativeFileURI="ini/usbhost_hub.Interface" name="usbhost_hub" category="SERVICE" canBeVisible="false"/>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_keyboard/" relativeFileURI="ini/usbhost_keyboard.Interface" name="usbhost_keyboard" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_mouse/" relativeFileURI="ini/usbhost_mouse.Interface" name="usbhost_mouse" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_msd/" relativeFileURI="ini/usbhost_msd.Interface" name="usbhost_msd" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_network/" relativeFileURI="ini/usbhost_network.Interface" name="usbhost_network" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/usbhost/usbhost_uvc/" relativeFileURI="ini/usbhost_uvc.Interface" name="usbhost_uvc" category="SERVICE" canBeVisible="false">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <interfaceFiles relativeRootURI="services/uuid/" relativeFileURI="ini/uuid.Interface" name="drv_uuid" category="DRIVER">
        <publicDirs>$(SWP_RELPATH)\include</publicDirs>
      </interfaceFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_adc084s021/" relativeFileURI="ini/ad_adc_to_adc084s021.Plugin" name="ad_adc_adc084s021" implements="adc_adaptor" initHandler="ad_adc084s021_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts adc084s021 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_adc084s021"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_adc104s021/" relativeFileURI="ini/ad_adc_to_adc104s021.Plugin" name="ad_adc_adc104s021" implements="adc_adaptor" initHandler="ad_adc104s021_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts adc104s021 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_adc104s021"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_max1037/" relativeFileURI="ini/ad_adc_to_max1037.Plugin" name="ad_adc_max1037" implements="adc_adaptor" initHandler="ad_max1037_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts max1037 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_max1037"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_adc_to_mcp3021/" relativeFileURI="ini/ad_adc_to_mcp3021.Plugin" name="ad_adc_mcp3021" implements="adc_adaptor" initHandler="ad_mcp3021_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts mcp3021 ADC driver to ADC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_mcp3021"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_aes_to_at86rf231/" relativeFileURI="ini/ad_aes_to_at86rf231.Plugin" name="at86rf231_to_aes" implements="aes_adaptor" initHandler="at86rf231_to_aes_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the software only AES encerpytion module to the generic AES module on platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_at86rf231"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_aes_to_soft_aes/" relativeFileURI="ini/ad_aes_to_soft_aes.Plugin" name="soft_aes_to_aes" implements="aes_adaptor" initHandler="soft_aes_to_aes_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the software only AES encerpytion module to the generic AES module on platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="soft_aes"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_audio_to_cs4270/" relativeFileURI="ini/ad_audio_to_cs4270.Plugin" name="ad_cs4270_to_audio" implements="ad_codec" initHandler="cs4270_to_audio_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the CS4270 driver to AUDIO platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_cs4270"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_blockio_to_m25px0/" relativeFileURI="ini/ad_blockio_to_m25px0.Plugin" name="m25px0_to_blockio" implements="blockio_adaptor" initHandler="m25px0_to_blockio_plugin_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="blockio"/>
        <descriptions>M25PX0 FLASH blockio adaptor.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_m25px0_blockio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_blockio_to_ramdisk/" relativeFileURI="ini/ad_blockio_to_ramdisk.Plugin" name="ramdisk_to_blockio" implements="blockio_adaptor" initHandler="ramdisk_to_blockio_plugin_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="blockio"/>
        <descriptions>ramdisk blockio adaptor.</descriptions>
        <instanceSection>
          <instanceRequirements interface="ramdisk"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_blockio_to_sdcard/" relativeFileURI="ini/ad_blockio_to_sdcard.Plugin" name="sdcard_to_blockio" implements="blockio_adaptor" initHandler="sdcard_to_blockio_plugin_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="blockio"/>
        <descriptions>SD Flash device i\o driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_sdcard"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_blockio_to_sdhc/" relativeFileURI="ini/ad_blockio_to_sdhc.Plugin" name="sdhc_to_blockio" implements="blockio_adaptor" initHandler="sdhc_to_blockio_plugin_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="blockio"/>
        <descriptions>SD host controller device I/O driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_sdhc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_blockio_to_usbhost/" relativeFileURI="ini/ad_blockio_to_usbhost.Plugin" name="usbhost_to_blockio" implements="blockio_adaptor" initHandler="usbhost_to_blockio_plugin_init" initHandlerPriority="1">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-DUSBHOST_TO_BLOCKIO</globalCompileOptions>
        <pluginRequirements interface="blockio"/>
        <descriptions>USB Host Mass Storage Device i\o driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost_msd"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dac_to_dac084s085/" relativeFileURI="ini/ad_dac_to_dac084s085.Plugin" name="ad_dac_dac084s085" implements="dac_adaptor" initHandler="ad_dac084s085_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts dac084s085 DAC driver to DAC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_dac084s085"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dac_to_dac104s085/" relativeFileURI="ini/ad_dac_to_dac104s085.Plugin" name="ad_dac_dac104s085" implements="dac_adaptor" initHandler="ad_dac104s085_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts dac104s085 DAC driver to DAC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_dac104s085"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_dac_to_max5841/" relativeFileURI="ini/ad_dac_to_max5841.Plugin" name="ad_dac_max5841" implements="dac_adaptor" initHandler="ad_max5841_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts max5841 DAC driver to DAC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_max5841"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_ethernet_to_enc28j60/" relativeFileURI="ini/ad_ethernet_to_enc28j60.Plugin" name="enc28j60_to_ethernet" implements="ethernet_adaptor" initHandler="enc28j60_to_ethernet_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the ENC28J60 Ethernet MAC device to Ethernet platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_enc28j60"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_ethernet_to_usbhost/" relativeFileURI="ini/ad_ethernet_to_usbhost.Plugin" name="usbhost_to_ethernet" implements="ethernet_adaptor" initHandler="usbhost_to_ethernet_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="ethernet"/>
        <descriptions>Adapts a usb network device to Ethernet platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost_network"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_ili9320_par/" relativeFileURI="ini/ad_graphics_to_ili9320_par.Plugin" name="ad_ili9320_par" implements="ad_graphics" initHandler="ad_ili9320_par_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts ILI9320 parallel driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ili9320_par"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_ili9320_spi/" relativeFileURI="ini/ad_graphics_to_ili9320_spi.Plugin" name="ad_ili9320_spi" implements="ad_graphics" initHandler="ad_ili9320_spi_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts ILI9320 SPI driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ili9320_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_ili9341_ltdc/" relativeFileURI="ini/ad_graphics_to_ili9341_ltdc.Plugin" name="graphics_to_ili9341_ltdc" implements="ad_graphics" initHandler="graphics_to_ili9341_ltdc_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts ili9341 LTDC driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ili9341_ltdc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_spfd5408_par/" relativeFileURI="ini/ad_graphics_to_spfd5408_par.Plugin" name="ad_spfd5408_par" implements="ad_graphics" initHandler="ad_spfd5408_par_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts SPFD5408 parallel driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spfd5408_par"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_spfd5408_spi/" relativeFileURI="ini/ad_graphics_to_spfd5408_spi.Plugin" name="ad_spfd5408_spi" implements="ad_graphics" initHandler="ad_spfd5408_spi_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts SPFD5408 spi driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spfd5408_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_ssd0300_i2c/" relativeFileURI="ini/ad_graphics_to_ssd0300_i2c.Plugin" name="ad_ssd0300_i2c" implements="ad_graphics" initHandler="ad_ssd0300_i2c_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts SSD0300 I2C driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ssd0300_i2c"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_graphics_to_ssd1329_spi/" relativeFileURI="ini/ad_graphics_to_ssd1329_spi.Plugin" name="ad_ssd1329_spi" implements="ad_graphics" initHandler="ad_ssd1329_spi_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts SSD1329 SPI driver to graphics services</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ssd1329_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_keyboard_to_bluetooth/" relativeFileURI="ini/bluetooth_to_keyboard.Plugin" name="bluetooth_to_keyboard" implements="keyboard_adaptor" initHandler="bluetooth_to_keyboard_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapt Bluetooth HID keyboard device to generic posix keyboard service</descriptions>
        <instanceSection>
          <instanceRequirements interface="bluetooth_hid"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_keyboard_to_usbhost/" relativeFileURI="ini/ad_keyboard_to_usbhost.Plugin" name="usbhost_to_keyboard" implements="keyboard_adaptor" initHandler="usbhost_to_keyboard_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-DUSBHOST_TO_KEYBOARD</globalCompileOptions>
        <descriptions>Adapt USB Host keyboard device to generic posix keyboard service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost_keyboard"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_location_to_gps_nmea/" relativeFileURI="ini/ad_location_to_gps_nmea.Plugin" name="gps_nmea_to_location" implements="location_adaptor" initHandler="gps_nmea_to_location_init" initHandlerPriority="1">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Location interface for GPS NMEA driver.</descriptions>
        <instanceSection>
          <instanceRequirements interface="gps_nmea"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_location_to_gps_simcom/" relativeFileURI="ini/ad_location_to_gps_simcom.Plugin" name="gps_simcom_to_location" implements="location_adaptor" initHandler="gps_simcom_to_location_init" initHandlerPriority="1">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Location services interface for gps simcom driver.</descriptions>
        <instanceSection>
          <instanceRequirements interface="gps_simcom"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_lrwpan_to_at86rf231/" relativeFileURI="ini/ad_lrwpan_to_at86rf231.Plugin" name="at86rf231_to_lrwpan" implements="lrwpan_radio" initHandler="at86rf231_to_lrwpan_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts AT86RF231 radio interface to LRWPAN</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_at86rf231"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_lwip_to_netif_ethernet/" relativeFileURI="ini/ad_lwip_to_netif_ethernet.Plugin" name="netif_ethernet" implements="netif" initHandler="netif_ethernet_init_adaptor" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="ifconfig"/>
        <descriptions>Provides a Network Interface for the Ethernet Context to the Lightweight IP Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="ethernet"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_lwip_to_netif_ppp/" relativeFileURI="ini/ad_lwip_to_netif_ppp.Plugin" name="netif_ppp" implements="netif" initHandler="netif_ppp_init_adaptor" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="lwip"/>
        <descriptions>Provides a Network Interface for the PPP Context to the Lightweight IP Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="ppp"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_pointer_to_bluetooth/" relativeFileURI="ini/ad_bluetooth_to_pointer.Plugin" name="ad_bluetooth_to_pointer" implements="ad_pointer" initHandler="bluetooth_to_pointer_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the Bluetooth HID driver to POINTER platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="bluetooth_hid"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_pointer_to_touchscreen/" relativeFileURI="ini/ad_pointer_to_touchscreen.Plugin" name="ad_touchscreen_to_pointer" implements="ad_pointer" initHandler="touchscreen_to_pointer_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src\</sourceDirs>
        <descriptions>Adapts the Touchscreen Services to the Pointer.</descriptions>
        <instanceSection>
          <instanceRequirements interface="touchscreen"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_pointer_to_usbhost/" relativeFileURI="ini/ad_pointer_to_usbhost.Plugin" name="ad_usbhost_to_pointer" implements="ad_pointer">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-DUSBHOST_TO_POINTER</globalCompileOptions>
        <descriptions>Adapts the USB Host driver to POINTER platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost_mouse"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_rtc_to_ds1391/" relativeFileURI="ini/ad_rtc_to_ds1391.Plugin" name="ad_rtc_ds1391" implements="rtc_adaptor" initHandler="ad_ds1391_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts ds1391 RTC driver to RTC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_ds1391"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_rtc_to_pcf2123/" relativeFileURI="ini/ad_rtc_to_pcf2123.Plugin" name="ad_rtc_pcf2123" implements="rtc_adaptor" initHandler="ad_pcf2123_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts pcf2123 RTC driver to RTC generic driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_pcf2123"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_textdisplay_to_graphics/" relativeFileURI="ini/ad_textdisplay_to_graphics.Plugin" name="graphics_to_textdisplay" implements="textdisplay_adaptor" initHandler="graphics_to_textdisplay_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Posix interface to display text on graphics peripherals</descriptions>
        <instanceSection>
          <instanceRequirements interface="graphics"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_touchscreen_to_stmpe811/" relativeFileURI="ini/ad_touchscreen_to_stmpe811.Plugin" name="ad_stmpe811_to_touchscreen" implements="ad_touchscreen" initHandler="stmpe811_to_touchscreen_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the STMPE811 driver to TOUCHSCREEN platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_stmpe811"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_usbhost_to_dwc_usb_otg/" relativeFileURI="ini/ad_usbhost_to_dwc_usb_otg.Plugin" name="usbhost_to_dwc_usb_otg" implements="usbhost_adaptor" initHandler="usbhost_to_dwc_usb_otg_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the Synopsys DWC USB OTG driver to the USB Host service</descriptions>
        <instanceSection>
          <instanceRequirements interface="dwc_usb_otg"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/processors/arm9/" relativeFileURI="ini/pal_arch_arm9.Plugin" name="pal_arch_arm9" implements="pal_arch" generatedFileBase="pal_arch_cfg">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="pal_arch_arm9_variant"/>
        <captions>ARM9 architecture</captions>
        <descriptions>Pal implements the ARM9 common architecture</descriptions>
        <bitmaps>pal_arch_arm9.bmp</bitmaps>
        <available_Ifs kind="ENVIRONMENT" name="ARCHITECTURE" condition="REQ" value="ARMv5T."/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/processors/cortex_variant_generic/" relativeFileURI="ini/pal_arch_cortex_variant_generic.Plugin" name="pal_arch_cortex_variant_generic" implements="pal_arch_cortex_variant" generateData="false" defaultImplementor="true">
        <sourceFiles>$(SWP_RELPATH)\src\pal_arch_cortex_variant_generic.c</sourceFiles>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\cmsis\Include&quot;</globalCompileOptions>
        <descriptions>Default configuration for an unknown Cortex M3 device</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/adc084s021/" relativeFileURI="ini/drv_adc084s021.Plugin" name="drv_adc084s021" implements="drv_adc084s021" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>ADC084S021 ADC Driver</captions>
        <descriptions>ADC084S021 4 Channel, 50 ksps to 200 Ksps, 8-Bit A/D Converter</descriptions>
        <bitmaps>drv_adc084s021.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/adc104s021/" relativeFileURI="ini/drv_adc104s021.Plugin" name="drv_adc104s021" implements="drv_adc104s021" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>ADC104S021 ADC Driver</captions>
        <descriptions>ADC104S021 4 Channel, 50 ksps to 200 Ksps, 10-Bit A/D Converter</descriptions>
        <bitmaps>drv_adc104s021.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/apds9300/" relativeFileURI="ini/drv_apds9300.Plugin" name="drv_apds9300" implements="drv_apds9300">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="interrupts"/>
        <captions>APDS9300 Light Photo Sensor Driver</captions>
        <descriptions>APDS9300 Light Photo Sensor driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
          <instanceRequirements interface="extint" multipleLinks="true" multipleLinksMax="1" multipleLinksMin="0"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/apds9700/" relativeFileURI="ini/drv_apds9700.Plugin" name="drv_apds9700" implements="drv_apds9700">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="interrupts"/>
        <captions>APDS9700 Proximity Sensor Driver</captions>
        <descriptions>APDS9700 Proximity Sensor driver</descriptions>
        <bitmaps>drv_apds9700.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="pwm"/>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/at86rf231/" relativeFileURI="ini/drv_at86rf231.Plugin" name="drv_at86rf231" implements="drv_at86rf231" userTypeHeaderFile="drv_at86rf231.h">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <pluginRequirements interface="timing"/>
        <captions>AT86RF231 Radio Device Driver</captions>
        <descriptions>Device driver for AT86RF231</descriptions>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="drv_spi"/>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/bmp085/" relativeFileURI="ini/drv_bmp085.Plugin" name="drv_bmp085" implements="drv_bmp085">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="timing"/>
        <captions>BMP085 Pressure Sensor Driver</captions>
        <descriptions>BMP085 Digital Pressure &amp; Temperature Sensor driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/cs4270/" relativeFileURI="ini/drv_cs4270.Plugin" name="drv_cs4270" implements="drv_cs4270">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="timing"/>
        <captions>CS4270 Audio Codec Driver</captions>
        <descriptions>CS4270 stereo audio CODEC controller driver</descriptions>
        <bitmaps>drv_cs4270.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/dac084s085/" relativeFileURI="ini/drv_dac084s085.Plugin" name="drv_dac084s085" implements="drv_dac084s085">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>DAC084S085 DAC Driver</captions>
        <descriptions>DAC084S085 8-Bit Micro Power QUAD Digital-to-Analog Converter with Rail-to-Rail Output</descriptions>
        <bitmaps>drv_dac084s085.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/dac104s085/" relativeFileURI="ini/drv_dac104s085.Plugin" name="drv_dac104s085" implements="drv_dac104s085">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>DAC104S085 DAC Driver</captions>
        <descriptions>DAC104S085 10-Bit Micro Power QUAD Digital-to-Analog Converter with Rail-to-Rail Output</descriptions>
        <bitmaps>drv_dac104s085.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ds1391/" relativeFileURI="ini/drv_ds1391.Plugin" name="drv_ds1391" implements="drv_ds1391">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>DS1391 Real Time Clock Driver</captions>
        <descriptions>DS1391 Real Time Clock Driver</descriptions>
        <bitmaps>drv_ds1391.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/dwc_usb_otg/" relativeFileURI="ini/dwc_usb_otg.Plugin" name="dwc_usb_otg" implements="dwc_usb_otg">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>&quot;-Wc--no-warnings=549,588&quot;</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="posix_errno"/>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="usbhost_core"/>
        <captions>DWC USB OTG Driver</captions>
        <descriptions>Synopsys DWC USB OTG Core Driver</descriptions>
        <bitmaps>dwc_usb_otg.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="dwc_usb_otg_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/enc28j60/" relativeFileURI="ini/drv_enc28j60.Plugin" name="drv_enc28j60" implements="drv_enc28j60" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="ifconfig"/>
        <captions>ENC28J60 Driver</captions>
        <descriptions>ENC28J60 EMAC driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/hih5030/" relativeFileURI="ini/drv_hih5030.Plugin" name="drv_hih5030" implements="drv_hih5030">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>HIH5030 Humidity Sensor Driver</captions>
        <descriptions>HIH5030 Humidity Sensor driver</descriptions>
        <bitmaps>drv_hih5030.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="adc"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ics307/" relativeFileURI="ini/drv_ics307.Plugin" name="drv_ics307" implements="drv_ics307">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>ICS307 Clock Generator Driver</captions>
        <descriptions>ICS307-02 Serially Programmable Clock Source</descriptions>
        <bitmaps>drv_ics307.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ili9320_par/" relativeFileURI="ini/ili9320_par.Plugin" name="drv_ili9320_par" implements="drv_ili9320_par" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="timing"/>
        <captions>ILI9320 LCD Module Driver (parallel)</captions>
        <descriptions>Driver for ILI9320 LCD module with parallel interface</descriptions>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ili9320_spi/" relativeFileURI="ini/ili9320_spi.Plugin" name="drv_ili9320_spi" implements="drv_ili9320_spi">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="timing"/>
        <captions>ILI9320 LCD Module Driver (SPI)</captions>
        <descriptions>Driver for ILI9320 LCD module with SPI interface</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ili9341_ltdc/" relativeFileURI="ini/drv_ili9341_ltdc.Plugin" name="drv_ili9341_ltdc" implements="drv_ili9341_ltdc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="timing"/>
        <captions>ILI9341 LCD Module Driver</captions>
        <descriptions>Driver for ILI9341 LCD module</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
          <instanceRequirements interface="ad_drv_ili9341_ltdc"/>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/lis302dl/" relativeFileURI="ini/drv_lis302dl.Plugin" name="drv_lis302dl" implements="drv_lis302dl">
        <sourceFiles>$(SWP_RELPATH)\src\drv_lis302dl.c</sourceFiles>
        <captions>LIS302DL MEMS Motion Sensor</captions>
        <descriptions>LIS302DL MEMS motion sensor</descriptions>
        <bitmaps>drv_lis302dl.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/m24cxx/" relativeFileURI="ini/drv_m24cxx.Plugin" name="drv_m24cxx" implements="drv_m24cxx">
        <sourceFiles>$(SWP_RELPATH)\src\drv_m24cxx.c</sourceFiles>
        <captions>M24CXX Serial I2C Bus EEPROM Driver</captions>
        <descriptions>M24CXX Serial I2C Bus EEPROM</descriptions>
        <bitmaps>drv_m24cxx.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/m25px0/" relativeFileURI="ini/drv_m25px0.Plugin" name="drv_m25px0" implements="drv_m25px0">
        <generateIncludes>drv_spi.h</generateIncludes>
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>M25Px0 Serial Flash Memory Driver</captions>
        <descriptions>M25Px0 Serial Flash Memory Driver</descriptions>
        <bitmaps>drv_m25px0.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/m25px0/m25px0_blockio/" relativeFileURI="ini/drv_m25px0_blockio.Plugin" name="drv_m25px0_blockio" implements="drv_m25px0_blockio">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\..\internal&quot;</compileOptions>
        <captions>M25PX0 Flash Memory Block I/O</captions>
        <descriptions>Block I/O interface to M25PX0 Parallel Flash memory</descriptions>
        <bitmaps>drv_m25px0_blockio.bmp</bitmaps>
        <available_Ifs kind="PLUGIN" name="drv_m25px0" condition="EQ"/>
        <instanceSection>
          <instanceRequirements interface="drv_m25px0"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/max1037/" relativeFileURI="ini/drv_max1037.Plugin" name="drv_max1037" implements="drv_max1037">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <captions>MAX1037 ADC Driver</captions>
        <descriptions>MAX1037 A/D Converter Driver</descriptions>
        <bitmaps>drv_max1037.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/max1104/" relativeFileURI="ini/drv_max1104.Plugin" name="drv_max1104" implements="drv_max1104">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>MAX1104 Audio Codec Driver</captions>
        <descriptions>MAX1104 8-bit Audio Codec Driver</descriptions>
        <bitmaps>drv_max1104.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/max1229/" relativeFileURI="ini/drv_max1229.Plugin" name="drv_max1229" implements="drv_max1229">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>MAX1229 12x12 ADC Driver</captions>
        <descriptions>MAX1229 12x12 ADC Driver</descriptions>
        <bitmaps>drv_max1229.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/max5841/" relativeFileURI="ini/drv_max5841.Plugin" name="drv_max5841" implements="drv_max5841">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <captions>MAX5841 DAC Driver</captions>
        <descriptions>MAX5841 D/A Converter Driver</descriptions>
        <bitmaps>drv_max5841.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/max6966/" relativeFileURI="ini/drv_max6966.Plugin" name="drv_max6966" implements="drv_max6966">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>MAX6966 LED Driver</captions>
        <descriptions>MAX6966 LED Driver</descriptions>
        <bitmaps>drv_max6966.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/mcp3021/" relativeFileURI="ini/drv_mcp3021.Plugin" name="drv_mcp3021" implements="drv_mcp3021">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>MCP3021 A/D Converter</captions>
        <descriptions>MCP3021 A/D Converter</descriptions>
        <bitmaps>drv_mcp3021.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/pcf2123/" relativeFileURI="ini/drv_pcf2123.Plugin" name="drv_pcf2123" implements="drv_pcf2123">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>PCF2123 Real Time Clock Driver</captions>
        <descriptions>PCF2123 Real Time Clock Driver</descriptions>
        <bitmaps>drv_pcf2123.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/sdcard/" relativeFileURI="ini/drv_sdcard.Plugin" name="drv_sdcard" implements="drv_sdcard">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="timing"/>
        <captions>SD Card Reader Driver</captions>
        <descriptions>Driver for SD card reader in SPI mode</descriptions>
        <bitmaps>drv_sdcard.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/spfd5408_par/" relativeFileURI="ini/spfd5408_par.Plugin" name="drv_spfd5408_par" implements="drv_spfd5408_par" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="timing"/>
        <captions>SPFD5408 LCD Module Driver (parallel)</captions>
        <descriptions>Driver for SPFD5408 LCD module with parallel interface</descriptions>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/spfd5408_spi/" relativeFileURI="ini/spfd5408_spi.Plugin" name="drv_spfd5408_spi" implements="drv_spfd5408_spi">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</compileOptions>
        <pluginRequirements interface="timing"/>
        <captions>SPFD5408 LCD Module Driver (SPI)</captions>
        <descriptions>Driver for SPFD5408 LCD module with SPI interface</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ssd0300_i2c/" relativeFileURI="ini/drv_ssd0300_i2c.Plugin" name="drv_ssd0300_i2c" implements="drv_ssd0300_i2c">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>SSD0300 I2C OLED Driver</captions>
        <descriptions>Driver for SSD0300 OLED display over I2C</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/ssd1329_spi/" relativeFileURI="ini/drv_ssd1329_spi.Plugin" name="drv_ssd1329_spi" implements="drv_ssd1329_spi">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>SSD1329 SPI OLED Driver</captions>
        <descriptions>Driver for SSD1329 OLED display over SPI</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_spi"/>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/st7637_par/" relativeFileURI="ini/drv_st7637_par.Plugin" name="drv_st7637_par" implements="drv_st7637_par">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>ST7637_PAR LCD Driver</captions>
        <descriptions>Driver for ST7637 color LCD display driver IC with parallel interface</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/stlm75/" relativeFileURI="ini/drv_stlm75.Plugin" name="drv_stlm75" implements="drv_stlm75">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stlm75.c</sourceFiles>
        <captions>LM75 Temperature Sensor</captions>
        <descriptions>LM75 Digital Temperature Sensor &amp; Thermal Watchdog</descriptions>
        <bitmaps>drv_stlm75.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/stmpe811/" relativeFileURI="ini/drv_stmpe811.Plugin" name="drv_stmpe811" implements="drv_stmpe811">
        <sourceFiles>$(SWP_RELPATH)\src\drv_stmpe811.c</sourceFiles>
        <captions>STMPE811 Touchscreen Controller / GPIO Expander</captions>
        <descriptions>STMPE811 touchscreen controller / GPIO expander</descriptions>
        <bitmaps>drv_stmpe811.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/tvp5150/" relativeFileURI="ini/drv_tvp5150.Plugin" name="drv_tvp5150" implements="drv_tvp5150">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>TVP5150 Video Decoder Driver</captions>
        <descriptions>TVP5150 Video Decoder Driver</descriptions>
        <bitmaps>drv_tvp5150.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/adc/" relativeFileURI="ini/drv_adc.Plugin" name="adc" implements="adc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Generic ADC Driver</captions>
        <descriptions>Generic API for using Analog-to-Digital Converters</descriptions>
        <bitmaps>drv_adc.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="adc_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/aes_soft/" relativeFileURI="ini/soft_aes.Plugin" name="soft_aes" implements="soft_aes">
        <sourceFiles>$(SWP_RELPATH)\src\soft_aes.c</sourceFiles>
        <captions>AES Encryption/Decryption</captions>
        <descriptions>Generic, software only AES encryption/decryption</descriptions>
        <bitmaps>soft_aes.bmp</bitmaps>
        <instanceSection multipleLinks="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/can/" relativeFileURI="ini/drv_can.Plugin" name="can" implements="can">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <captions>Generic CAN Driver</captions>
        <descriptions>Generic API for using Controller Area Networks</descriptions>
        <bitmaps>drv_can.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="can_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/dac/" relativeFileURI="ini/drv_dac.Plugin" name="dac" implements="dac">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Generic DAC Driver</captions>
        <descriptions>Generic API for using Digital to Analog Converters</descriptions>
        <bitmaps>drv_dac.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="dac_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/extint/" relativeFileURI="ini/extint.Plugin" name="extint" implements="extint">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <captions>External Interrupt</captions>
        <descriptions>Platform independent generic external interrupt support</descriptions>
        <instanceSection>
          <instanceRequirements interface="ad_extint"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/lrwpan/" relativeFileURI="ini/lrwpan.Plugin" name="lrwpan" implements="lrwpan" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <captions>802.15.4 LR-WPAN</captions>
        <descriptions>Generic low rate wireless PAN driver</descriptions>
        <instanceSection>
          <instanceRequirements interface="lrwpan_radio"/>
          <instanceRequirements interface="aes"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/pwm/" relativeFileURI="ini/drv_pwm.Plugin" name="pwm" implements="pwm">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="interrupts"/>
        <captions>Generic PWM Driver</captions>
        <descriptions>Generic API for using Pulse-Width Modulation</descriptions>
        <bitmaps>drv_pwm.bmp</bitmaps>
        <largeBitmaps>drv_pwm_large.bmp</largeBitmaps>
        <instanceSection>
          <instanceRequirements interface="pwm_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/ramdisk/" relativeFileURI="ini/ramdisk.Plugin" name="ramdisk" implements="ramdisk" manualPlacement="true">
        <captions>RAM Disk</captions>
        <descriptions>Virtual device driver for memory based block devices (i.e. RAM disks)</descriptions>
        <bitmaps>ramdisk.bmp</bitmaps>
        <largeBitmaps>ramdisk_large.bmp</largeBitmaps>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/generic/drivers/rtc/" relativeFileURI="ini/drv_rtc.Plugin" name="rtc" implements="rtc">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Generic RTC Driver</captions>
        <descriptions>Generic API for using Real Time Clocks</descriptions>
        <bitmaps>drv_rtc.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="rtc_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/pal/pal_arch_custom/" relativeFileURI="ini/pal_arch_virtual.Plugin" name="pal_arch_virtual" implements="pal_arch" generatedFileBase="pal_arch_cfg" placeHolder="true">
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/agui/" relativeFileURI="ini/agui.Plugin" name="agui" implements="agui" initHandler="agui_init" initHandlerPriority="1" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>GUI Services</captions>
        <descriptions>Graphical user interface objects</descriptions>
        <bitmaps>agui.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="graphics"/>
          <instanceRequirements interface="pointer"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bluetooth/base/" relativeFileURI="ini/bluetooth.Plugin" name="bluetooth" implements="bluetooth" initHandler="bluetooth_plugin_init" initHandlerPriority="1" userTypeHeaderFile="bluetooth.h">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="posix_threads"/>
        <pluginRequirements interface="usbhost_bluetooth"/>
        <captions>Bluetooth Service</captions>
        <descriptions>Bluetooth Service</descriptions>
        <bitmaps>bluetooth.bmp</bitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="usbhost"/>
          <captions>Bluetooth  Service</captions>
          <descriptions>Bluetooth Service</descriptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bluetooth/bluetooth_hid/" relativeFileURI="ini/bluetooth_hid.Plugin" name="bluetooth_hid" implements="bluetooth_hid">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>Bluetooth HID Service</captions>
        <descriptions>Bluetooth HID service</descriptions>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="bluetooth"/>
          <captions>Bluetooth HID Class</captions>
          <descriptions>Bluetooth HID class</descriptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/base/" relativeFileURI="ini/bsd_network.Plugin" name="bsd_network" implements="bsd_network" initHandler="bsd_subystem_init" initHandlerPriority="1">
        <sourceFiles>$(SWP_RELPATH)\src\swp_timeout.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\swp_tsleep.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\grey.c</sourceFiles>
        <sourceDirs>$(SWP_RELPATH)\bsdsrc</sourceDirs>
        <compileOptions>-H&quot;$(SWP_ABSPATH)\include\stdinc.h&quot;</compileOptions>
        <compileOptions>&quot;-Wc--no-warnings=500,505,507,523,524,525,526,531,536,537,541,544,549,553,556,557,558,560,577,588,589&quot;</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <frameworkCompileOptions>-D_BSD_SOURCE</frameworkCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\bsdsrc\sys&quot;</globalCompileOptions>
        <globalCompileOptions>-D__POSIX_NETWORKING=1</globalCompileOptions>
        <globalCompileOptions>-D__ARCH_LWIP_ERRNO_H__</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="bsd_drv_run"/>
        <pluginRequirements interface="bsd_drv_rum"/>
        <pluginRequirements interface="bsd_drv_otus"/>
        <pluginRequirements interface="bsd_drv_uath"/>
        <pluginRequirements interface="bsd_drv_urtw"/>
        <pluginRequirements interface="posix_threads"/>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="sysutils"/>
        <captions>BSD WiFi Support</captions>
        <descriptions>OpenBSD Components</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/bsd_drivers/atheros/otus/" relativeFileURI="ini/bsd_drv_otus.Plugin" name="bsd_drv_otus" implements="bsd_drv_otus" initHandler="bsd_drv_otus_init" initHandlerPriority="1">
        <frameworkCompileOptions>-DBSD_OTUS</frameworkCompileOptions>
        <locatorOptions>-Wl--import-object=&quot;$(SWP_ABSPATH)\microcode\otus_init.firmware&quot;</locatorOptions>
        <locatorOptions>-Wl--import-object=&quot;$(SWP_ABSPATH)\microcode\otus_main.firmware&quot;</locatorOptions>
        <captions>Atheros otus Driver</captions>
        <descriptions>Atheros AR9001U chipset driver</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/bsd_drivers/atheros/uath/" relativeFileURI="ini/bsd_drv_uath.Plugin" name="bsd_drv_uath" implements="bsd_drv_uath" initHandler="bsd_drv_uath_init" initHandlerPriority="1">
        <captions>Atheros uath Driver</captions>
        <descriptions>Atheros AR5005UG/AR5005UX chipset driver</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/bsd_drivers/ralink/rum/" relativeFileURI="ini/bsd_drv_rum.Plugin" name="bsd_drv_rum" implements="bsd_drv_rum" initHandler="bsd_drv_rum_init" initHandlerPriority="1">
        <captions>Ralink rum Driver</captions>
        <descriptions>Ralink Technology RT2501USB/RT2601USB chipset driver</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/bsd_drivers/ralink/run/" relativeFileURI="ini/bsd_drv_run.Plugin" name="bsd_drv_run" implements="bsd_drv_run" initHandler="bsd_drv_run_init" initHandlerPriority="1">
        <captions>Ralink run Driver</captions>
        <descriptions>Ralink Technology RT2700U/RT2800U/RT3000U chipset driver</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/bsd/bsd_drivers/realtek/urtw/" relativeFileURI="ini/bsd_drv_urtw.Plugin" name="bsd_drv_urtw" implements="bsd_drv_urtw" initHandler="bsd_drv_urtw_init" initHandlerPriority="1">
        <captions>Realtek urtw Driver</captions>
        <descriptions>Realtek RTL8187 chipset driver</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/http/" relativeFileURI="ini/http.Plugin" name="http" implements="http" manualPlacement="true">
        <sourceFiles>$(SWP_RELPATH)\src\http.c</sourceFiles>
        <compileOptions>&quot;-Wc--no-warnings=549&quot;</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="matrixssl"/>
        <captions>HyperText Transfer Protocol</captions>
        <descriptions>HyperText Transfer Protocol</descriptions>
        <bitmaps>http.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="lwip"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/ifconfig/" relativeFileURI="ini/ifconfig.Plugin" name="ifconfig" implements="ifconfig">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>System Interface Configuration</captions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/jpgdecoder/" relativeFileURI="ini/jpgdecoder.Plugin" name="jpgdecoder" implements="jpgdecoder" initHandlerPriority="16" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>JPEG Decoder</captions>
        <descriptions>Software JPEG decoder</descriptions>
        <bitmaps>jpgdecoder.bmp</bitmaps>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/jpgenc/" relativeFileURI="ini/jpgenc.Plugin" name="jpgenc" implements="jpgenc" initHandler="jpgenc_init" initHandlerPriority="16" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>JPEG Encoder</captions>
        <descriptions>Software JPEG encoder</descriptions>
        <bitmaps>jpgenc.bmp</bitmaps>
        <instanceSection/>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/json/" relativeFileURI="ini/json.Plugin" name="json" implements="json">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>&quot;-Wc--no-warnings=549&quot;</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>JSON Parser</captions>
        <descriptions>JSON (JavaScript Object Notation) Parser (yajl 2.0.1)</descriptions>
        <bitmaps>json.bmp</bitmaps>
        <largeBitmaps>json_large.bmp</largeBitmaps>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/location/" relativeFileURI="ini/location.Plugin" name="location" implements="location" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Location Services</captions>
        <descriptions>Location Services</descriptions>
        <bitmaps>location.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="location_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/lwip/" relativeFileURI="ini/lwip.Plugin" name="lwip" implements="lwip" initHandler="lwip_init_plugin" initHandlerPriority="1" manualPlacement="true">
        <sourceFiles>$(SWP_RELPATH)\src\sys_arch.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\lwip.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\adaptors\netif\src\netif_impl.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\memcpyl.c</sourceFiles>
        <sourceDirs>$(SWP_RELPATH)\lwipsrc</sourceDirs>
        <compileOptions>-Wc--no-warnings=500,507,549,556,560,588,589</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\adaptors\netif\include&quot;</frameworkCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\lwipsrc\include&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\lwipsrc\include\ipv4&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\lwipsrc&quot;</globalCompileOptions>
        <pluginRequirements interface="posix_threads"/>
        <pluginRequirements interface="sockfs"/>
        <captions>TCP/IP Networking</captions>
        <descriptions>TCP/IP Internet protocol suite</descriptions>
        <bitmaps>lwip.bmp</bitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="netif"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/matrixssl/" relativeFileURI="ini/matrixssl.Plugin" name="matrixssl" implements="matrixssl">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <compileOptions>&quot;-Wc--no-warnings=544,549,553,588,589&quot;</compileOptions>
        <captions>Matrix SSL / TLS</captions>
        <descriptions>Secure Sockets Layer / Transport Layer Security (MatrixSSL 3.3.0-OPEN / GPL license)</descriptions>
        <bitmaps>matrixssl.bmp</bitmaps>
        <largeBitmaps>matrixssl_large.bmp</largeBitmaps>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/modem/" relativeFileURI="ini/modem.Plugin" name="modem" implements="modem" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="timing"/>
        <captions>Modem Services</captions>
        <descriptions>AT modem and SMS messaging</descriptions>
        <bitmaps>modem.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="serial"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/aes/" relativeFileURI="ini/aes.Plugin" name="aes" implements="aes" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <privateDirs>$(SWP_RELPATH)\internal</privateDirs>
        <captions>AES</captions>
        <descriptions>Generic AES encryption/decryption service</descriptions>
        <instanceSection>
          <instanceRequirements interface="aes_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/canopen/" relativeFileURI="ini/canopen.Plugin" name="canopen" implements="canopen" status="DEPRECATED">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="timing"/>
        <pluginRequirements interface="interrupts"/>
        <captions>CANopen Protocol Service</captions>
        <descriptions>CANopen communication protocol service</descriptions>
        <bitmaps>canopen.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="can"/>
          <instanceRequirements interface="drv_gpio"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/ethernet/" relativeFileURI="ini/ethernet.Plugin" name="ethernet" implements="ethernet">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="ifconfig"/>
        <captions>Ethernet Protocol Services</captions>
        <descriptions>Generic Ethernet Protocol Interface</descriptions>
        <bitmaps>ethernet.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="ethernet_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/gps_nmea/" relativeFileURI="ini/gps_nmea.Plugin" name="gps_nmea" implements="gps_nmea">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>GPS-NMEA Services</captions>
        <descriptions>GPS routines via NMEA protocol</descriptions>
        <bitmaps>gps_nmea.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="serial"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/gps_simcom/" relativeFileURI="ini/gps_simcom.Plugin" name="gps_simcom" implements="gps_simcom">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Simcom AT GPS Service</captions>
        <descriptions>Simcom AT Command GPS functionality</descriptions>
        <bitmaps>gps_simcom.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="modem"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/graphics/" relativeFileURI="ini/graphics.Plugin" name="graphics" implements="graphics" initHandler="" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Graphics Services</captions>
        <descriptions>Graphics routines for line, rectangle, triangle, circle, arc, etc.</descriptions>
        <bitmaps>graphics.bmp</bitmaps>
        <largeBitmaps>graphics_large.bmp</largeBitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="ad_graphics" multipleLinks="true" multipleLinksMax="1" multipleLinksMin="0"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/pointer/" relativeFileURI="ini/pointer.Plugin" name="pointer" implements="pointer">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Pointer Services</captions>
        <descriptions>Generic pointer routines</descriptions>
        <bitmaps>pointer.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="ad_pointer" multipleLinks="true" multipleLinksMax="3"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/touchscreen/" relativeFileURI="ini/touchscreen.Plugin" name="touchscreen" implements="touchscreen">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <captions>Touchscreen Services</captions>
        <descriptions>Generic touchscreen routines, inluding calibration and conversion</descriptions>
        <bitmaps>touchscreen.bmp</bitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="ad_touchscreen"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/ppp/" relativeFileURI="ini/ppp.Plugin" name="ppp" implements="ppp" initHandler="ppp_init" initHandlerPriority="4">
        <sourceFiles>$(SWP_RELPATH)\src\ppp.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\ipcp.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\ppp_api.c</sourceFiles>
        <sourceFiles>$(SWP_RELPATH)\src\ifconfig_ppp.c</sourceFiles>
        <sourceDirs>$(SWP_RELPATH)\lwipsrc\</sourceDirs>
        <compileOptions>-Wc--no-warnings=500,507,549,553,556,560,589,505,577,588</compileOptions>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\lwipsrc\ppp&quot;</globalCompileOptions>
        <globalCompileOptions>-DPPP_SUPPORT=1</globalCompileOptions>
        <captions>Point-to-Point Protocol Services</captions>
        <descriptions>Point-to-Point Protocol (PPP) for Link-level network connections.</descriptions>
        <bitmaps>ppp.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="modem"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/base/" relativeFileURI="ini/usbhost.Plugin" name="usbhost" implements="usbhost" initHandler="usbhost_plugin_init" initHandlerPriority="1" manualPlacement="true" userTypeHeaderFile="usbhost_core.h">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="usbhost_core"/>
        <pluginRequirements interface="usbhost_hub"/>
        <pluginRequirements interface="posix_threads"/>
        <pluginRequirements interface="interrupts"/>
        <pluginRequirements interface="ifconfig"/>
        <captions>USB Host Service</captions>
        <descriptions>USB Host Service</descriptions>
        <bitmaps>usbhost.bmp</bitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="usbhost_adaptor"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_bluetooth/" relativeFileURI="ini/usbhost_bluetooth.Plugin" name="usbhost_bluetooth" implements="usbhost_bluetooth" initHandler="usbhost_bluetooth_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="usbhost"/>
        <captions>USB Host HCI Class Service</captions>
        <descriptions>USB Host HCI Class Service</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_core/" relativeFileURI="ini/usbhost_core.Plugin" name="usbhost_core" implements="usbhost_core">
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="ifconfig"/>
        <captions>USB shared</captions>
        <descriptions>Internal plugin to provide shared USB core definitions</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_hub/" relativeFileURI="ini/usbhost_hub.Plugin" name="usbhost_hub" implements="usbhost_hub" initHandler="usbhost_hub_plugin_init" initHandlerPriority="8">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="timing"/>
        <captions>USB Host Hub Class Service</captions>
        <descriptions>USB Host Hub Class Service</descriptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_keyboard/" relativeFileURI="ini/usbhost_keyboard.Plugin" name="usbhost_keyboard" implements="usbhost_keyboard" initHandler="usbhost_keyboard_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>USB Host Keyboard Class Service</captions>
        <descriptions>USB Host Keyboard Class Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_mouse/" relativeFileURI="ini/usbhost_mouse.Plugin" name="usbhost_mouse" implements="usbhost_mouse" initHandler="usbhost_mouse_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>USB Host Mouse Class Service</captions>
        <descriptions>USB Host Mouse Class Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_msd/" relativeFileURI="ini/usbhost_msd.Plugin" name="usbhost_msd" implements="usbhost_msd" initHandler="usbhost_msd_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="timing"/>
        <captions>USB Host Mass Storage Class Service</captions>
        <descriptions>USB Host Mass Storage Class Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_network/" relativeFileURI="ini/usbhost_network.Plugin" name="usbhost_network" implements="usbhost_network" initHandler="usbhost_network_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="bsd_network"/>
        <pluginRequirements interface="ifconfig"/>
        <captions>USB Host Network Class Service</captions>
        <descriptions>USB Host Network Class Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/usbhost/usbhost_uvc/" relativeFileURI="ini/usbhost_uvc.Plugin" name="usbhost_uvc" implements="usbhost_uvc" initHandler="usbhost_uvc_plugin_init" initHandlerPriority="12">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <globalCompileOptions>-DUSBHOST_ISO_SUPPORT</globalCompileOptions>
        <captions>USB Host Video Class Service</captions>
        <descriptions>USB Host Video Class Service</descriptions>
        <instanceSection>
          <instanceRequirements interface="usbhost"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/uuid/" relativeFileURI="ini/uuid.Plugin" name="drv_uuid" implements="drv_uuid" manualPlacement="true">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>UUID Generator</captions>
        <descriptions>RFC-4122 UUID generator</descriptions>
        <instanceSection>
          <instanceRequirements interface="rtc" multipleLinks="true" multipleLinksMax="1" multipleLinksMin="0"/>
          <instanceRequirements interface="aes" multipleLinks="true" multipleLinksMax="1" multipleLinksMin="0"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_audio_to_cs4322/" relativeFileURI="ini/ad_audio_to_cs4322.Plugin" name="ad_cs4322_to_audio" implements="ad_codec" initHandler="cs4322_to_audio_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the CS4322 driver to AUDIO platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_cs4322"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="adaptors/ad_audio_to_i2sm/" relativeFileURI="ini/ad_audio_to_i2sm.Plugin" name="ad_i2sm_to_audio" implements="ad_audiostream" initHandler="i2sm_to_audio_init" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <descriptions>Adapts the I2SM interface to AUDIO platform level.</descriptions>
        <instanceSection>
          <instanceRequirements interface="drv_i2sm"/>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/platform/audio/" relativeFileURI="ini/audio.Plugin" name="audio" implements="audio" initHandler="" initHandlerPriority="16">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\internal&quot;</frameworkCompileOptions>
        <pluginRequirements interface="timing"/>
        <captions>Audio Service</captions>
        <descriptions>Device independant audio I/O</descriptions>
        <bitmaps>audio.bmp</bitmaps>
        <instanceSection multipleLinks="true">
          <instanceRequirements interface="ad_audiostream"/>
          <instanceRequirements interface="ad_codec" multipleLinks="true" multipleLinksMax="1" multipleLinksMin="0"/>
          <instanceOptions name="samplerate" kind="UINT32" caption="Default sample rate" description="Sample rate as set at initialization, in samples per second." defaultValue="22050" minRange="1" maxRange="96000">
            <autoSets targetOption="SAMPLERATE" targetInterface="drv_i2s"/>
          </instanceOptions>
          <instanceOptions name="channels" kind="ENUM" caption="Default mode" description="Mode to be set at initialization" defaultValue="Mono" type="UINT8">
            <autoSets targetOption="TX_MODE" targetInterface="drv_i2s">
              <autoValueEnums>Mono</autoValueEnums>
              <autoValueEnums>Stereo</autoValueEnums>
            </autoSets>
            <autoSets targetOption="RX_MODE" targetInterface="drv_i2s">
              <autoValueEnums>Mono_Left</autoValueEnums>
              <autoValueEnums>Stereo</autoValueEnums>
            </autoSets>
            <enumItems enum="Mono" enumValue="1" enumDescription="Initialize audio to mono"/>
            <enumItems enum="Stereo" enumValue="2" enumDescription="Initialize audio to stereo"/>
          </instanceOptions>
          <instanceOptions name="samplesize" kind="ENUM" caption="Default sample size" description="Number of bits per sample as set at initialization" defaultValue="8" type="UINT8">
            <autoSets targetOption="QUANTIZATION" targetInterface="drv_i2s">
              <autoValueEnums>16bit</autoValueEnums>
              <autoValueEnums>16bit</autoValueEnums>
              <autoValueEnums>20bit</autoValueEnums>
              <autoValueEnums>24bit</autoValueEnums>
            </autoSets>
            <enumItems enum="8" enumValue="8"/>
            <enumItems enum="16" enumValue="16"/>
            <enumItems enum="20" enumValue="20"/>
            <enumItems enum="24" enumValue="24"/>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/processors/cortex_specials/" relativeFileURI="ini/cortex_specials.Plugin" name="cortex_arch_specials" implements="cortex_arch_specials">
        <captions>Cortex-M Architecture</captions>
        <descriptions>Cortex-M architecture specials</descriptions>
        <bitmaps>cortex_arch_specials.bmp</bitmaps>
        <pluginOptions name="INTERRUPT_MASK" kind="STRING" description="Interrupt enable mask" defaultValue="0-239"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="cstart/carm/" relativeFileURI="ini/cstart.Plugin" name="cstart" implements="cstart">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <captions>ARM C Start</captions>
        <available_Ifs kind="ENVIRONMENT" name="TOOLCHAIN" condition="EQ" value="TASKING ARM"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/external/drivers/cs4322/" relativeFileURI="ini/drv_cs4322.Plugin" name="drv_cs4322" implements="drv_cs4322">
        <sourceFiles>$(SWP_RELPATH)\src\drv_cs4322.c</sourceFiles>
        <captions>CS4322 Audio Codec Driver</captions>
        <descriptions>CS4322 stereo audio CODEC controller driver</descriptions>
        <bitmaps>drv_cs4322.bmp</bitmaps>
        <instanceSection>
          <instanceRequirements interface="drv_i2cm"/>
          <instanceOptions name="I2C_ADDRESS" kind="UINT8" caption="I2C base address" description="Address on the I2C bus" defaultValue="0x94"/>
          <instanceOptions name="I2S_STANDARD" kind="ENUM" caption="I2S Standard" description="Specifies the standard used for the I2S communication" defaultValue="I2S_PHILIPS" type="UINT8">
            <enumItems enum="MSB_JUSTIFIED" enumValue="0x00" enumCaption="MSB justified" enumDescription="Samples are left justified, WS is generated at the same time as the first data bit"/>
            <enumItems enum="I2S_PHILIPS" enumValue="0x04" enumCaption="Philips" enumDescription="Philips standard, WS is generated 1 SCK before first data bit"/>
            <enumItems enum="LSB_JUSTIFIED" enumValue="0x08" enumCaption="LSB justified" enumDescription="Samples are right justified, WS is generated at the same time as the first data bit"/>
          </instanceOptions>
          <instanceOptions name="I2S_DATAFORMAT" kind="ENUM" caption="Data format" description="Specifies the data format for the I2S communication" defaultValue="16BIT" type="UINT8">
            <enumItems enum="24BIT" enumValue="0x00" enumCaption="24 bit" enumDescription="24-bit data"/>
            <enumItems enum="20BIT" enumValue="0x01" enumCaption="20 bit" enumDescription="20-bit data"/>
            <enumItems enum="18BIT" enumValue="0x02" enumCaption="18 bit" enumDescription="18-bit data"/>
            <enumItems enum="16BIT" enumValue="0x03" enumCaption="16 bit" enumDescription="16-bit data"/>
          </instanceOptions>
          <instanceOptions name="I2S_CPOL" kind="ENUM" caption="Clock polarity" description="Specifies the idle state of the I2S clock" defaultValue="Low" type="UINT8">
            <enumItems enum="Low" enumValue="0x00"/>
            <enumItems enum="High" enumValue="0x40"/>
          </instanceOptions>
        </instanceSection>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/pal/interrupts/" relativeFileURI="ini/interrupts.Plugin" name="interrupts" implements="interrupts">
        <sourceFiles>$(SWP_RELPATH)\src\interrupts.c</sourceFiles>
        <frameworkCompileOptions>-DPAL_INTERRUPTS</frameworkCompileOptions>
        <pluginRequirements interface="pal"/>
        <captions>Interrupt Management</captions>
        <descriptions>Interrupt management routines</descriptions>
        <pluginOptions name="VECTOR_BASE" kind="UINT16" caption="Vector Base Address" description="The base address where the interrupt vector table will be located in internal processor memory. This value will be written to the 16-bit exception base register ($EB) during startup. All vector table slots in use will be located relative to this address. By default the base address is 0x100." defaultValue="0x100" minRange="0x8" generateLinkerDefine="__EXCEPTION_BASE" noGenerate="true">
          <available_Ifs kind="ENVIRONMENT" name="TOOLCHAIN" condition="EQ" value="TASKING 3000"/>
        </pluginOptions>
        <pluginOptions name="APPLICATION_MASK" kind="UINT32" caption="Application ISR Mask" description="Interrupt mask for interrupts not part of the software plaform. Set the N-th bit in this mask (31..0) if your application defines a handler (ISR) for interrupt N. Examples: specify 0x8 for interrupt 3, specify 0xA for interrupts 1 and 3." defaultValue="0x0"/>
        <pluginOptions name="MAX_HANDLERS" kind="UINT8" caption="Maximum Number of Interrupt Handlers" description="The maximum number of interrupt handlers simultaneously in use by the application." defaultValue="32" minRange="1"/>
        <pluginOptions name="HASH_SIZE" kind="UINT8" caption="Interrupt Handler Entry Table Size" description="Internal hash table for interrupt handler lookup. To be able to limit the amount of memory used by interrupt handling functionality." defaultValue="32" minRange="1"/>
        <pluginOptions name="EXCEPTION_ADDRESS" kind="UINT32" caption="Exception Address" description="Processor Exception Address" defaultValue="0x100" minRange="0" maxRange="4294967292">
          <available_Ifs kind="ENVIRONMENT" name="TOOLCHAIN" condition="EQ" value="TASKING NiosII"/>
        </pluginOptions>
        <pluginOptions name="INTRHANDLERMODE" kind="ENUM" caption="Handler Mode" description="Interrupt handler location and operation. Normal: exception handler is at 'Exception Address'. Jumped: At 'Exception Address' there is a jump to the exception handler, exception handler is at 'Jump Address'. Jump only: only the jump to the exception handler is in the program (code containing the exception handler will be loaded later). Handler only: only the exception handler is in the code, the jump to the handler from the exception address is handled by code that's not part of the program." defaultValue="Normal">
          <available_Ifs kind="ENVIRONMENT" name="TOOLCHAIN" condition="EQ" value="TASKING NiosII"/>
          <enumItems enum="Normal" enumDescription="Interrupt handler at 'Exception Address'"/>
          <enumItems enum="Jumped" enumDescription="Jump to interrupt handler at 'Exception Address', interrupt handler at 'Jump Address'"/>
          <enumItems enum="Jumped_Jump_Only" enumDescription="Jump to 'Jump Address' at 'Exception Address', no actual interrupt handler"/>
          <enumItems enum="Jumped_Destination_Only" enumDescription="Interrupt handler at 'Jump Address', no code to jump to interrupt handler"/>
        </pluginOptions>
        <pluginOptions name="EXCEPTION_HANDLER_ADDRESS" kind="UINT32" caption="Jump Address" description="Address for exception handler. Used when Mode equals 'Jumped' or 'Jumped_Destination_Only'. Jump code is at 'Exception Address' handler code is at 'Jump Address'" defaultValue="0x01000100">
          <available_Ifs kind="ENVIRONMENT" name="TOOLCHAIN" condition="EQ" value="TASKING NiosII"/>
        </pluginOptions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/pal/base/" relativeFileURI="ini/pal.Plugin" name="pal" implements="pal" initHandler="pal_init" initHandlerPriority="128">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <frameworkCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</frameworkCompileOptions>
        <pluginRequirements interface="pal_arch"/>
        <captions>PAL Services</captions>
        <descriptions>Processor Abstraction Layer</descriptions>
        <bitmaps>pal.bmp</bitmaps>
        <pluginOptions name="CLOCKHZ" kind="UINT32" caption="Processor Clock (Hz)" description="Frequency of the processor clock in Hz. Used in timing calculations." defaultValue="50000000"/>
        <pluginOptions name="USETIMERS" kind="BOOLEAN" defaultValue="False">
          <available_Ifs kind="INTERFACE" name="timing" condition="EQ"/>
        </pluginOptions>
        <pluginOptions name="INTERRUPT_CONTROL_CFG" kind="UINT32" description="Interrupt enable\disable mask" defaultValue="0" auto="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/discrete/processors/cortex/" relativeFileURI="ini/pal_arch_cortex.Plugin" name="pal_arch_cortex" implements="pal_arch" generatedFileBase="pal_arch_cfg">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <pluginRequirements interface="pal_arch_cortex_variant"/>
        <pluginRequirements interface="cortex_arch_specials">
          <require_Ifs kind="ENVIRONMENT" name="ARCHITECTURE" condition="REQ" value="ARMv7E?M"/>
        </pluginRequirements>
        <captions>Cortex M architecture</captions>
        <descriptions>PAL implements the Cortex M architecture</descriptions>
        <bitmaps>pal_arch_cortex.bmp</bitmaps>
        <available_Ifs kind="ENVIRONMENT" name="ARCHITECTURE" condition="REQ" value="ARMv(6|7|7E)M"/>
        <pluginOptions name="LSLSECTION" kind="STRING" autoValue="linear" noGenerate="true"/>
      </pluginFiles>
      <pluginFiles relativeRootURI="services/sysutils/" relativeFileURI="ini/sysutils.Plugin" name="sysutils" implements="sysutils">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <globalCompileOptions>-I&quot;$(SWP_ABSPATH)\include&quot;</globalCompileOptions>
        <captions>System Utilities</captions>
      </pluginFiles>
      <pluginFiles relativeRootURI="platform/pal/timing/" relativeFileURI="ini/timing.Plugin" name="timing" implements="timing">
        <sourceDirs>$(SWP_RELPATH)\src</sourceDirs>
        <pluginRequirements interface="pal"/>
        <pluginRequirements interface="interrupts"/>
        <captions>Software Timing Services</captions>
        <descriptions>Clock, delays, elapsed time, periodic software timers</descriptions>
        <pluginOptions name="clockhz" kind="UINT32" caption="Processor Clock (Hz)" description="Frequency of the processor clock in Hz. Used in timing calculations." defaultValue="50000000">
          <autoSets targetOption="clockhz" targetInterface="pal"/>
        </pluginOptions>
        <pluginOptions name="USETIMERS" kind="BOOLEAN" caption="Use software timers" description="The application uses (y/n) periodic software timers. You can leave this box unchecked if you are only using clock, delays or elapsed time measuring." defaultValue="False">
          <autoSets targetOption="USETIMERS" targetInterface="pal"/>
        </pluginOptions>
        <pluginOptions name="MAX" kind="UINT8" caption="Max Timers" description="Maximum simultaneous number of software timers" defaultValue="4" minRange="4" maxRange="32">
          <available_Ifs kind="OPTION" name="USETIMERS" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="PALBASE" kind="UINT32" codeName="BASE" caption="Base (microscs)" description="The base period unit for software timers" defaultValue="1000" minRange="100" maxRange="1000000">
          <available_Ifs kind="INTERFACE" name="posix_threads" condition="NE"/>
          <available_Ifs kind="OPTION" name="USETIMERS" condition="EQ" value="True"/>
        </pluginOptions>
        <pluginOptions name="OSBASE" kind="UINT32" codeName="BASE" caption="Base (microscs)" description="The base period unit for software timers" autoValue="posix_threads.OSTICKMICROSCS">
          <available_Ifs kind="INTERFACE" name="posix_threads" condition="EQ"/>
          <available_Ifs kind="OPTION" name="USETIMERS" condition="EQ" value="True"/>
        </pluginOptions>
      </pluginFiles>
    </repositories>
  </com.tasking.swp.builder.repomodel:SwpRepositoryCollection>
</xmi:XMI>
